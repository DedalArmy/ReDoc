#-------------------------------------------------------------------------------
# Copyright (C) 2019 IMT Mines Al√®s
# 
# This program and the accompanying materials are made
# available under the terms of the Eclipse Public License 2.0
# which is available at https://www.eclipse.org/legal/epl-2.0/
# 
# SPDX-License-Identifier: EPL-2.0
#-------------------------------------------------------------------------------
@startuml

package fr.ema.dedal.dedalToB {
	class fr.ema.dedal.dedalToB.Activator {
		+String PLUGIN_ID
		-Activator plugin
		+void start(BundleContext)
		+void stop(BundleContext)
		+Activator getDefault()
	}
}

package fr.ema.dedal.dedalToB.main {
	class fr.ema.dedal.dedalToB.main.GenerateAll {
		+String MODULE_FILE_NAME
		+String TEMPLATE_NAMES
		-List<String> propertiesFiles
		+void main(String[])
		+void doGenerate(Monitor)
		+List<IAcceleoTextGenerationListener> getGenerationListeners()
		+IAcceleoGenerationStrategy getGenerationStrategy()
		+String getModuleName()
		+List<String> getProperties()
		+void addPropertiesFile(String)
		+String[] getTemplateNames()
		+void registerPackages(ResourceSet)
		+void registerResourceFactories(ResourceSet)
	}
	class fr.ema.dedal.dedalToB.main.GenerateArchConcepts {
		+String MODULE_FILE_NAME
		+String TEMPLATE_NAMES
		-List<String> propertiesFiles
		+void main(String[])
		+void doGenerate(Monitor)
		+List<IAcceleoTextGenerationListener> getGenerationListeners()
		+IAcceleoGenerationStrategy getGenerationStrategy()
		+String getModuleName()
		+List<String> getProperties()
		+void addPropertiesFile(String)
		+String[] getTemplateNames()
		+void registerPackages(ResourceSet)
		+void registerResourceFactories(ResourceSet)
	}
	class fr.ema.dedal.dedalToB.main.GenerateArchSpec {
		+String MODULE_FILE_NAME
		+String TEMPLATE_NAMES
		-List<String> propertiesFiles
		+void main(String[])
		+void doGenerate(Monitor)
		+List<IAcceleoTextGenerationListener> getGenerationListeners()
		+IAcceleoGenerationStrategy getGenerationStrategy()
		+String getModuleName()
		+List<String> getProperties()
		+void addPropertiesFile(String)
		+String[] getTemplateNames()
		+void registerPackages(ResourceSet)
		+void registerResourceFactories(ResourceSet)
	}
	class fr.ema.dedal.dedalToB.main.MGenerateArchAssm {
		+String MODULE_FILE_NAME
		+String TEMPLATE_NAMES
		-List<String> propertiesFiles
		+void main(String[])
		+void doGenerate(Monitor)
		+List<IAcceleoTextGenerationListener> getGenerationListeners()
		+IAcceleoGenerationStrategy getGenerationStrategy()
		+String getModuleName()
		+List<String> getProperties()
		+void addPropertiesFile(String)
		+String[] getTemplateNames()
		+void registerPackages(ResourceSet)
		+void registerResourceFactories(ResourceSet)
	}
	class fr.ema.dedal.dedalToB.main.MGenerateArchConfig {
		+String MODULE_FILE_NAME
		+String TEMPLATE_NAMES
		-List<String> propertiesFiles
		+void main(String[])
		+void doGenerate(Monitor)
		+List<IAcceleoTextGenerationListener> getGenerationListeners()
		+IAcceleoGenerationStrategy getGenerationStrategy()
		+String getModuleName()
		+List<String> getProperties()
		+void addPropertiesFile(String)
		+String[] getTemplateNames()
		+void registerPackages(ResourceSet)
		+void registerResourceFactories(ResourceSet)
	}
}

package defaultpackage {
	class defaultpackage.Activator {
		+String PLUGIN_ID
		-Activator plugin
		-Set<Viewpoint> viewpoints
		+void start(BundleContext)
		+void stop(BundleContext)
		+Activator getDefault()
	}
	class defaultpackage.ChangeParser {
		~String repo
		+void parse(List)
		+void parse(List, DedalDiagram)
	}
	class defaultpackage.DedalManager {
		-Api api
		-ClassicalBModel bModel
		-Trace trace
		-boolean initialization
		-String changeArtifact
		-String initialChangeLevel
		+String EVOLUTION_MANAGER_FILE
		+void initializeModel(String, String, String)
		+List<Transition> findInitialChange(String, String, String)
		+List<Transition> findPropagatedChange(String, String)
		+List<Transition> findLocalChangeWithHeuristic(String, String, String)
		+List<Transition> findPropagatedChangeWithHeuristic(String, String)
		-String findPropagatedMainArtifact(String)
		+Api getApi()
		+ClassicalBModel getbModel()
		+Trace getTrace()
	}
	class defaultpackage.EMFModelLoad {
		-String path
		+DedalDiagram load()
		+ArchitectureDescription ArchitectureDescriptionLoad(DedalDiagram, String)
		+Repository RepositoryLoad(DedalDiagram, String)
		+ArchitectureDescription ArchitectureDescriptionLoad(String)
		+void save(DedalDiagram)
	}
	class defaultpackage.StateTransition {
		-int stateId
		-int transitionId
		+int getStateId()
		+int getTransitionId()
	}
}

package fr.ema.dedal.design {
	class fr.ema.dedal.design.ExternalJavaActionTest {
		+void execute(Collection, Map)
		+boolean canExecute(Collection)
	}
	class fr.ema.dedal.design.OpenEmbeddedEditor {
		#Injector getInjector()
	}
}

package fr.ema.dedal.design.templates {
	class fr.ema.dedal.design.templates.DedalServices {
		+DedalManager animationHandler
		+List<String> evolutionPlan
		+DedalDiagram dedalInstance
		-Specification archSpec
		-Configuration archConfig
		-Assembly archAssm
		+void generateBModel(DedalDiagram)
		+void checkArchConsistency(ArchitectureDescription)
		+void requestChange(CompClass)
		+void requestChange(CompRole)
		+void requestChange(CompInstance)
		+void explore(DedalDiagram)
	}
}

package dedal {
	interface dedal.ArchitectureDescription {
		~String getName()
		~void setName(String)
		~EList<InterfaceType> getInterfaceTypes()
	}
	interface dedal.Assembly {
		~EList<CompInstance> getAssmComponents()
		~Configuration getInstantiates()
		~void setInstantiates(Configuration)
		~EList<InstConnection> getAssemblyConnections()
	}
	interface dedal.Attribute {
		~String getName()
		~void setName(String)
		~String getType()
		~void setType(String)
	}
	enum dedal.ATTRIBUTE_TYPE {
		/**
 *  The '<em><b>BOOLEAN</b></em>' literal object.
 *  <!-- begin-user-doc -->
 *  <!-- end-user-doc -->
 *  @see #BOOLEAN_VALUE
 *  @generated
 *  @ordered
 */
BOOLEAN(0, "BOOLEAN", "BOOLEAN")
		/**
 *  The '<em><b>BYTE</b></em>' literal object.
 *  <!-- begin-user-doc -->
 *  <!-- end-user-doc -->
 *  @see #BYTE_VALUE
 *  @generated
 *  @ordered
 */
BYTE(1, "BYTE", "BYTE")
		/**
 *  The '<em><b>CHAR</b></em>' literal object.
 *  <!-- begin-user-doc -->
 *  <!-- end-user-doc -->
 *  @see #CHAR_VALUE
 *  @generated
 *  @ordered
 */
CHAR(2, "CHAR", "CHAR")
		/**
 *  The '<em><b>SHORT</b></em>' literal object.
 *  <!-- begin-user-doc -->
 *  <!-- end-user-doc -->
 *  @see #SHORT_VALUE
 *  @generated
 *  @ordered
 */
SHORT(3, "SHORT", "SHORT")
		/**
 *  The '<em><b>INT</b></em>' literal object.
 *  <!-- begin-user-doc -->
 *  <!-- end-user-doc -->
 *  @see #INT_VALUE
 *  @generated
 *  @ordered
 */
INT(4, "INT", "INT")
		/**
 *  The '<em><b>FLOAT</b></em>' literal object.
 *  <!-- begin-user-doc -->
 *  <!-- end-user-doc -->
 *  @see #FLOAT_VALUE
 *  @generated
 *  @ordered
 */
FLOAT(5, "FLOAT", "FLOAT")
		/**
 *  The '<em><b>LONG</b></em>' literal object.
 *  <!-- begin-user-doc -->
 *  <!-- end-user-doc -->
 *  @see #LONG_VALUE
 *  @generated
 *  @ordered
 */
LONG(6, "LONG", "LONG")
		/**
 *  The '<em><b>DOUBLE</b></em>' literal object.
 *  <!-- begin-user-doc -->
 *  <!-- end-user-doc -->
 *  @see #DOUBLE_VALUE
 *  @generated
 *  @ordered
 */
DOUBLE(7, "DOUBLE", "DOUBLE")
		/**
 *  The '<em><b>STRING</b></em>' literal object.
 *  <!-- begin-user-doc -->
 *  <!-- end-user-doc -->
 *  @see #STRING_VALUE
 *  @generated
 *  @ordered
 */
STRING(8, "STRING", "STRING")
		/**
 *  The '<em><b>CLASS NAME</b></em>' literal object.
 *  <!-- begin-user-doc -->
 *  <!-- end-user-doc -->
 *  @see #CLASS_NAME_VALUE
 *  @generated
 *  @ordered
 */
CLASS_NAME(9, "CLASS_NAME", "CLASS_NAME")
		/**
 *  The '<em><b>INTERFACE NAME</b></em>' literal object.
 *  <!-- begin-user-doc -->
 *  <!-- end-user-doc -->
 *  @see #INTERFACE_NAME_VALUE
 *  @generated
 *  @ordered
 */
INTERFACE_NAME(10, "INTERFACE_NAME", "INTERFACE_NAME")
	}
	interface dedal.ClassConnection {
		~CompClass getClientClassElem()
		~void setClientClassElem(CompClass)
		~CompClass getServerClassElem()
		~void setServerClassElem(CompClass)
	}
	interface dedal.CompClass {
		~EList<CompRole> getRealizes()
		~CompType getImplements()
		~void setImplements(CompType)
		~EList<Attribute> getAttributes()
		~CompInstance getContent()
		~void setContent(CompInstance)
	}
	interface dedal.CompInstance {
		~CompClass getInstantiates()
		~void setInstantiates(CompClass)
		~CompRole getRole()
		~void setRole(CompRole)
	}
	interface dedal.Component {
		~String getName()
		~void setName(String)
		~EList<Interaction> getCompInterfaces()
		~String getId()
		~void setId(String)
	}
	interface dedal.CompositeCompClass {
		~Configuration getUses()
		~void setUses(Configuration)
		~EList<Interaction> getDelegatedInterfaces()
	}
	interface dedal.CompositePort {
		~EList<Port> getPorts()
	}
	interface dedal.CompRole {
		~int getMinInstanceNbr()
		~void setMinInstanceNbr(int)
		~int getMaxInstanceNbr()
		~void setMaxInstanceNbr(int)
	}
	interface dedal.CompType {
	}
	interface dedal.Configuration {
		~EList<CompClass> getConfigComponents()
		~EList<Specification> getImplements()
		~EList<ClassConnection> getConfigConnections()
		~EList<CompType> getComptypes()
	}
	interface dedal.Connection {
		~Interaction getServerIntElem()
		~void setServerIntElem(Interaction)
		~Interaction getClientIntElem()
		~void setClientIntElem(Interaction)
		~String getRefID()
		~void setRefID(String)
		~String getProperty()
		~void setProperty(String)
	}
	interface dedal.DedalDiagram {
		~EList<ArchitectureDescription> getArchitectureDescriptions()
		~String getName()
		~void setName(String)
		~EList<Repository> getRepositories()
	}
	interface dedal.DedalFactory {
		~DedalFactory eINSTANCE
		~Interface createInterface()
		~Port createPort()
		~CompositePort createCompositePort()
		~InterfaceType createInterfaceType()
		~Signature createSignature()
		~Parameter createParameter()
		~Specification createSpecification()
		~Configuration createConfiguration()
		~Assembly createAssembly()
		~CompRole createCompRole()
		~CompClass createCompClass()
		~CompInstance createCompInstance()
		~RoleConnection createRoleConnection()
		~ClassConnection createClassConnection()
		~InstConnection createInstConnection()
		~DedalDiagram createDedalDiagram()
		~CompositeCompClass createCompositeCompClass()
		~CompType createCompType()
		~Repository createRepository()
		~Attribute createAttribute()
		~DedalPackage getDedalPackage()
	}
	interface dedal.DedalPackage {
		~String eNAME
		~String eNS_URI
		~String eNS_PREFIX
		~DedalPackage eINSTANCE
		~int ARCHITECTURE_DESCRIPTION
		~int ARCHITECTURE_DESCRIPTION__NAME
		~int ARCHITECTURE_DESCRIPTION__INTERFACE_TYPES
		~int ARCHITECTURE_DESCRIPTION_FEATURE_COUNT
		~int ARCHITECTURE_DESCRIPTION_OPERATION_COUNT
		~int COMPONENT
		~int COMPONENT__NAME
		~int COMPONENT__COMP_INTERFACES
		~int COMPONENT__ID
		~int COMPONENT_FEATURE_COUNT
		~int COMPONENT_OPERATION_COUNT
		~int CONNECTION
		~int CONNECTION__SERVER_INT_ELEM
		~int CONNECTION__CLIENT_INT_ELEM
		~int CONNECTION__REF_ID
		~int CONNECTION__PROPERTY
		~int CONNECTION_FEATURE_COUNT
		~int CONNECTION_OPERATION_COUNT
		~int INTERACTION
		~int INTERACTION__NAME
		~int INTERACTION_FEATURE_COUNT
		~int INTERACTION_OPERATION_COUNT
		~int INTERFACE
		~int INTERFACE__NAME
		~int INTERFACE__DIRECTION
		~int INTERFACE__TYPE
		~int INTERFACE__DELEGATION
		~int INTERFACE__INSTANTIATES
		~int INTERFACE_FEATURE_COUNT
		~int INTERFACE_OPERATION_COUNT
		~int PORT
		~int PORT__NAME
		~int PORT__INTERFACES
		~int PORT_FEATURE_COUNT
		~int PORT_OPERATION_COUNT
		~int COMPOSITE_PORT
		~int COMPOSITE_PORT__NAME
		~int COMPOSITE_PORT__INTERFACES
		~int COMPOSITE_PORT__PORTS
		~int COMPOSITE_PORT_FEATURE_COUNT
		~int COMPOSITE_PORT_OPERATION_COUNT
		~int INTERFACE_TYPE
		~int INTERFACE_TYPE__NAME
		~int INTERFACE_TYPE__SIGNATURES
		~int INTERFACE_TYPE_FEATURE_COUNT
		~int INTERFACE_TYPE_OPERATION_COUNT
		~int SIGNATURE
		~int SIGNATURE__NAME
		~int SIGNATURE__TYPE
		~int SIGNATURE__PARAMETERS
		~int SIGNATURE__ID
		~int SIGNATURE_FEATURE_COUNT
		~int SIGNATURE_OPERATION_COUNT
		~int PARAMETER
		~int PARAMETER__NAME
		~int PARAMETER__TYPE
		~int PARAMETER__ID
		~int PARAMETER_FEATURE_COUNT
		~int PARAMETER_OPERATION_COUNT
		~int SPECIFICATION
		~int SPECIFICATION__NAME
		~int SPECIFICATION__INTERFACE_TYPES
		~int SPECIFICATION__SPEC_COMPONENTS
		~int SPECIFICATION__SPEC_CONNECTIONS
		~int SPECIFICATION_FEATURE_COUNT
		~int SPECIFICATION_OPERATION_COUNT
		~int CONFIGURATION
		~int CONFIGURATION__NAME
		~int CONFIGURATION__INTERFACE_TYPES
		~int CONFIGURATION__CONFIG_COMPONENTS
		~int CONFIGURATION__IMPLEMENTS
		~int CONFIGURATION__CONFIG_CONNECTIONS
		~int CONFIGURATION__COMPTYPES
		~int CONFIGURATION_FEATURE_COUNT
		~int CONFIGURATION_OPERATION_COUNT
		~int ASSEMBLY
		~int ASSEMBLY__NAME
		~int ASSEMBLY__INTERFACE_TYPES
		~int ASSEMBLY__ASSM_COMPONENTS
		~int ASSEMBLY__INSTANTIATES
		~int ASSEMBLY__ASSEMBLY_CONNECTIONS
		~int ASSEMBLY_FEATURE_COUNT
		~int ASSEMBLY_OPERATION_COUNT
		~int COMP_ROLE
		~int COMP_ROLE__NAME
		~int COMP_ROLE__COMP_INTERFACES
		~int COMP_ROLE__ID
		~int COMP_ROLE__MIN_INSTANCE_NBR
		~int COMP_ROLE__MAX_INSTANCE_NBR
		~int COMP_ROLE_FEATURE_COUNT
		~int COMP_ROLE_OPERATION_COUNT
		~int COMP_CLASS
		~int COMP_CLASS__NAME
		~int COMP_CLASS__COMP_INTERFACES
		~int COMP_CLASS__ID
		~int COMP_CLASS__REALIZES
		~int COMP_CLASS__IMPLEMENTS
		~int COMP_CLASS__ATTRIBUTES
		~int COMP_CLASS__CONTENT
		~int COMP_CLASS_FEATURE_COUNT
		~int COMP_CLASS_OPERATION_COUNT
		~int COMP_INSTANCE
		~int COMP_INSTANCE__NAME
		~int COMP_INSTANCE__COMP_INTERFACES
		~int COMP_INSTANCE__ID
		~int COMP_INSTANCE__INSTANTIATES
		~int COMP_INSTANCE__ROLE
		~int COMP_INSTANCE_FEATURE_COUNT
		~int COMP_INSTANCE_OPERATION_COUNT
		~int ROLE_CONNECTION
		~int ROLE_CONNECTION__SERVER_INT_ELEM
		~int ROLE_CONNECTION__CLIENT_INT_ELEM
		~int ROLE_CONNECTION__REF_ID
		~int ROLE_CONNECTION__PROPERTY
		~int ROLE_CONNECTION__CLIENT_COMP_ELEM
		~int ROLE_CONNECTION__SERVER_COMP_ELEM
		~int ROLE_CONNECTION_FEATURE_COUNT
		~int ROLE_CONNECTION_OPERATION_COUNT
		~int CLASS_CONNECTION
		~int CLASS_CONNECTION__SERVER_INT_ELEM
		~int CLASS_CONNECTION__CLIENT_INT_ELEM
		~int CLASS_CONNECTION__REF_ID
		~int CLASS_CONNECTION__PROPERTY
		~int CLASS_CONNECTION__CLIENT_CLASS_ELEM
		~int CLASS_CONNECTION__SERVER_CLASS_ELEM
		~int CLASS_CONNECTION_FEATURE_COUNT
		~int CLASS_CONNECTION_OPERATION_COUNT
		~int INST_CONNECTION
		~int INST_CONNECTION__SERVER_INT_ELEM
		~int INST_CONNECTION__CLIENT_INT_ELEM
		~int INST_CONNECTION__REF_ID
		~int INST_CONNECTION__PROPERTY
		~int INST_CONNECTION__CLIENT_INST_ELEM
		~int INST_CONNECTION__SERVER_INST_ELEM
		~int INST_CONNECTION_FEATURE_COUNT
		~int INST_CONNECTION_OPERATION_COUNT
		~int DEDAL_DIAGRAM
		~int DEDAL_DIAGRAM__ARCHITECTURE_DESCRIPTIONS
		~int DEDAL_DIAGRAM__NAME
		~int DEDAL_DIAGRAM__REPOSITORIES
		~int DEDAL_DIAGRAM_FEATURE_COUNT
		~int DEDAL_DIAGRAM_OPERATION_COUNT
		~int COMPOSITE_COMP_CLASS
		~int COMPOSITE_COMP_CLASS__NAME
		~int COMPOSITE_COMP_CLASS__COMP_INTERFACES
		~int COMPOSITE_COMP_CLASS__ID
		~int COMPOSITE_COMP_CLASS__REALIZES
		~int COMPOSITE_COMP_CLASS__IMPLEMENTS
		~int COMPOSITE_COMP_CLASS__ATTRIBUTES
		~int COMPOSITE_COMP_CLASS__CONTENT
		~int COMPOSITE_COMP_CLASS__USES
		~int COMPOSITE_COMP_CLASS__DELEGATED_INTERFACES
		~int COMPOSITE_COMP_CLASS_FEATURE_COUNT
		~int COMPOSITE_COMP_CLASS_OPERATION_COUNT
		~int COMP_TYPE
		~int COMP_TYPE__NAME
		~int COMP_TYPE__COMP_INTERFACES
		~int COMP_TYPE__ID
		~int COMP_TYPE_FEATURE_COUNT
		~int COMP_TYPE_OPERATION_COUNT
		~int REPOSITORY
		~int REPOSITORY__NAME
		~int REPOSITORY__COMPONENTS
		~int REPOSITORY__INTERFACE_TYPES
		~int REPOSITORY_FEATURE_COUNT
		~int REPOSITORY_OPERATION_COUNT
		~int ATTRIBUTE
		~int ATTRIBUTE__NAME
		~int ATTRIBUTE__TYPE
		~int ATTRIBUTE_FEATURE_COUNT
		~int ATTRIBUTE_OPERATION_COUNT
		~int DIRECTION
		~int ATTRIBUTE_TYPE
		~EClass getArchitectureDescription()
		~EAttribute getArchitectureDescription_Name()
		~EReference getArchitectureDescription_InterfaceTypes()
		~EClass getComponent()
		~EAttribute getComponent_Name()
		~EReference getComponent_CompInterfaces()
		~EAttribute getComponent_Id()
		~EClass getConnection()
		~EReference getConnection_ServerIntElem()
		~EReference getConnection_ClientIntElem()
		~EAttribute getConnection_RefID()
		~EAttribute getConnection_Property()
		~EClass getInterface()
		~EAttribute getInterface_Direction()
		~EReference getInterface_Type()
		~EReference getInterface_Delegation()
		~EReference getInterface_Instantiates()
		~EClass getInteraction()
		~EAttribute getInteraction_Name()
		~EClass getPort()
		~EReference getPort_Interfaces()
		~EClass getCompositePort()
		~EReference getCompositePort_Ports()
		~EClass getInterfaceType()
		~EAttribute getInterfaceType_Name()
		~EReference getInterfaceType_Signatures()
		~EClass getSignature()
		~EAttribute getSignature_Name()
		~EAttribute getSignature_Type()
		~EReference getSignature_Parameters()
		~EAttribute getSignature_Id()
		~EClass getParameter()
		~EAttribute getParameter_Name()
		~EAttribute getParameter_Type()
		~EAttribute getParameter_Id()
		~EClass getSpecification()
		~EReference getSpecification_SpecComponents()
		~EReference getSpecification_SpecConnections()
		~EClass getConfiguration()
		~EReference getConfiguration_ConfigComponents()
		~EReference getConfiguration_Implements()
		~EReference getConfiguration_ConfigConnections()
		~EReference getConfiguration_Comptypes()
		~EClass getAssembly()
		~EReference getAssembly_AssmComponents()
		~EReference getAssembly_Instantiates()
		~EReference getAssembly_AssemblyConnections()
		~EClass getCompRole()
		~EAttribute getCompRole_MinInstanceNbr()
		~EAttribute getCompRole_MaxInstanceNbr()
		~EClass getCompClass()
		~EReference getCompClass_Realizes()
		~EReference getCompClass_Implements()
		~EReference getCompClass_Attributes()
		~EReference getCompClass_Content()
		~EClass getCompInstance()
		~EReference getCompInstance_Instantiates()
		~EReference getCompInstance_Role()
		~EClass getRoleConnection()
		~EReference getRoleConnection_ClientCompElem()
		~EReference getRoleConnection_ServerCompElem()
		~EClass getClassConnection()
		~EReference getClassConnection_ClientClassElem()
		~EReference getClassConnection_ServerClassElem()
		~EClass getInstConnection()
		~EReference getInstConnection_ClientInstElem()
		~EReference getInstConnection_ServerInstElem()
		~EClass getDedalDiagram()
		~EReference getDedalDiagram_ArchitectureDescriptions()
		~EAttribute getDedalDiagram_Name()
		~EReference getDedalDiagram_Repositories()
		~EClass getCompositeCompClass()
		~EReference getCompositeCompClass_Uses()
		~EReference getCompositeCompClass_DelegatedInterfaces()
		~EClass getCompType()
		~EClass getRepository()
		~EAttribute getRepository_Name()
		~EReference getRepository_Components()
		~EReference getRepository_InterfaceTypes()
		~EClass getAttribute()
		~EAttribute getAttribute_Name()
		~EAttribute getAttribute_Type()
		~EEnum getDIRECTION()
		~EEnum getATTRIBUTE_TYPE()
		~DedalFactory getDedalFactory()
	}
	interface dedal.Literals {
		~EClass ARCHITECTURE_DESCRIPTION
		~EAttribute ARCHITECTURE_DESCRIPTION__NAME
		~EReference ARCHITECTURE_DESCRIPTION__INTERFACE_TYPES
		~EClass COMPONENT
		~EAttribute COMPONENT__NAME
		~EReference COMPONENT__COMP_INTERFACES
		~EAttribute COMPONENT__ID
		~EClass CONNECTION
		~EReference CONNECTION__SERVER_INT_ELEM
		~EReference CONNECTION__CLIENT_INT_ELEM
		~EAttribute CONNECTION__REF_ID
		~EAttribute CONNECTION__PROPERTY
		~EClass INTERFACE
		~EAttribute INTERFACE__DIRECTION
		~EReference INTERFACE__TYPE
		~EReference INTERFACE__DELEGATION
		~EReference INTERFACE__INSTANTIATES
		~EClass INTERACTION
		~EAttribute INTERACTION__NAME
		~EClass PORT
		~EReference PORT__INTERFACES
		~EClass COMPOSITE_PORT
		~EReference COMPOSITE_PORT__PORTS
		~EClass INTERFACE_TYPE
		~EAttribute INTERFACE_TYPE__NAME
		~EReference INTERFACE_TYPE__SIGNATURES
		~EClass SIGNATURE
		~EAttribute SIGNATURE__NAME
		~EAttribute SIGNATURE__TYPE
		~EReference SIGNATURE__PARAMETERS
		~EAttribute SIGNATURE__ID
		~EClass PARAMETER
		~EAttribute PARAMETER__NAME
		~EAttribute PARAMETER__TYPE
		~EAttribute PARAMETER__ID
		~EClass SPECIFICATION
		~EReference SPECIFICATION__SPEC_COMPONENTS
		~EReference SPECIFICATION__SPEC_CONNECTIONS
		~EClass CONFIGURATION
		~EReference CONFIGURATION__CONFIG_COMPONENTS
		~EReference CONFIGURATION__IMPLEMENTS
		~EReference CONFIGURATION__CONFIG_CONNECTIONS
		~EReference CONFIGURATION__COMPTYPES
		~EClass ASSEMBLY
		~EReference ASSEMBLY__ASSM_COMPONENTS
		~EReference ASSEMBLY__INSTANTIATES
		~EReference ASSEMBLY__ASSEMBLY_CONNECTIONS
		~EClass COMP_ROLE
		~EAttribute COMP_ROLE__MIN_INSTANCE_NBR
		~EAttribute COMP_ROLE__MAX_INSTANCE_NBR
		~EClass COMP_CLASS
		~EReference COMP_CLASS__REALIZES
		~EReference COMP_CLASS__IMPLEMENTS
		~EReference COMP_CLASS__ATTRIBUTES
		~EReference COMP_CLASS__CONTENT
		~EClass COMP_INSTANCE
		~EReference COMP_INSTANCE__INSTANTIATES
		~EReference COMP_INSTANCE__ROLE
		~EClass ROLE_CONNECTION
		~EReference ROLE_CONNECTION__CLIENT_COMP_ELEM
		~EReference ROLE_CONNECTION__SERVER_COMP_ELEM
		~EClass CLASS_CONNECTION
		~EReference CLASS_CONNECTION__CLIENT_CLASS_ELEM
		~EReference CLASS_CONNECTION__SERVER_CLASS_ELEM
		~EClass INST_CONNECTION
		~EReference INST_CONNECTION__CLIENT_INST_ELEM
		~EReference INST_CONNECTION__SERVER_INST_ELEM
		~EClass DEDAL_DIAGRAM
		~EReference DEDAL_DIAGRAM__ARCHITECTURE_DESCRIPTIONS
		~EAttribute DEDAL_DIAGRAM__NAME
		~EReference DEDAL_DIAGRAM__REPOSITORIES
		~EClass COMPOSITE_COMP_CLASS
		~EReference COMPOSITE_COMP_CLASS__USES
		~EReference COMPOSITE_COMP_CLASS__DELEGATED_INTERFACES
		~EClass COMP_TYPE
		~EClass REPOSITORY
		~EAttribute REPOSITORY__NAME
		~EReference REPOSITORY__COMPONENTS
		~EReference REPOSITORY__INTERFACE_TYPES
		~EClass ATTRIBUTE
		~EAttribute ATTRIBUTE__NAME
		~EAttribute ATTRIBUTE__TYPE
		~EEnum DIRECTION
		~EEnum ATTRIBUTE_TYPE
	}
	enum dedal.DIRECTION {
		/**
 *  The '<em><b>PROVIDED</b></em>' literal object.
 *  <!-- begin-user-doc -->
 *  <!-- end-user-doc -->
 *  @see #PROVIDED_VALUE
 *  @generated
 *  @ordered
 */
PROVIDED(0, "PROVIDED", "PROVIDED")
		/**
 *  The '<em><b>REQUIRED</b></em>' literal object.
 *  <!-- begin-user-doc -->
 *  <!-- end-user-doc -->
 *  @see #REQUIRED_VALUE
 *  @generated
 *  @ordered
 */
REQUIRED(1, "REQUIRED", "REQUIRED")
	}
	interface dedal.InstConnection {
		~CompInstance getClientInstElem()
		~void setClientInstElem(CompInstance)
		~CompInstance getServerInstElem()
		~void setServerInstElem(CompInstance)
	}
	interface dedal.Interaction {
		~String getName()
		~void setName(String)
	}
	interface dedal.Interface {
		~DIRECTION getDirection()
		~void setDirection(DIRECTION)
		~InterfaceType getType()
		~void setType(InterfaceType)
		~Interface getDelegation()
		~void setDelegation(Interface)
		~Interface getInstantiates()
		~void setInstantiates(Interface)
	}
	interface dedal.InterfaceType {
		~String getName()
		~void setName(String)
		~EList<Signature> getSignatures()
	}
	interface dedal.Parameter {
		~String getName()
		~void setName(String)
		~String getType()
		~void setType(String)
		~String getId()
		~void setId(String)
	}
	interface dedal.Port {
		~EList<Interface> getInterfaces()
	}
	interface dedal.Repository {
		~String getName()
		~void setName(String)
		~EList<Component> getComponents()
		~EList<InterfaceType> getInterfaceTypes()
	}
	interface dedal.RoleConnection {
		~CompRole getClientCompElem()
		~void setClientCompElem(CompRole)
		~CompRole getServerCompElem()
		~void setServerCompElem(CompRole)
	}
	interface dedal.Signature {
		~String getName()
		~void setName(String)
		~String getType()
		~void setType(String)
		~EList<Parameter> getParameters()
		~String getId()
		~void setId(String)
	}
	interface dedal.Specification {
		~EList<CompRole> getSpecComponents()
		~EList<RoleConnection> getSpecConnections()
	}
}

package dedal.impl {
	abstract class dedal.impl.ArchitectureDescriptionImpl {
		#String NAME_EDEFAULT
		#String name
		#EList<InterfaceType> interfaceTypes
		#EClass eStaticClass()
		+String getName()
		+void setName(String)
		+EList<InterfaceType> getInterfaceTypes()
		+NotificationChain eInverseRemove(InternalEObject, int, NotificationChain)
		+Object eGet(int, boolean, boolean)
		+void eSet(int, Object)
		+void eUnset(int)
		+boolean eIsSet(int)
		+String toString()
	}
	class dedal.impl.AssemblyImpl {
		#EList<CompInstance> assmComponents
		#Configuration instantiates
		#EList<InstConnection> assemblyConnections
		#EClass eStaticClass()
		+EList<CompInstance> getAssmComponents()
		+Configuration getInstantiates()
		+Configuration basicGetInstantiates()
		+void setInstantiates(Configuration)
		+EList<InstConnection> getAssemblyConnections()
		+NotificationChain eInverseRemove(InternalEObject, int, NotificationChain)
		+Object eGet(int, boolean, boolean)
		+void eSet(int, Object)
		+void eUnset(int)
		+boolean eIsSet(int)
	}
	class dedal.impl.AttributeImpl {
		#String NAME_EDEFAULT
		#String name
		#String TYPE_EDEFAULT
		#String type
		#EClass eStaticClass()
		+String getName()
		+void setName(String)
		+String getType()
		+void setType(String)
		+Object eGet(int, boolean, boolean)
		+void eSet(int, Object)
		+void eUnset(int)
		+boolean eIsSet(int)
		+String toString()
	}
	class dedal.impl.ClassConnectionImpl {
		#CompClass clientClassElem
		#CompClass serverClassElem
		#EClass eStaticClass()
		+CompClass getClientClassElem()
		+CompClass basicGetClientClassElem()
		+void setClientClassElem(CompClass)
		+CompClass getServerClassElem()
		+CompClass basicGetServerClassElem()
		+void setServerClassElem(CompClass)
		+Object eGet(int, boolean, boolean)
		+void eSet(int, Object)
		+void eUnset(int)
		+boolean eIsSet(int)
	}
	class dedal.impl.CompClassImpl {
		#EList<CompRole> realizes
		#CompType implements_
		#EList<Attribute> attributes
		#CompInstance content
		#EClass eStaticClass()
		+EList<CompRole> getRealizes()
		+CompType getImplements()
		+CompType basicGetImplements()
		+void setImplements(CompType)
		+EList<Attribute> getAttributes()
		+CompInstance getContent()
		+CompInstance basicGetContent()
		+void setContent(CompInstance)
		+NotificationChain eInverseRemove(InternalEObject, int, NotificationChain)
		+Object eGet(int, boolean, boolean)
		+void eSet(int, Object)
		+void eUnset(int)
		+boolean eIsSet(int)
	}
	class dedal.impl.CompInstanceImpl {
		#CompClass instantiates
		#CompRole role
		#EClass eStaticClass()
		+CompClass getInstantiates()
		+CompClass basicGetInstantiates()
		+void setInstantiates(CompClass)
		+CompRole getRole()
		+CompRole basicGetRole()
		+void setRole(CompRole)
		+Object eGet(int, boolean, boolean)
		+void eSet(int, Object)
		+void eUnset(int)
		+boolean eIsSet(int)
	}
	abstract class dedal.impl.ComponentImpl {
		#String NAME_EDEFAULT
		#String name
		#EList<Interaction> compInterfaces
		#String ID_EDEFAULT
		#String id
		#EClass eStaticClass()
		+String getName()
		+void setName(String)
		+EList<Interaction> getCompInterfaces()
		+String getId()
		+void setId(String)
		+NotificationChain eInverseRemove(InternalEObject, int, NotificationChain)
		+Object eGet(int, boolean, boolean)
		+void eSet(int, Object)
		+void eUnset(int)
		+boolean eIsSet(int)
		+String toString()
	}
	class dedal.impl.CompositeCompClassImpl {
		#Configuration uses
		#EList<Interaction> delegatedInterfaces
		#EClass eStaticClass()
		+Configuration getUses()
		+Configuration basicGetUses()
		+void setUses(Configuration)
		+EList<Interaction> getDelegatedInterfaces()
		+Object eGet(int, boolean, boolean)
		+void eSet(int, Object)
		+void eUnset(int)
		+boolean eIsSet(int)
	}
	class dedal.impl.CompositePortImpl {
		#EList<Port> ports
		#EClass eStaticClass()
		+EList<Port> getPorts()
		+Object eGet(int, boolean, boolean)
		+void eSet(int, Object)
		+void eUnset(int)
		+boolean eIsSet(int)
	}
	class dedal.impl.CompRoleImpl {
		#int MIN_INSTANCE_NBR_EDEFAULT
		#int minInstanceNbr
		#int MAX_INSTANCE_NBR_EDEFAULT
		#int maxInstanceNbr
		#EClass eStaticClass()
		+int getMinInstanceNbr()
		+void setMinInstanceNbr(int)
		+int getMaxInstanceNbr()
		+void setMaxInstanceNbr(int)
		+Object eGet(int, boolean, boolean)
		+void eSet(int, Object)
		+void eUnset(int)
		+boolean eIsSet(int)
		+String toString()
	}
	class dedal.impl.CompTypeImpl {
		#EClass eStaticClass()
	}
	class dedal.impl.ConfigurationImpl {
		#EList<CompClass> configComponents
		#EList<Specification> implements_
		#EList<ClassConnection> configConnections
		#EList<CompType> comptypes
		#EClass eStaticClass()
		+EList<CompClass> getConfigComponents()
		+EList<Specification> getImplements()
		+EList<ClassConnection> getConfigConnections()
		+EList<CompType> getComptypes()
		+NotificationChain eInverseRemove(InternalEObject, int, NotificationChain)
		+Object eGet(int, boolean, boolean)
		+void eSet(int, Object)
		+void eUnset(int)
		+boolean eIsSet(int)
	}
	abstract class dedal.impl.ConnectionImpl {
		#Interaction serverIntElem
		#Interaction clientIntElem
		#String REF_ID_EDEFAULT
		#String refID
		#String PROPERTY_EDEFAULT
		#String property
		#EClass eStaticClass()
		+Interaction getServerIntElem()
		+Interaction basicGetServerIntElem()
		+void setServerIntElem(Interaction)
		+Interaction getClientIntElem()
		+Interaction basicGetClientIntElem()
		+void setClientIntElem(Interaction)
		+String getRefID()
		+void setRefID(String)
		+String getProperty()
		+void setProperty(String)
		+Object eGet(int, boolean, boolean)
		+void eSet(int, Object)
		+void eUnset(int)
		+boolean eIsSet(int)
		+String toString()
	}
	class dedal.impl.DedalDiagramImpl {
		#EList<ArchitectureDescription> architectureDescriptions
		#String NAME_EDEFAULT
		#String name
		#EList<Repository> repositories
		#EClass eStaticClass()
		+EList<ArchitectureDescription> getArchitectureDescriptions()
		+String getName()
		+void setName(String)
		+EList<Repository> getRepositories()
		+NotificationChain eInverseRemove(InternalEObject, int, NotificationChain)
		+Object eGet(int, boolean, boolean)
		+void eSet(int, Object)
		+void eUnset(int)
		+boolean eIsSet(int)
		+String toString()
	}
	class dedal.impl.DedalFactoryImpl {
		+DedalFactory init()
		+EObject create(EClass)
		+Object createFromString(EDataType, String)
		+String convertToString(EDataType, Object)
		+Interface createInterface()
		+Port createPort()
		+CompositePort createCompositePort()
		+InterfaceType createInterfaceType()
		+Signature createSignature()
		+Parameter createParameter()
		+Specification createSpecification()
		+Configuration createConfiguration()
		+Assembly createAssembly()
		+CompRole createCompRole()
		+CompClass createCompClass()
		+CompInstance createCompInstance()
		+RoleConnection createRoleConnection()
		+ClassConnection createClassConnection()
		+InstConnection createInstConnection()
		+DedalDiagram createDedalDiagram()
		+CompositeCompClass createCompositeCompClass()
		+CompType createCompType()
		+Repository createRepository()
		+Attribute createAttribute()
		+DIRECTION createDIRECTIONFromString(EDataType, String)
		+String convertDIRECTIONToString(EDataType, Object)
		+ATTRIBUTE_TYPE createATTRIBUTE_TYPEFromString(EDataType, String)
		+String convertATTRIBUTE_TYPEToString(EDataType, Object)
		+DedalPackage getDedalPackage()
		+DedalPackage getPackage()
	}
	class dedal.impl.DedalPackageImpl {
		-EClass architectureDescriptionEClass
		-EClass componentEClass
		-EClass connectionEClass
		-EClass interfaceEClass
		-EClass interactionEClass
		-EClass portEClass
		-EClass compositePortEClass
		-EClass interfaceTypeEClass
		-EClass signatureEClass
		-EClass parameterEClass
		-EClass specificationEClass
		-EClass configurationEClass
		-EClass assemblyEClass
		-EClass compRoleEClass
		-EClass compClassEClass
		-EClass compInstanceEClass
		-EClass roleConnectionEClass
		-EClass classConnectionEClass
		-EClass instConnectionEClass
		-EClass dedalDiagramEClass
		-EClass compositeCompClassEClass
		-EClass compTypeEClass
		-EClass repositoryEClass
		-EClass attributeEClass
		-EEnum directionEEnum
		-EEnum attributE_TYPEEEnum
		-boolean isInited
		-boolean isCreated
		-boolean isInitialized
		+DedalPackage init()
		+EClass getArchitectureDescription()
		+EAttribute getArchitectureDescription_Name()
		+EReference getArchitectureDescription_InterfaceTypes()
		+EClass getComponent()
		+EAttribute getComponent_Name()
		+EReference getComponent_CompInterfaces()
		+EAttribute getComponent_Id()
		+EClass getConnection()
		+EReference getConnection_ServerIntElem()
		+EReference getConnection_ClientIntElem()
		+EAttribute getConnection_RefID()
		+EAttribute getConnection_Property()
		+EClass getInterface()
		+EAttribute getInterface_Direction()
		+EReference getInterface_Type()
		+EReference getInterface_Delegation()
		+EReference getInterface_Instantiates()
		+EClass getInteraction()
		+EAttribute getInteraction_Name()
		+EClass getPort()
		+EReference getPort_Interfaces()
		+EClass getCompositePort()
		+EReference getCompositePort_Ports()
		+EClass getInterfaceType()
		+EAttribute getInterfaceType_Name()
		+EReference getInterfaceType_Signatures()
		+EClass getSignature()
		+EAttribute getSignature_Name()
		+EAttribute getSignature_Type()
		+EReference getSignature_Parameters()
		+EAttribute getSignature_Id()
		+EClass getParameter()
		+EAttribute getParameter_Name()
		+EAttribute getParameter_Type()
		+EAttribute getParameter_Id()
		+EClass getSpecification()
		+EReference getSpecification_SpecComponents()
		+EReference getSpecification_SpecConnections()
		+EClass getConfiguration()
		+EReference getConfiguration_ConfigComponents()
		+EReference getConfiguration_Implements()
		+EReference getConfiguration_ConfigConnections()
		+EReference getConfiguration_Comptypes()
		+EClass getAssembly()
		+EReference getAssembly_AssmComponents()
		+EReference getAssembly_Instantiates()
		+EReference getAssembly_AssemblyConnections()
		+EClass getCompRole()
		+EAttribute getCompRole_MinInstanceNbr()
		+EAttribute getCompRole_MaxInstanceNbr()
		+EClass getCompClass()
		+EReference getCompClass_Realizes()
		+EReference getCompClass_Implements()
		+EReference getCompClass_Attributes()
		+EReference getCompClass_Content()
		+EClass getCompInstance()
		+EReference getCompInstance_Instantiates()
		+EReference getCompInstance_Role()
		+EClass getRoleConnection()
		+EReference getRoleConnection_ClientCompElem()
		+EReference getRoleConnection_ServerCompElem()
		+EClass getClassConnection()
		+EReference getClassConnection_ClientClassElem()
		+EReference getClassConnection_ServerClassElem()
		+EClass getInstConnection()
		+EReference getInstConnection_ClientInstElem()
		+EReference getInstConnection_ServerInstElem()
		+EClass getDedalDiagram()
		+EReference getDedalDiagram_ArchitectureDescriptions()
		+EAttribute getDedalDiagram_Name()
		+EReference getDedalDiagram_Repositories()
		+EClass getCompositeCompClass()
		+EReference getCompositeCompClass_Uses()
		+EReference getCompositeCompClass_DelegatedInterfaces()
		+EClass getCompType()
		+EClass getRepository()
		+EAttribute getRepository_Name()
		+EReference getRepository_Components()
		+EReference getRepository_InterfaceTypes()
		+EClass getAttribute()
		+EAttribute getAttribute_Name()
		+EAttribute getAttribute_Type()
		+EEnum getDIRECTION()
		+EEnum getATTRIBUTE_TYPE()
		+DedalFactory getDedalFactory()
		+void createPackageContents()
		+void initializePackageContents()
		#void createImportAnnotations()
		#void createEcoreAnnotations()
	}
	class dedal.impl.InstConnectionImpl {
		#CompInstance clientInstElem
		#CompInstance serverInstElem
		#EClass eStaticClass()
		+CompInstance getClientInstElem()
		+CompInstance basicGetClientInstElem()
		+void setClientInstElem(CompInstance)
		+CompInstance getServerInstElem()
		+CompInstance basicGetServerInstElem()
		+void setServerInstElem(CompInstance)
		+Object eGet(int, boolean, boolean)
		+void eSet(int, Object)
		+void eUnset(int)
		+boolean eIsSet(int)
	}
	abstract class dedal.impl.InteractionImpl {
		#String NAME_EDEFAULT
		#String name
		#EClass eStaticClass()
		+String getName()
		+void setName(String)
		+Object eGet(int, boolean, boolean)
		+void eSet(int, Object)
		+void eUnset(int)
		+boolean eIsSet(int)
		+String toString()
	}
	class dedal.impl.InterfaceImpl {
		#DIRECTION DIRECTION_EDEFAULT
		#DIRECTION direction
		#InterfaceType type
		#Interface delegation
		#Interface instantiates
		#EClass eStaticClass()
		+DIRECTION getDirection()
		+void setDirection(DIRECTION)
		+InterfaceType getType()
		+InterfaceType basicGetType()
		+void setType(InterfaceType)
		+Interface getDelegation()
		+Interface basicGetDelegation()
		+void setDelegation(Interface)
		+Interface getInstantiates()
		+Interface basicGetInstantiates()
		+void setInstantiates(Interface)
		+Object eGet(int, boolean, boolean)
		+void eSet(int, Object)
		+void eUnset(int)
		+boolean eIsSet(int)
		+String toString()
	}
	class dedal.impl.InterfaceTypeImpl {
		#String NAME_EDEFAULT
		#String name
		#EList<Signature> signatures
		#EClass eStaticClass()
		+String getName()
		+void setName(String)
		+EList<Signature> getSignatures()
		+NotificationChain eInverseRemove(InternalEObject, int, NotificationChain)
		+Object eGet(int, boolean, boolean)
		+void eSet(int, Object)
		+void eUnset(int)
		+boolean eIsSet(int)
		+String toString()
	}
	class dedal.impl.ParameterImpl {
		#String NAME_EDEFAULT
		#String name
		#String TYPE_EDEFAULT
		#String type
		#String ID_EDEFAULT
		#String id
		#EClass eStaticClass()
		+String getName()
		+void setName(String)
		+String getType()
		+void setType(String)
		+String getId()
		+void setId(String)
		+Object eGet(int, boolean, boolean)
		+void eSet(int, Object)
		+void eUnset(int)
		+boolean eIsSet(int)
		+String toString()
	}
	class dedal.impl.PortImpl {
		#EList<Interface> interfaces
		#EClass eStaticClass()
		+EList<Interface> getInterfaces()
		+Object eGet(int, boolean, boolean)
		+void eSet(int, Object)
		+void eUnset(int)
		+boolean eIsSet(int)
	}
	class dedal.impl.RepositoryImpl {
		#String NAME_EDEFAULT
		#String name
		#EList<Component> components
		#EList<InterfaceType> interfaceTypes
		#EClass eStaticClass()
		+String getName()
		+void setName(String)
		+EList<Component> getComponents()
		+EList<InterfaceType> getInterfaceTypes()
		+NotificationChain eInverseRemove(InternalEObject, int, NotificationChain)
		+Object eGet(int, boolean, boolean)
		+void eSet(int, Object)
		+void eUnset(int)
		+boolean eIsSet(int)
		+String toString()
	}
	class dedal.impl.RoleConnectionImpl {
		#CompRole clientCompElem
		#CompRole serverCompElem
		#EClass eStaticClass()
		+CompRole getClientCompElem()
		+CompRole basicGetClientCompElem()
		+void setClientCompElem(CompRole)
		+CompRole getServerCompElem()
		+CompRole basicGetServerCompElem()
		+void setServerCompElem(CompRole)
		+Object eGet(int, boolean, boolean)
		+void eSet(int, Object)
		+void eUnset(int)
		+boolean eIsSet(int)
	}
	class dedal.impl.SignatureImpl {
		#String NAME_EDEFAULT
		#String name
		#String TYPE_EDEFAULT
		#String type
		#EList<Parameter> parameters
		#String ID_EDEFAULT
		#String id
		#EClass eStaticClass()
		+String getName()
		+void setName(String)
		+String getType()
		+void setType(String)
		+EList<Parameter> getParameters()
		+String getId()
		+void setId(String)
		+NotificationChain eInverseRemove(InternalEObject, int, NotificationChain)
		+Object eGet(int, boolean, boolean)
		+void eSet(int, Object)
		+void eUnset(int)
		+boolean eIsSet(int)
		+String toString()
	}
	class dedal.impl.SpecificationImpl {
		#EList<CompRole> specComponents
		#EList<RoleConnection> specConnections
		#EClass eStaticClass()
		+EList<CompRole> getSpecComponents()
		+EList<RoleConnection> getSpecConnections()
		+NotificationChain eInverseRemove(InternalEObject, int, NotificationChain)
		+Object eGet(int, boolean, boolean)
		+void eSet(int, Object)
		+void eUnset(int)
		+boolean eIsSet(int)
	}
}

package dedal.util {
	class dedal.util.DedalAdapterFactory {
		#DedalPackage modelPackage
		#DedalSwitch<Adapter> modelSwitch
		+boolean isFactoryForType(Object)
		+Adapter createAdapter(Notifier)
		+Adapter createArchitectureDescriptionAdapter()
		+Adapter createComponentAdapter()
		+Adapter createConnectionAdapter()
		+Adapter createInterfaceAdapter()
		+Adapter createInteractionAdapter()
		+Adapter createPortAdapter()
		+Adapter createCompositePortAdapter()
		+Adapter createInterfaceTypeAdapter()
		+Adapter createSignatureAdapter()
		+Adapter createParameterAdapter()
		+Adapter createSpecificationAdapter()
		+Adapter createConfigurationAdapter()
		+Adapter createAssemblyAdapter()
		+Adapter createCompRoleAdapter()
		+Adapter createCompClassAdapter()
		+Adapter createCompInstanceAdapter()
		+Adapter createRoleConnectionAdapter()
		+Adapter createClassConnectionAdapter()
		+Adapter createInstConnectionAdapter()
		+Adapter createDedalDiagramAdapter()
		+Adapter createCompositeCompClassAdapter()
		+Adapter createCompTypeAdapter()
		+Adapter createRepositoryAdapter()
		+Adapter createAttributeAdapter()
		+Adapter createEObjectAdapter()
	}
	class DedalSwitch {
		#DedalPackage modelPackage
		#boolean isSwitchFor(EPackage)
		#T doSwitch(int, EObject)
		+T caseArchitectureDescription(ArchitectureDescription)
		+T caseComponent(Component)
		+T caseConnection(Connection)
		+T caseInterface(Interface)
		+T caseInteraction(Interaction)
		+T casePort(Port)
		+T caseCompositePort(CompositePort)
		+T caseInterfaceType(InterfaceType)
		+T caseSignature(Signature)
		+T caseParameter(Parameter)
		+T caseSpecification(Specification)
		+T caseConfiguration(Configuration)
		+T caseAssembly(Assembly)
		+T caseCompRole(CompRole)
		+T caseCompClass(CompClass)
		+T caseCompInstance(CompInstance)
		+T caseRoleConnection(RoleConnection)
		+T caseClassConnection(ClassConnection)
		+T caseInstConnection(InstConnection)
		+T caseDedalDiagram(DedalDiagram)
		+T caseCompositeCompClass(CompositeCompClass)
		+T caseCompType(CompType)
		+T caseRepository(Repository)
		+T caseAttribute(Attribute)
		+T defaultCase(EObject)
	}
}

package dedal.provider {
	class dedal.provider.ArchitectureDescriptionItemProvider {
		+List<IItemPropertyDescriptor> getPropertyDescriptors(Object)
		#void addNamePropertyDescriptor(Object)
		+Collection<? extends EStructuralFeature> getChildrenFeatures(Object)
		#EStructuralFeature getChildFeature(Object, Object)
		+String getText(Object)
		+void notifyChanged(Notification)
		#void collectNewChildDescriptors(Collection, Object)
		+ResourceLocator getResourceLocator()
	}
	class dedal.provider.AssemblyItemProvider {
		+List<IItemPropertyDescriptor> getPropertyDescriptors(Object)
		#void addInstantiatesPropertyDescriptor(Object)
		+Collection<? extends EStructuralFeature> getChildrenFeatures(Object)
		#EStructuralFeature getChildFeature(Object, Object)
		+Object getImage(Object)
		+String getText(Object)
		+void notifyChanged(Notification)
		#void collectNewChildDescriptors(Collection, Object)
	}
	class dedal.provider.AttributeItemProvider {
		+List<IItemPropertyDescriptor> getPropertyDescriptors(Object)
		#void addNamePropertyDescriptor(Object)
		#void addTypePropertyDescriptor(Object)
		+Object getImage(Object)
		+String getText(Object)
		+void notifyChanged(Notification)
		#void collectNewChildDescriptors(Collection, Object)
		+ResourceLocator getResourceLocator()
	}
	class dedal.provider.ClassConnectionItemProvider {
		+List<IItemPropertyDescriptor> getPropertyDescriptors(Object)
		#void addClientClassElemPropertyDescriptor(Object)
		#void addServerClassElemPropertyDescriptor(Object)
		+Object getImage(Object)
		+String getText(Object)
		+void notifyChanged(Notification)
		#void collectNewChildDescriptors(Collection, Object)
	}
	class dedal.provider.CompClassItemProvider {
		+List<IItemPropertyDescriptor> getPropertyDescriptors(Object)
		#void addRealizesPropertyDescriptor(Object)
		#void addImplementsPropertyDescriptor(Object)
		#void addContentPropertyDescriptor(Object)
		+Collection<? extends EStructuralFeature> getChildrenFeatures(Object)
		#EStructuralFeature getChildFeature(Object, Object)
		+Object getImage(Object)
		+String getText(Object)
		+void notifyChanged(Notification)
		#void collectNewChildDescriptors(Collection, Object)
	}
	class dedal.provider.CompInstanceItemProvider {
		+List<IItemPropertyDescriptor> getPropertyDescriptors(Object)
		#void addInstantiatesPropertyDescriptor(Object)
		#void addRolePropertyDescriptor(Object)
		+Object getImage(Object)
		+String getText(Object)
		+void notifyChanged(Notification)
		#void collectNewChildDescriptors(Collection, Object)
	}
	class dedal.provider.ComponentItemProvider {
		+List<IItemPropertyDescriptor> getPropertyDescriptors(Object)
		#void addNamePropertyDescriptor(Object)
		#void addIdPropertyDescriptor(Object)
		+Collection<? extends EStructuralFeature> getChildrenFeatures(Object)
		#EStructuralFeature getChildFeature(Object, Object)
		+String getText(Object)
		+void notifyChanged(Notification)
		#void collectNewChildDescriptors(Collection, Object)
		+ResourceLocator getResourceLocator()
	}
	class dedal.provider.CompositeCompClassItemProvider {
		+List<IItemPropertyDescriptor> getPropertyDescriptors(Object)
		#void addUsesPropertyDescriptor(Object)
		#void addDelegatedInterfacesPropertyDescriptor(Object)
		+Collection<? extends EStructuralFeature> getChildrenFeatures(Object)
		#EStructuralFeature getChildFeature(Object, Object)
		+Object getImage(Object)
		+String getText(Object)
		+void notifyChanged(Notification)
		#void collectNewChildDescriptors(Collection, Object)
		+String getCreateChildText(Object, Object, Object, Collection)
	}
	class dedal.provider.CompositePortItemProvider {
		+List<IItemPropertyDescriptor> getPropertyDescriptors(Object)
		#void addPortsPropertyDescriptor(Object)
		+Object getImage(Object)
		+String getText(Object)
		+void notifyChanged(Notification)
		#void collectNewChildDescriptors(Collection, Object)
	}
	class dedal.provider.CompRoleItemProvider {
		+List<IItemPropertyDescriptor> getPropertyDescriptors(Object)
		#void addMinInstanceNbrPropertyDescriptor(Object)
		#void addMaxInstanceNbrPropertyDescriptor(Object)
		+Object getImage(Object)
		+String getText(Object)
		+void notifyChanged(Notification)
		#void collectNewChildDescriptors(Collection, Object)
	}
	class dedal.provider.CompTypeItemProvider {
		+List<IItemPropertyDescriptor> getPropertyDescriptors(Object)
		+Object getImage(Object)
		+String getText(Object)
		+void notifyChanged(Notification)
		#void collectNewChildDescriptors(Collection, Object)
	}
	class dedal.provider.ConfigurationItemProvider {
		+List<IItemPropertyDescriptor> getPropertyDescriptors(Object)
		#void addImplementsPropertyDescriptor(Object)
		+Collection<? extends EStructuralFeature> getChildrenFeatures(Object)
		#EStructuralFeature getChildFeature(Object, Object)
		+Object getImage(Object)
		+String getText(Object)
		+void notifyChanged(Notification)
		#void collectNewChildDescriptors(Collection, Object)
	}
	class dedal.provider.ConnectionItemProvider {
		+List<IItemPropertyDescriptor> getPropertyDescriptors(Object)
		#void addServerIntElemPropertyDescriptor(Object)
		#void addClientIntElemPropertyDescriptor(Object)
		#void addRefIDPropertyDescriptor(Object)
		#void addPropertyPropertyDescriptor(Object)
		+String getText(Object)
		+void notifyChanged(Notification)
		#void collectNewChildDescriptors(Collection, Object)
		+ResourceLocator getResourceLocator()
	}
	class dedal.provider.DedalDiagramItemProvider {
		+List<IItemPropertyDescriptor> getPropertyDescriptors(Object)
		#void addNamePropertyDescriptor(Object)
		+Collection<? extends EStructuralFeature> getChildrenFeatures(Object)
		#EStructuralFeature getChildFeature(Object, Object)
		+Object getImage(Object)
		+String getText(Object)
		+void notifyChanged(Notification)
		#void collectNewChildDescriptors(Collection, Object)
		+ResourceLocator getResourceLocator()
	}
	class dedal.provider.DedalEditPlugin {
		+DedalEditPlugin INSTANCE
		-Implementation plugin
		+ResourceLocator getPluginResourceLocator()
		+Implementation getPlugin()
	}
	class dedal.provider.Implementation {
	}
	class dedal.provider.DedalItemProviderAdapterFactory {
		#ComposedAdapterFactory parentAdapterFactory
		#IChangeNotifier changeNotifier
		#Collection<Object> supportedTypes
		#InterfaceItemProvider interfaceItemProvider
		#PortItemProvider portItemProvider
		#CompositePortItemProvider compositePortItemProvider
		#InterfaceTypeItemProvider interfaceTypeItemProvider
		#SignatureItemProvider signatureItemProvider
		#ParameterItemProvider parameterItemProvider
		#SpecificationItemProvider specificationItemProvider
		#ConfigurationItemProvider configurationItemProvider
		#AssemblyItemProvider assemblyItemProvider
		#CompRoleItemProvider compRoleItemProvider
		#CompClassItemProvider compClassItemProvider
		#CompInstanceItemProvider compInstanceItemProvider
		#RoleConnectionItemProvider roleConnectionItemProvider
		#ClassConnectionItemProvider classConnectionItemProvider
		#InstConnectionItemProvider instConnectionItemProvider
		#DedalDiagramItemProvider dedalDiagramItemProvider
		#CompositeCompClassItemProvider compositeCompClassItemProvider
		#CompTypeItemProvider compTypeItemProvider
		#RepositoryItemProvider repositoryItemProvider
		#AttributeItemProvider attributeItemProvider
		+Adapter createInterfaceAdapter()
		+Adapter createPortAdapter()
		+Adapter createCompositePortAdapter()
		+Adapter createInterfaceTypeAdapter()
		+Adapter createSignatureAdapter()
		+Adapter createParameterAdapter()
		+Adapter createSpecificationAdapter()
		+Adapter createConfigurationAdapter()
		+Adapter createAssemblyAdapter()
		+Adapter createCompRoleAdapter()
		+Adapter createCompClassAdapter()
		+Adapter createCompInstanceAdapter()
		+Adapter createRoleConnectionAdapter()
		+Adapter createClassConnectionAdapter()
		+Adapter createInstConnectionAdapter()
		+Adapter createDedalDiagramAdapter()
		+Adapter createCompositeCompClassAdapter()
		+Adapter createCompTypeAdapter()
		+Adapter createRepositoryAdapter()
		+Adapter createAttributeAdapter()
		+ComposeableAdapterFactory getRootAdapterFactory()
		+void setParentAdapterFactory(ComposedAdapterFactory)
		+boolean isFactoryForType(Object)
		+Adapter adapt(Notifier, Object)
		+Object adapt(Object, Object)
		+void addListener(INotifyChangedListener)
		+void removeListener(INotifyChangedListener)
		+void fireNotifyChanged(Notification)
		+void dispose()
	}
	class dedal.provider.InstConnectionItemProvider {
		+List<IItemPropertyDescriptor> getPropertyDescriptors(Object)
		#void addClientInstElemPropertyDescriptor(Object)
		#void addServerInstElemPropertyDescriptor(Object)
		+Object getImage(Object)
		+String getText(Object)
		+void notifyChanged(Notification)
		#void collectNewChildDescriptors(Collection, Object)
	}
	class dedal.provider.InteractionItemProvider {
		+List<IItemPropertyDescriptor> getPropertyDescriptors(Object)
		#void addNamePropertyDescriptor(Object)
		+String getText(Object)
		+void notifyChanged(Notification)
		#void collectNewChildDescriptors(Collection, Object)
		+ResourceLocator getResourceLocator()
	}
	class dedal.provider.InterfaceItemProvider {
		+List<IItemPropertyDescriptor> getPropertyDescriptors(Object)
		#void addDirectionPropertyDescriptor(Object)
		#void addTypePropertyDescriptor(Object)
		#void addDelegationPropertyDescriptor(Object)
		#void addInstantiatesPropertyDescriptor(Object)
		+Object getImage(Object)
		+String getText(Object)
		+void notifyChanged(Notification)
		#void collectNewChildDescriptors(Collection, Object)
	}
	class dedal.provider.InterfaceTypeItemProvider {
		+List<IItemPropertyDescriptor> getPropertyDescriptors(Object)
		#void addNamePropertyDescriptor(Object)
		+Collection<? extends EStructuralFeature> getChildrenFeatures(Object)
		#EStructuralFeature getChildFeature(Object, Object)
		+Object getImage(Object)
		+String getText(Object)
		+void notifyChanged(Notification)
		#void collectNewChildDescriptors(Collection, Object)
		+ResourceLocator getResourceLocator()
	}
	class dedal.provider.ParameterItemProvider {
		+List<IItemPropertyDescriptor> getPropertyDescriptors(Object)
		#void addNamePropertyDescriptor(Object)
		#void addTypePropertyDescriptor(Object)
		#void addIdPropertyDescriptor(Object)
		+Object getImage(Object)
		+String getText(Object)
		+void notifyChanged(Notification)
		#void collectNewChildDescriptors(Collection, Object)
		+ResourceLocator getResourceLocator()
	}
	class dedal.provider.PortItemProvider {
		+List<IItemPropertyDescriptor> getPropertyDescriptors(Object)
		#void addInterfacesPropertyDescriptor(Object)
		+Object getImage(Object)
		+String getText(Object)
		+void notifyChanged(Notification)
		#void collectNewChildDescriptors(Collection, Object)
	}
	class dedal.provider.RepositoryItemProvider {
		+List<IItemPropertyDescriptor> getPropertyDescriptors(Object)
		#void addNamePropertyDescriptor(Object)
		+Collection<? extends EStructuralFeature> getChildrenFeatures(Object)
		#EStructuralFeature getChildFeature(Object, Object)
		+Object getImage(Object)
		+String getText(Object)
		+void notifyChanged(Notification)
		#void collectNewChildDescriptors(Collection, Object)
		+ResourceLocator getResourceLocator()
	}
	class dedal.provider.RoleConnectionItemProvider {
		+List<IItemPropertyDescriptor> getPropertyDescriptors(Object)
		#void addClientCompElemPropertyDescriptor(Object)
		#void addServerCompElemPropertyDescriptor(Object)
		+Object getImage(Object)
		+String getText(Object)
		+void notifyChanged(Notification)
		#void collectNewChildDescriptors(Collection, Object)
	}
	class dedal.provider.SignatureItemProvider {
		+List<IItemPropertyDescriptor> getPropertyDescriptors(Object)
		#void addNamePropertyDescriptor(Object)
		#void addTypePropertyDescriptor(Object)
		#void addIdPropertyDescriptor(Object)
		+Collection<? extends EStructuralFeature> getChildrenFeatures(Object)
		#EStructuralFeature getChildFeature(Object, Object)
		+Object getImage(Object)
		+String getText(Object)
		+void notifyChanged(Notification)
		#void collectNewChildDescriptors(Collection, Object)
		+ResourceLocator getResourceLocator()
	}
	class dedal.provider.SpecificationItemProvider {
		+List<IItemPropertyDescriptor> getPropertyDescriptors(Object)
		+Collection<? extends EStructuralFeature> getChildrenFeatures(Object)
		#EStructuralFeature getChildFeature(Object, Object)
		+Object getImage(Object)
		+String getText(Object)
		+void notifyChanged(Notification)
		#void collectNewChildDescriptors(Collection, Object)
	}
}

package dedal.presentation.action {
	class dedal.presentation.action.NewAction {
		+void run(IAction)
	}
	class dedal.presentation.action.OpenAction {
		+void run(IAction)
	}
	class dedal.presentation.action.OpenURIAction {
		+void run(IAction)
	}
}

package dedal.presentation {
	class dedal.presentation.Application {
		+Object start(IApplicationContext)
		+void stop()
	}
	class dedal.presentation.DedalActionBarContributor {
		#IEditorPart activeEditorPart
		#ISelectionProvider selectionProvider
		#IAction showPropertiesViewAction
		#IAction refreshViewerAction
		#Collection<IAction> createChildActions
		#IMenuManager createChildMenuManager
		#Collection<IAction> createSiblingActions
		#IMenuManager createSiblingMenuManager
		+void contributeToToolBar(IToolBarManager)
		+void contributeToMenu(IMenuManager)
		+void setActiveEditor(IEditorPart)
		+void selectionChanged(SelectionChangedEvent)
		#Collection<IAction> generateCreateChildActions(Collection, ISelection)
		#Collection<IAction> generateCreateSiblingActions(Collection, ISelection)
		#void populateManager(IContributionManager, Collection, String)
		#void depopulateManager(IContributionManager, Collection)
		+void menuAboutToShow(IMenuManager)
		#void addGlobalActions(IMenuManager)
		#boolean removeAllReferencesOnDelete()
	}
	class dedal.presentation.DedalEditor {
		+List<String> FILE_EXTENSIONS
		+List<String> FILE_EXTENSION_FILTERS
		#AdapterFactoryEditingDomain editingDomain
		#ComposedAdapterFactory adapterFactory
		#IContentOutlinePage contentOutlinePage
		#IStatusLineManager contentOutlineStatusLineManager
		#TreeViewer contentOutlineViewer
		#List<PropertySheetPage> propertySheetPages
		#TreeViewer selectionViewer
		#TreeViewer parentViewer
		#TreeViewer treeViewer
		#ListViewer listViewer
		#TableViewer tableViewer
		#TreeViewer treeViewerWithColumns
		#ViewerPane currentViewerPane
		#Viewer currentViewer
		#ISelectionChangedListener selectionChangedListener
		#Collection<ISelectionChangedListener> selectionChangedListeners
		#ISelection editorSelection
		#MarkerHelper markerHelper
		#IPartListener partListener
		#Collection<Resource> removedResources
		#Collection<Resource> changedResources
		#Collection<Resource> savedResources
		#Map<Resource,Diagnostic> resourceToDiagnosticMap
		#boolean updateProblemIndication
		#EContentAdapter problemIndicationAdapter
		#IResourceChangeListener resourceChangeListener
		-List<String> prefixExtensions(List, String)
		#void handleActivate()
		#void handleChangedResources()
		#void updateProblemIndication()
		#boolean handleDirtyConflict()
		#void initializeEditingDomain()
		#void firePropertyChange(int)
		+void setSelectionToViewer(Collection)
		+EditingDomain getEditingDomain()
		+void setCurrentViewerPane(ViewerPane)
		+void setCurrentViewer(Viewer)
		+Viewer getViewer()
		#void createContextMenuFor(StructuredViewer)
		+void createModel()
		+Diagnostic analyzeResourceProblems(Resource, Exception)
		+void createPages()
		#void hideTabs()
		#void showTabs()
		#void pageChange(int)
		+Object getAdapter(Class)
		+IContentOutlinePage getContentOutlinePage()
		+IPropertySheetPage getPropertySheetPage()
		+void handleContentOutlineSelection(ISelection)
		+boolean isDirty()
		+void doSave(IProgressMonitor)
		#boolean isPersisted(Resource)
		+boolean isSaveAsAllowed()
		+void doSaveAs()
		#void doSaveAs(URI, IEditorInput)
		+void gotoMarker(IMarker)
		+void init(IEditorSite, IEditorInput)
		+void setFocus()
		+void addSelectionChangedListener(ISelectionChangedListener)
		+void removeSelectionChangedListener(ISelectionChangedListener)
		+ISelection getSelection()
		+void setSelection(ISelection)
		+void setStatusLineManager(ISelection)
		-String getString(String)
		-String getString(String, Object)
		+void menuAboutToShow(IMenuManager)
		+EditingDomainActionBarContributor getActionBarContributor()
		+IActionBars getActionBars()
		+AdapterFactory getAdapterFactory()
		+void dispose()
		#boolean showOutlineView()
	}
	class dedal.presentation.ReverseAdapterFactoryContentProvider {
		+Object[] getElements(Object)
		+Object[] getChildren(Object)
		+boolean hasChildren(Object)
		+Object getParent(Object)
	}
	class dedal.presentation.DedalEditorAdvisor {
		-String FILE_EXTENSION_FILTERS
		+String getString(String)
		+String getString(String, Object)
		+String getInitialWindowPerspectiveId()
		+void initialize(IWorkbenchConfigurer)
		-void declareWorkbenchImage(IWorkbenchConfigurer, Bundle, String, String, boolean)
		+WorkbenchWindowAdvisor createWorkbenchWindowAdvisor(IWorkbenchWindowConfigurer)
		+String[] openFilePathDialog(Shell, int, String[])
		+String[] openFilePathDialog(Shell, int, String[], boolean, boolean, boolean)
		+boolean openEditor(IWorkbench, URI)
		+IAdaptable getDefaultPageInput()
	}
	class dedal.presentation.DedalEditorPlugin {
		+DedalEditorPlugin INSTANCE
		-Implementation plugin
		+ResourceLocator getPluginResourceLocator()
		+Implementation getPlugin()
	}
	class dedal.presentation.Implementation {
	}
	class dedal.presentation.DedalModelWizard {
		+List<String> FILE_EXTENSIONS
		+String FORMATTED_FILE_EXTENSIONS
		#DedalPackage dedalPackage
		#DedalFactory dedalFactory
		#DedalModelWizardNewFileCreationPage newFileCreationPage
		#DedalModelWizardInitialObjectCreationPage initialObjectCreationPage
		#IStructuredSelection selection
		#IWorkbench workbench
		#List<String> initialObjectNames
		+void init(IWorkbench, IStructuredSelection)
		#Collection<String> getInitialObjectNames()
		#EObject createInitialModel()
		+boolean performFinish()
		+void addPages()
		+IFile getModelFile()
	}
	class dedal.presentation.DedalModelWizardNewFileCreationPage {
		#boolean validatePage()
		+IFile getModelFile()
	}
	class dedal.presentation.DedalModelWizardInitialObjectCreationPage {
		#Combo initialObjectField
		#List<String> encodings
		#Combo encodingField
		#ModifyListener validator
		+void createControl(Composite)
		#boolean validatePage()
		+void setVisible(boolean)
		+String getInitialObjectName()
		+String getEncoding()
		#String getLabel(String)
		#Collection<String> getEncodings()
	}
	class dedal.presentation.DedalWizard {
		#DedalPackage dedalPackage
		#DedalFactory dedalFactory
		#DedalWizardPage initialPage
		#IStructuredSelection selection
		#IWorkbench workbench
		+void init(IWorkbench, IStructuredSelection)
		#EObject createInitialModel()
		+boolean performFinish()
		+void addPages()
		+URI getModelURI()
	}
	class dedal.presentation.DedalWizardPage {
		#Text fileField
		#Text projectField
		#ModifyListener validator
		+void createControl(Composite)
		#boolean validatePage()
		+void setVisible(boolean)
		+URI getFileURI()
		+String getProjectPath()
		+String getProjectName()
		+void selectFileField()
		#String getLabel(String)
	}
	class dedal.presentation.Perspective {
		+String ID_PERSPECTIVE
		+void createInitialLayout(IPageLayout)
	}
	class dedal.presentation.WindowActionBarAdvisor {
		#void fillMenuBar(IMenuManager)
		#IMenuManager createFileMenu(IWorkbenchWindow)
		#IMenuManager createEditMenu(IWorkbenchWindow)
		#IMenuManager createWindowMenu(IWorkbenchWindow)
		#IMenuManager createHelpMenu(IWorkbenchWindow)
		#void addToMenuAndRegister(IMenuManager, IAction)
	}
	class dedal.presentation.WindowAdvisor {
		+void preWindowOpen()
		+ActionBarAdvisor createActionBarAdvisor(IActionBarConfigurer)
		+void postWindowOpen()
	}
}

package dedal.tests {
	abstract class dedal.tests.ArchitectureDescriptionTest {
		#ArchitectureDescription fixture
		#void setFixture(ArchitectureDescription)
		#ArchitectureDescription getFixture()
	}
	class dedal.tests.AssemblyTest {
		+void main(String[])
		#Assembly getFixture()
		#void setUp()
		#void tearDown()
	}
	class dedal.tests.AttributeTest {
		#Attribute fixture
		+void main(String[])
		#void setFixture(Attribute)
		#Attribute getFixture()
		#void setUp()
		#void tearDown()
	}
	class dedal.tests.ClassConnectionTest {
		+void main(String[])
		#ClassConnection getFixture()
		#void setUp()
		#void tearDown()
	}
	class dedal.tests.CompClassTest {
		+void main(String[])
		#CompClass getFixture()
		#void setUp()
		#void tearDown()
	}
	class dedal.tests.CompInstanceTest {
		+void main(String[])
		#CompInstance getFixture()
		#void setUp()
		#void tearDown()
	}
	abstract class dedal.tests.ComponentTest {
		#Component fixture
		#void setFixture(Component)
		#Component getFixture()
	}
	class dedal.tests.CompositeCompClassTest {
		+void main(String[])
		#CompositeCompClass getFixture()
		#void setUp()
		#void tearDown()
	}
	class dedal.tests.CompositePortTest {
		+void main(String[])
		#CompositePort getFixture()
		#void setUp()
		#void tearDown()
	}
	class dedal.tests.CompRoleTest {
		+void main(String[])
		#CompRole getFixture()
		#void setUp()
		#void tearDown()
	}
	class dedal.tests.CompTypeTest {
		+void main(String[])
		#CompType getFixture()
		#void setUp()
		#void tearDown()
	}
	class dedal.tests.ConfigurationTest {
		+void main(String[])
		#Configuration getFixture()
		#void setUp()
		#void tearDown()
	}
	abstract class dedal.tests.ConnectionTest {
		#Connection fixture
		#void setFixture(Connection)
		#Connection getFixture()
	}
	class dedal.tests.DedalAllTests {
		+void main(String[])
		+Test suite()
	}
	class dedal.tests.DedalDiagramTest {
		#DedalDiagram fixture
		+void main(String[])
		#void setFixture(DedalDiagram)
		#DedalDiagram getFixture()
		#void setUp()
		#void tearDown()
	}
	class dedal.tests.DedalExample {
		+void main(String[])
		#void printDiagnostic(Diagnostic, String)
	}
	class dedal.tests.DedalTests {
		+void main(String[])
		+Test suite()
	}
	class dedal.tests.InstConnectionTest {
		+void main(String[])
		#InstConnection getFixture()
		#void setUp()
		#void tearDown()
	}
	abstract class dedal.tests.InteractionTest {
		#Interaction fixture
		#void setFixture(Interaction)
		#Interaction getFixture()
	}
	class dedal.tests.InterfaceTest {
		+void main(String[])
		#Interface getFixture()
		#void setUp()
		#void tearDown()
	}
	class dedal.tests.InterfaceTypeTest {
		#InterfaceType fixture
		+void main(String[])
		#void setFixture(InterfaceType)
		#InterfaceType getFixture()
		#void setUp()
		#void tearDown()
	}
	class dedal.tests.ParameterTest {
		#Parameter fixture
		+void main(String[])
		#void setFixture(Parameter)
		#Parameter getFixture()
		#void setUp()
		#void tearDown()
	}
	class dedal.tests.PortTest {
		+void main(String[])
		#Port getFixture()
		#void setUp()
		#void tearDown()
	}
	class dedal.tests.RepositoryTest {
		#Repository fixture
		+void main(String[])
		#void setFixture(Repository)
		#Repository getFixture()
		#void setUp()
		#void tearDown()
	}
	class dedal.tests.RoleConnectionTest {
		+void main(String[])
		#RoleConnection getFixture()
		#void setUp()
		#void tearDown()
	}
	class dedal.tests.SignatureTest {
		#Signature fixture
		+void main(String[])
		#void setFixture(Signature)
		#Signature getFixture()
		#void setUp()
		#void tearDown()
	}
	class dedal.tests.SpecificationTest {
		+void main(String[])
		#Specification getFixture()
		#void setUp()
		#void tearDown()
	}
}

package fr.ema.dedal.xtext {
	class fr.ema.dedal.xtext.DedalADLRuntimeModule {
	}
	class fr.ema.dedal.xtext.DedalADLStandaloneSetup {
		+void doSetup()
	}
	abstract class fr.ema.dedal.xtext.AbstractDedalADLRuntimeModule {
		#Properties properties
		+void configure(Binder)
		+void configureLanguageName(Binder)
		+void configureFileExtensions(Binder)
		+java.lang.ClassLoader bindClassLoaderToInstance()
		+Class<? extends org.eclipse.xtext.IGrammarAccess> bindIGrammarAccess()
		+Class<? extends org.eclipse.xtext.conversion.IValueConverterService> bindIValueConverterService()
		+Class<? extends org.eclipse.xtext.serializer.sequencer.ISemanticSequencer> bindISemanticSequencer()
		+Class<? extends org.eclipse.xtext.serializer.sequencer.ISyntacticSequencer> bindISyntacticSequencer()
		+Class<? extends org.eclipse.xtext.serializer.ISerializer> bindISerializer()
		+Class<? extends org.eclipse.xtext.parser.IParser> bindIParser()
		+Class<? extends org.eclipse.xtext.parser.ITokenToStringConverter> bindITokenToStringConverter()
		+Class<? extends org.eclipse.xtext.parser.antlr.IAntlrTokenFileProvider> bindIAntlrTokenFileProvider()
		+Class<? extends org.eclipse.xtext.parser.antlr.Lexer> bindLexer()
		+com.google.inject.Provider<fr.ema.dedal.xtext.parser.antlr.internal.InternalDedalADLLexer> provideInternalDedalADLLexer()
		+void configureRuntimeLexer(com.google.inject.Binder)
		+Class<? extends org.eclipse.xtext.parser.antlr.ITokenDefProvider> bindITokenDefProvider()
		+Class<? extends fr.ema.dedal.xtext.validation.DedalADLValidator> bindDedalADLValidator()
		+Class<? extends org.eclipse.xtext.scoping.IScopeProvider> bindIScopeProvider()
		+void configureIScopeProviderDelegate(com.google.inject.Binder)
		+void configureIgnoreCaseLinking(com.google.inject.Binder)
		+Class<? extends org.eclipse.xtext.naming.IQualifiedNameProvider> bindIQualifiedNameProvider()
		+Class<? extends org.eclipse.xtext.resource.IContainer.Manager> bindIContainer$Manager()
		+Class<? extends org.eclipse.xtext.resource.containers.IAllContainersState.Provider> bindIAllContainersState$Provider()
		+void configureIResourceDescriptions(com.google.inject.Binder)
		+void configureIResourceDescriptionsPersisted(com.google.inject.Binder)
		+Class<? extends org.eclipse.xtext.generator.IGenerator> bindIGenerator()
		+Class<? extends org.eclipse.xtext.formatting.IFormatter> bindIFormatter()
		+Class<? extends org.eclipse.xtext.scoping.IGlobalScopeProvider> bindIGlobalScopeProvider()
	}
	class fr.ema.dedal.xtext.DedalADLStandaloneSetupGenerated {
		+Injector createInjectorAndDoEMFRegistration()
		+Injector createInjector()
		+void register(Injector)
	}
	class fr.ema.dedal.xtext.DedalADLInjectorProvider {
		#GlobalStateMemento stateBeforeInjectorCreation
		#GlobalStateMemento stateAfterInjectorCreation
		#Injector injector
		+Injector getInjector()
		#Injector internalCreateInjector()
		#DedalADLRuntimeModule createRuntimeModule()
		+void restoreRegistry()
		+void setupRegistry()
	}
	class fr.ema.dedal.xtext.DedalADLUiInjectorProvider {
		+Injector getInjector()
	}
}

package fr.ema.dedal.xtext.parser.antlr {
	class fr.ema.dedal.xtext.parser.antlr.DedalADLAntlrTokenFileProvider {
		+InputStream getAntlrTokenFile()
	}
	class fr.ema.dedal.xtext.parser.antlr.DedalADLParser {
		-DedalADLGrammarAccess grammarAccess
		#void setInitialHiddenTokens(XtextTokenStream)
		#fr.ema.dedal.xtext.parser.antlr.internal.InternalDedalADLParser createParser(XtextTokenStream)
		#String getDefaultRuleName()
		+DedalADLGrammarAccess getGrammarAccess()
		+void setGrammarAccess(DedalADLGrammarAccess)
	}
}

package fr.ema.dedal.xtext.parser.antlr.internal {
	class fr.ema.dedal.xtext.parser.antlr.internal.InternalDedalADLLexer {
		+int T__50
		+int T__59
		+int RULE_REVISION_NUMB
		+int T__55
		+int T__56
		+int T__57
		+int T__58
		+int T__51
		+int T__52
		+int T__53
		+int T__54
		+int T__60
		+int T__61
		+int RULE_ID
		+int RULE_INT
		+int T__66
		+int RULE_ML_COMMENT
		+int T__67
		+int T__68
		+int T__69
		+int T__62
		+int T__63
		+int T__64
		+int T__65
		+int T__37
		+int T__38
		+int T__39
		+int T__33
		+int T__34
		+int T__35
		+int T__36
		+int T__30
		+int T__31
		+int T__32
		+int T__48
		+int T__49
		+int T__44
		+int T__45
		+int T__46
		+int T__47
		+int T__40
		+int T__41
		+int T__42
		+int T__43
		+int T__91
		+int T__100
		+int T__92
		+int T__93
		+int T__102
		+int T__94
		+int T__101
		+int T__90
		+int T__19
		+int T__15
		+int T__16
		+int T__17
		+int T__18
		+int T__99
		+int T__12
		+int T__13
		+int T__14
		+int T__95
		+int T__96
		+int T__97
		+int T__98
		+int T__26
		+int T__27
		+int T__28
		+int T__29
		+int T__22
		+int T__23
		+int T__24
		+int T__25
		+int T__20
		+int T__21
		+int T__70
		+int T__121
		+int T__71
		+int T__72
		+int T__120
		+int RULE_STRING
		+int RULE_SL_COMMENT
		+int T__77
		+int T__119
		+int T__78
		+int T__118
		+int T__79
		+int T__73
		+int T__115
		+int EOF
		+int T__74
		+int T__114
		+int T__75
		+int T__117
		+int T__76
		+int T__116
		+int T__80
		+int T__111
		+int T__81
		+int T__110
		+int T__82
		+int T__113
		+int T__83
		+int T__112
		+int RULE_WS
		+int RULE_ANY_OTHER
		+int T__88
		+int T__108
		+int T__89
		+int T__107
		+int T__109
		+int T__84
		+int T__104
		+int T__85
		+int T__103
		+int T__86
		+int T__106
		+int T__87
		+int T__105
		#DFA14 dfa14
		~String DFA14_eotS
		~String DFA14_eofS
		~String DFA14_minS
		~String DFA14_maxS
		~String DFA14_acceptS
		~String DFA14_specialS
		~String DFA14_transitionS
		~short DFA14_eot
		~short DFA14_eof
		~char DFA14_min
		~char DFA14_max
		~short DFA14_accept
		~short DFA14_special
		~short DFA14_transition
		+String getGrammarFileName()
		+void mT__12()
		+void mT__13()
		+void mT__14()
		+void mT__15()
		+void mT__16()
		+void mT__17()
		+void mT__18()
		+void mT__19()
		+void mT__20()
		+void mT__21()
		+void mT__22()
		+void mT__23()
		+void mT__24()
		+void mT__25()
		+void mT__26()
		+void mT__27()
		+void mT__28()
		+void mT__29()
		+void mT__30()
		+void mT__31()
		+void mT__32()
		+void mT__33()
		+void mT__34()
		+void mT__35()
		+void mT__36()
		+void mT__37()
		+void mT__38()
		+void mT__39()
		+void mT__40()
		+void mT__41()
		+void mT__42()
		+void mT__43()
		+void mT__44()
		+void mT__45()
		+void mT__46()
		+void mT__47()
		+void mT__48()
		+void mT__49()
		+void mT__50()
		+void mT__51()
		+void mT__52()
		+void mT__53()
		+void mT__54()
		+void mT__55()
		+void mT__56()
		+void mT__57()
		+void mT__58()
		+void mT__59()
		+void mT__60()
		+void mT__61()
		+void mT__62()
		+void mT__63()
		+void mT__64()
		+void mT__65()
		+void mT__66()
		+void mT__67()
		+void mT__68()
		+void mT__69()
		+void mT__70()
		+void mT__71()
		+void mT__72()
		+void mT__73()
		+void mT__74()
		+void mT__75()
		+void mT__76()
		+void mT__77()
		+void mT__78()
		+void mT__79()
		+void mT__80()
		+void mT__81()
		+void mT__82()
		+void mT__83()
		+void mT__84()
		+void mT__85()
		+void mT__86()
		+void mT__87()
		+void mT__88()
		+void mT__89()
		+void mT__90()
		+void mT__91()
		+void mT__92()
		+void mT__93()
		+void mT__94()
		+void mT__95()
		+void mT__96()
		+void mT__97()
		+void mT__98()
		+void mT__99()
		+void mT__100()
		+void mT__101()
		+void mT__102()
		+void mT__103()
		+void mT__104()
		+void mT__105()
		+void mT__106()
		+void mT__107()
		+void mT__108()
		+void mT__109()
		+void mT__110()
		+void mT__111()
		+void mT__112()
		+void mT__113()
		+void mT__114()
		+void mT__115()
		+void mT__116()
		+void mT__117()
		+void mT__118()
		+void mT__119()
		+void mT__120()
		+void mT__121()
		+void mRULE_REVISION_NUMB()
		+void mRULE_ID()
		+void mRULE_INT()
		+void mRULE_STRING()
		+void mRULE_ML_COMMENT()
		+void mRULE_SL_COMMENT()
		+void mRULE_WS()
		+void mRULE_ANY_OTHER()
		+void mTokens()
	}
	class fr.ema.dedal.xtext.parser.antlr.internal.DFA14 {
		+String getDescription()
		+int specialStateTransition(int, IntStream)
	}
	class fr.ema.dedal.xtext.parser.antlr.internal.InternalDedalADLParser {
		+String tokenNames
		+int T__50
		+int T__59
		+int RULE_REVISION_NUMB
		+int T__55
		+int T__56
		+int T__57
		+int T__58
		+int T__51
		+int T__52
		+int T__53
		+int T__54
		+int T__60
		+int T__61
		+int RULE_ID
		+int RULE_INT
		+int T__66
		+int RULE_ML_COMMENT
		+int T__67
		+int T__68
		+int T__69
		+int T__62
		+int T__63
		+int T__64
		+int T__65
		+int T__37
		+int T__38
		+int T__39
		+int T__33
		+int T__34
		+int T__35
		+int T__36
		+int T__30
		+int T__31
		+int T__32
		+int T__48
		+int T__49
		+int T__44
		+int T__45
		+int T__46
		+int T__47
		+int T__40
		+int T__41
		+int T__42
		+int T__43
		+int T__91
		+int T__100
		+int T__92
		+int T__93
		+int T__102
		+int T__94
		+int T__101
		+int T__90
		+int T__19
		+int T__15
		+int T__16
		+int T__17
		+int T__18
		+int T__99
		+int T__12
		+int T__13
		+int T__14
		+int T__95
		+int T__96
		+int T__97
		+int T__98
		+int T__26
		+int T__27
		+int T__28
		+int T__29
		+int T__22
		+int T__23
		+int T__24
		+int T__25
		+int T__20
		+int T__21
		+int T__70
		+int T__121
		+int T__71
		+int T__72
		+int T__120
		+int RULE_STRING
		+int RULE_SL_COMMENT
		+int T__77
		+int T__119
		+int T__78
		+int T__118
		+int T__79
		+int T__73
		+int T__115
		+int EOF
		+int T__74
		+int T__114
		+int T__75
		+int T__117
		+int T__76
		+int T__116
		+int T__80
		+int T__111
		+int T__81
		+int T__110
		+int T__82
		+int T__113
		+int T__83
		+int T__112
		+int RULE_WS
		+int RULE_ANY_OTHER
		+int T__88
		+int T__108
		+int T__89
		+int T__107
		+int T__109
		+int T__84
		+int T__104
		+int T__85
		+int T__103
		+int T__86
		+int T__106
		+int T__87
		+int T__105
		-DedalADLGrammarAccess grammarAccess
		+String[] getTokenNames()
		+String getGrammarFileName()
		#String getFirstRuleName()
		#DedalADLGrammarAccess getGrammarAccess()
		+EObject entryRuleDedalDiagram()
		+EObject ruleDedalDiagram()
		+EObject entryRuleArchitectureDescription()
		+EObject ruleArchitectureDescription()
		+EObject entryRuleComponent()
		+EObject ruleComponent()
		+EObject entryRuleCompClass()
		+EObject ruleCompClass()
		+EObject entryRuleInteraction()
		+EObject ruleInteraction()
		+String entryRuleEString()
		+AntlrDatatypeRuleToken ruleEString()
		+EObject entryRuleRepository()
		+EObject ruleRepository()
		+EObject entryRuleInterfaceType()
		+EObject ruleInterfaceType()
		+EObject entryRuleSignature()
		+EObject ruleSignature()
		+EObject entryRuleParameter()
		+EObject ruleParameter()
		+EObject entryRuleSpecification()
		+EObject ruleSpecification()
		+String entryRulespecification_name()
		+AntlrDatatypeRuleToken rulespecification_name()
		+EObject entryRuleCompRole()
		+EObject ruleCompRole()
		+String entryRulecomponent_role_name()
		+AntlrDatatypeRuleToken rulecomponent_role_name()
		+EObject entryRuleInterface()
		+EObject ruleInterface()
		+String entryRuleinterface_name()
		+AntlrDatatypeRuleToken ruleinterface_name()
		+EObject entryRuleRoleConnection()
		+EObject ruleRoleConnection()
		+String entryRuleconnection_name()
		+AntlrDatatypeRuleToken ruleconnection_name()
		+EObject entryRuleConfiguration()
		+EObject ruleConfiguration()
		+String entryRuleconfiguration_name()
		+AntlrDatatypeRuleToken ruleconfiguration_name()
		+String entryRulecomponent_class_name()
		+AntlrDatatypeRuleToken rulecomponent_class_name()
		+EObject entryRuleCompType()
		+EObject ruleCompType()
		+String entryRulecomponent_type_name()
		+AntlrDatatypeRuleToken rulecomponent_type_name()
		+EObject entryRuleCompClass_Impl()
		+EObject ruleCompClass_Impl()
		+EObject entryRuleAttribute()
		+EObject ruleAttribute()
		+String entryRuleattribute_name()
		+AntlrDatatypeRuleToken ruleattribute_name()
		+EObject entryRuleCompositeCompClass()
		+EObject ruleCompositeCompClass()
		+String entryRuledelegated_interface_list()
		+AntlrDatatypeRuleToken ruledelegated_interface_list()
		+String entryRuleinner_interface()
		+AntlrDatatypeRuleToken ruleinner_interface()
		+String entryRuleouter_interface()
		+AntlrDatatypeRuleToken ruleouter_interface()
		+String entryRulecomponent_class_identifier()
		+AntlrDatatypeRuleToken rulecomponent_class_identifier()
		+String entryRuleconnector_type()
		+AntlrDatatypeRuleToken ruleconnector_type()
		+String entryRuleconnector_type_name()
		+AntlrDatatypeRuleToken ruleconnector_type_name()
		+String entryRuleconnector_class()
		+AntlrDatatypeRuleToken ruleconnector_class()
		+String entryRuleconnector_class_name()
		+AntlrDatatypeRuleToken ruleconnector_class_name()
		+EObject entryRuleClassConnection()
		+EObject ruleClassConnection()
		+EObject entryRulePort_Impl()
		+EObject rulePort_Impl()
		+EObject entryRuleCompositePort()
		+EObject ruleCompositePort()
		+EObject entryRuleAssembly()
		+EObject ruleAssembly()
		+String entryRuleassembly_name()
		+AntlrDatatypeRuleToken ruleassembly_name()
		+String entryRuleConstraint()
		+AntlrDatatypeRuleToken ruleConstraint()
		+EObject entryRuleCompInstance()
		+EObject ruleCompInstance()
		+String entryRulecomponent_instance_name()
		+AntlrDatatypeRuleToken rulecomponent_instance_name()
		+EObject entryRuleInstConnection()
		+EObject ruleInstConnection()
		+String entryRuleconstraint_expression()
		+AntlrDatatypeRuleToken ruleconstraint_expression()
		+String entryRulelogical_constraint()
		+AntlrDatatypeRuleToken rulelogical_constraint()
		+String entryRulerelational_constraint()
		+AntlrDatatypeRuleToken rulerelational_constraint()
		+String entryRuleinstance_attribute()
		+AntlrDatatypeRuleToken ruleinstance_attribute()
		+String entryRuleattribute_value()
		+AntlrDatatypeRuleToken ruleattribute_value()
		+String entryRuleversion()
		+AntlrDatatypeRuleToken ruleversion()
		+String entryRulepre_version()
		+AntlrDatatypeRuleToken rulepre_version()
		+String entryRulechange()
		+AntlrDatatypeRuleToken rulechange()
		+String entryRulechange_time()
		+AntlrDatatypeRuleToken rulechange_time()
		+String entryRuleinitial_level()
		+AntlrDatatypeRuleToken ruleinitial_level()
		+String entryRulechange_operation()
		+AntlrDatatypeRuleToken rulechange_operation()
		+String entryRulearchitecture_element()
		+AntlrDatatypeRuleToken rulearchitecture_element()
		+String entryRulespecification_element()
		+AntlrDatatypeRuleToken rulespecification_element()
		+String entryRuleconfiguration_element()
		+AntlrDatatypeRuleToken ruleconfiguration_element()
		+String entryRuleassembly_element()
		+AntlrDatatypeRuleToken ruleassembly_element()
		+String entryRulechange_purpose()
		+AntlrDatatypeRuleToken rulechange_purpose()
		+String entryRulechange_origin()
		+AntlrDatatypeRuleToken rulechange_origin()
		+Enumerator ruleDIRECTION()
	}
	class fr.ema.dedal.xtext.parser.antlr.internal.FollowSets000 {
		+BitSet FOLLOW_1
		+BitSet FOLLOW_2
		+BitSet FOLLOW_3
		+BitSet FOLLOW_4
		+BitSet FOLLOW_5
		+BitSet FOLLOW_6
		+BitSet FOLLOW_7
		+BitSet FOLLOW_8
		+BitSet FOLLOW_9
		+BitSet FOLLOW_10
		+BitSet FOLLOW_11
		+BitSet FOLLOW_12
		+BitSet FOLLOW_13
		+BitSet FOLLOW_14
		+BitSet FOLLOW_15
		+BitSet FOLLOW_16
		+BitSet FOLLOW_17
		+BitSet FOLLOW_18
		+BitSet FOLLOW_19
		+BitSet FOLLOW_20
		+BitSet FOLLOW_21
		+BitSet FOLLOW_22
		+BitSet FOLLOW_23
		+BitSet FOLLOW_24
		+BitSet FOLLOW_25
		+BitSet FOLLOW_26
		+BitSet FOLLOW_27
		+BitSet FOLLOW_28
		+BitSet FOLLOW_29
		+BitSet FOLLOW_30
		+BitSet FOLLOW_31
		+BitSet FOLLOW_32
		+BitSet FOLLOW_33
		+BitSet FOLLOW_34
		+BitSet FOLLOW_35
		+BitSet FOLLOW_36
		+BitSet FOLLOW_37
		+BitSet FOLLOW_38
		+BitSet FOLLOW_39
		+BitSet FOLLOW_40
		+BitSet FOLLOW_41
		+BitSet FOLLOW_42
		+BitSet FOLLOW_43
		+BitSet FOLLOW_44
		+BitSet FOLLOW_45
		+BitSet FOLLOW_46
		+BitSet FOLLOW_47
		+BitSet FOLLOW_48
		+BitSet FOLLOW_49
		+BitSet FOLLOW_50
		+BitSet FOLLOW_51
		+BitSet FOLLOW_52
		+BitSet FOLLOW_53
		+BitSet FOLLOW_54
		+BitSet FOLLOW_55
		+BitSet FOLLOW_56
		+BitSet FOLLOW_57
		+BitSet FOLLOW_58
		+BitSet FOLLOW_59
		+BitSet FOLLOW_60
		+BitSet FOLLOW_61
		+BitSet FOLLOW_62
		+BitSet FOLLOW_63
		+BitSet FOLLOW_64
		+BitSet FOLLOW_65
		+BitSet FOLLOW_66
		+BitSet FOLLOW_67
		+BitSet FOLLOW_68
		+BitSet FOLLOW_69
		+BitSet FOLLOW_70
		+BitSet FOLLOW_71
		+BitSet FOLLOW_72
		+BitSet FOLLOW_73
		+BitSet FOLLOW_74
		+BitSet FOLLOW_75
		+BitSet FOLLOW_76
		+BitSet FOLLOW_77
		+BitSet FOLLOW_78
		+BitSet FOLLOW_79
		+BitSet FOLLOW_80
		+BitSet FOLLOW_81
		+BitSet FOLLOW_82
		+BitSet FOLLOW_83
		+BitSet FOLLOW_84
		+BitSet FOLLOW_85
		+BitSet FOLLOW_86
		+BitSet FOLLOW_87
		+BitSet FOLLOW_88
		+BitSet FOLLOW_89
		+BitSet FOLLOW_90
		+BitSet FOLLOW_91
		+BitSet FOLLOW_92
		+BitSet FOLLOW_93
		+BitSet FOLLOW_94
		+BitSet FOLLOW_95
		+BitSet FOLLOW_96
		+BitSet FOLLOW_97
		+BitSet FOLLOW_98
		+BitSet FOLLOW_99
		+BitSet FOLLOW_100
		+BitSet FOLLOW_101
		+BitSet FOLLOW_102
		+BitSet FOLLOW_103
		+BitSet FOLLOW_104
		+BitSet FOLLOW_105
		+BitSet FOLLOW_106
		+BitSet FOLLOW_107
		+BitSet FOLLOW_108
		+BitSet FOLLOW_109
		+BitSet FOLLOW_110
		+BitSet FOLLOW_111
		+BitSet FOLLOW_112
		+BitSet FOLLOW_113
		+BitSet FOLLOW_114
		+BitSet FOLLOW_115
		+BitSet FOLLOW_116
		+BitSet FOLLOW_117
		+BitSet FOLLOW_118
		+BitSet FOLLOW_119
		+BitSet FOLLOW_120
		+BitSet FOLLOW_121
		+BitSet FOLLOW_122
		+BitSet FOLLOW_123
		+BitSet FOLLOW_124
		+BitSet FOLLOW_125
		+BitSet FOLLOW_126
		+BitSet FOLLOW_127
	}
}

package fr.ema.dedal.xtext.serializer {
	abstract class fr.ema.dedal.xtext.serializer.AbstractDedalADLSemanticSequencer {
		-DedalADLGrammarAccess grammarAccess
		+void sequence(ISerializationContext, EObject)
		#void sequence_Assembly(ISerializationContext, Assembly)
		#void sequence_Attribute(ISerializationContext, Attribute)
		#void sequence_ClassConnection(ISerializationContext, ClassConnection)
		#void sequence_CompClass_Impl(ISerializationContext, CompClass)
		#void sequence_CompInstance(ISerializationContext, CompInstance)
		#void sequence_CompRole(ISerializationContext, CompRole)
		#void sequence_CompType(ISerializationContext, CompType)
		#void sequence_CompositeCompClass(ISerializationContext, CompositeCompClass)
		#void sequence_CompositePort(ISerializationContext, CompositePort)
		#void sequence_Configuration(ISerializationContext, Configuration)
		#void sequence_DedalDiagram(ISerializationContext, DedalDiagram)
		#void sequence_InstConnection(ISerializationContext, InstConnection)
		#void sequence_InterfaceType(ISerializationContext, InterfaceType)
		#void sequence_Interface(ISerializationContext, Interface)
		#void sequence_Parameter(ISerializationContext, dedal.Parameter)
		#void sequence_Port_Impl(ISerializationContext, Port)
		#void sequence_Repository(ISerializationContext, Repository)
		#void sequence_RoleConnection(ISerializationContext, RoleConnection)
		#void sequence_Signature(ISerializationContext, Signature)
		#void sequence_Specification(ISerializationContext, Specification)
	}
	abstract class fr.ema.dedal.xtext.serializer.AbstractDedalADLSyntacticSequencer {
		#DedalADLGrammarAccess grammarAccess
		#AbstractElementAlias match_Assembly___Assembly_constraintsKeyword_11_0_LeftParenthesisKeyword_11_1_ConstraintParserRuleCall_11_2___SemicolonKeyword_11_3_0_ConstraintParserRuleCall_11_3_1__a_RightParenthesisKeyword_11_4__q
		#AbstractElementAlias match_Assembly___ByKeyword_13_0_ChangeParserRuleCall_13_1__q
		#AbstractElementAlias match_Assembly___LeftParenthesisKeyword_4_0_REVISION_NUMBTerminalRuleCall_4_1_RightParenthesisKeyword_4_2__q
		#AbstractElementAlias match_Assembly___Pre_versionKeyword_12_0_VersionParserRuleCall_12_1__q
		#AbstractElementAlias match_Assembly___VersionIDKeyword_5_0_REVISION_NUMBTerminalRuleCall_5_1__q
		#AbstractElementAlias match_CompClass_Impl___Pre_versionKeyword_10_0_REVISION_NUMBTerminalRuleCall_10_1__q
		#AbstractElementAlias match_CompClass_Impl___VersionIDKeyword_9_0_REVISION_NUMBTerminalRuleCall_9_1__q
		#AbstractElementAlias match_CompositeCompClass___Delegated_interfacesKeyword_7_0_Delegated_interface_listParserRuleCall_7_1__q
		#AbstractElementAlias match_CompositeCompClass___LeftParenthesisKeyword_6_2_0_REVISION_NUMBTerminalRuleCall_6_2_1_RightParenthesisKeyword_6_2_2__q
		#AbstractElementAlias match_CompositeCompClass___Pre_versionKeyword_10_0_REVISION_NUMBTerminalRuleCall_10_1__q
		#AbstractElementAlias match_CompositeCompClass___VersionIDKeyword_9_0_REVISION_NUMBTerminalRuleCall_9_1__q
		#AbstractElementAlias match_Configuration___ByKeyword_5_0_ChangeParserRuleCall_5_1__q
		#AbstractElementAlias match_Configuration___Connector_classesKeyword_7_0_Connector_classParserRuleCall_7_1_AsKeyword_7_2_Connection_nameParserRuleCall_7_3___SemicolonKeyword_7_4_0_Connector_classParserRuleCall_7_4_1_AsKeyword_7_4_2_Connection_nameParserRuleCall_7_4_3__a__q
		#AbstractElementAlias match_Configuration___LeftParenthesisKeyword_2_2_0_REVISION_NUMBTerminalRuleCall_2_2_1_RightParenthesisKeyword_2_2_2__q
		#AbstractElementAlias match_Configuration___Pre_versionKeyword_4_0_Pre_versionParserRuleCall_4_1__q
		#AbstractElementAlias match_Configuration___VersionIDKeyword_3_0_REVISION_NUMBTerminalRuleCall_3_1__q
		#AbstractElementAlias match_Specification___ByKeyword_8_0_ChangeParserRuleCall_8_1__q
		#AbstractElementAlias match_Specification___Pre_versionKeyword_7_0_Pre_versionParserRuleCall_7_1__q
		#AbstractElementAlias match_Specification___VersionIDKeyword_6_0_REVISION_NUMBTerminalRuleCall_6_1__q
		#void init(IGrammarAccess)
		#String getUnassignedRuleCallToken(EObject, RuleCall, INode)
		#String getConstraintToken(EObject, RuleCall, INode)
		#String getREVISION_NUMBToken(EObject, RuleCall, INode)
		#String getchangeToken(EObject, RuleCall, INode)
		#String getconnection_nameToken(EObject, RuleCall, INode)
		#String getconnector_classToken(EObject, RuleCall, INode)
		#String getdelegated_interface_listToken(EObject, RuleCall, INode)
		#String getpre_versionToken(EObject, RuleCall, INode)
		#String getversionToken(EObject, RuleCall, INode)
		#void emitUnassignedTokens(EObject, ISynTransition, INode, INode)
		#void emit_Assembly___Assembly_constraintsKeyword_11_0_LeftParenthesisKeyword_11_1_ConstraintParserRuleCall_11_2___SemicolonKeyword_11_3_0_ConstraintParserRuleCall_11_3_1__a_RightParenthesisKeyword_11_4__q(EObject, ISynNavigable, List)
		#void emit_Assembly___ByKeyword_13_0_ChangeParserRuleCall_13_1__q(EObject, ISynNavigable, List)
		#void emit_Assembly___LeftParenthesisKeyword_4_0_REVISION_NUMBTerminalRuleCall_4_1_RightParenthesisKeyword_4_2__q(EObject, ISynNavigable, List)
		#void emit_Assembly___Pre_versionKeyword_12_0_VersionParserRuleCall_12_1__q(EObject, ISynNavigable, List)
		#void emit_Assembly___VersionIDKeyword_5_0_REVISION_NUMBTerminalRuleCall_5_1__q(EObject, ISynNavigable, List)
		#void emit_CompClass_Impl___Pre_versionKeyword_10_0_REVISION_NUMBTerminalRuleCall_10_1__q(EObject, ISynNavigable, List)
		#void emit_CompClass_Impl___VersionIDKeyword_9_0_REVISION_NUMBTerminalRuleCall_9_1__q(EObject, ISynNavigable, List)
		#void emit_CompositeCompClass___Delegated_interfacesKeyword_7_0_Delegated_interface_listParserRuleCall_7_1__q(EObject, ISynNavigable, List)
		#void emit_CompositeCompClass___LeftParenthesisKeyword_6_2_0_REVISION_NUMBTerminalRuleCall_6_2_1_RightParenthesisKeyword_6_2_2__q(EObject, ISynNavigable, List)
		#void emit_CompositeCompClass___Pre_versionKeyword_10_0_REVISION_NUMBTerminalRuleCall_10_1__q(EObject, ISynNavigable, List)
		#void emit_CompositeCompClass___VersionIDKeyword_9_0_REVISION_NUMBTerminalRuleCall_9_1__q(EObject, ISynNavigable, List)
		#void emit_Configuration___ByKeyword_5_0_ChangeParserRuleCall_5_1__q(EObject, ISynNavigable, List)
		#void emit_Configuration___Connector_classesKeyword_7_0_Connector_classParserRuleCall_7_1_AsKeyword_7_2_Connection_nameParserRuleCall_7_3___SemicolonKeyword_7_4_0_Connector_classParserRuleCall_7_4_1_AsKeyword_7_4_2_Connection_nameParserRuleCall_7_4_3__a__q(EObject, ISynNavigable, List)
		#void emit_Configuration___LeftParenthesisKeyword_2_2_0_REVISION_NUMBTerminalRuleCall_2_2_1_RightParenthesisKeyword_2_2_2__q(EObject, ISynNavigable, List)
		#void emit_Configuration___Pre_versionKeyword_4_0_Pre_versionParserRuleCall_4_1__q(EObject, ISynNavigable, List)
		#void emit_Configuration___VersionIDKeyword_3_0_REVISION_NUMBTerminalRuleCall_3_1__q(EObject, ISynNavigable, List)
		#void emit_Specification___ByKeyword_8_0_ChangeParserRuleCall_8_1__q(EObject, ISynNavigable, List)
		#void emit_Specification___Pre_versionKeyword_7_0_Pre_versionParserRuleCall_7_1__q(EObject, ISynNavigable, List)
		#void emit_Specification___VersionIDKeyword_6_0_REVISION_NUMBTerminalRuleCall_6_1__q(EObject, ISynNavigable, List)
	}
	class fr.ema.dedal.xtext.serializer.DedalADLSemanticSequencer {
	}
	class fr.ema.dedal.xtext.serializer.DedalADLSyntacticSequencer {
	}
}

package fr.ema.dedal.xtext.services {
	class fr.ema.dedal.xtext.services.DedalADLGrammarAccess {
		-DedalDiagramElements pDedalDiagram
		-ArchitectureDescriptionElements pArchitectureDescription
		-ComponentElements pComponent
		-CompClassElements pCompClass
		-InteractionElements pInteraction
		-PortElements pPort
		-EStringElements pEString
		-RepositoryElements pRepository
		-InterfaceTypeElements pInterfaceType
		-EIntElements pEInt
		-SignatureElements pSignature
		-ParameterElements pParameter
		-SpecificationElements pSpecification
		-Specification_nameElements pSpecification_name
		-CompRoleElements pCompRole
		-Component_role_nameElements pComponent_role_name
		-InterfaceElements pInterface
		-Interface_nameElements pInterface_name
		-DIRECTIONElements eDIRECTION
		-RoleConnectionElements pRoleConnection
		-Connection_nameElements pConnection_name
		-ConfigurationElements pConfiguration
		-Configuration_nameElements pConfiguration_name
		-Component_class_nameElements pComponent_class_name
		-CompTypeElements pCompType
		-Component_type_nameElements pComponent_type_name
		-CompClass_ImplElements pCompClass_Impl
		-AttributeElements pAttribute
		-Attribute_nameElements pAttribute_name
		-ATTRIBUTE_TYPEElements eATTRIBUTE_TYPE
		-CompositeCompClassElements pCompositeCompClass
		-Delegated_interface_listElements pDelegated_interface_list
		-Inner_interfaceElements pInner_interface
		-Outer_interfaceElements pOuter_interface
		-Component_class_identifierElements pComponent_class_identifier
		-Connector_typeElements pConnector_type
		-Connector_type_nameElements pConnector_type_name
		-Connector_classElements pConnector_class
		-Connector_class_nameElements pConnector_class_name
		-ClassConnectionElements pClassConnection
		-Port_ImplElements pPort_Impl
		-CompositePortElements pCompositePort
		-AssemblyElements pAssembly
		-Assembly_nameElements pAssembly_name
		-ConstraintElements pConstraint
		-CompInstanceElements pCompInstance
		-Component_instance_nameElements pComponent_instance_name
		-InstConnectionElements pInstConnection
		-Constraint_expressionElements pConstraint_expression
		-Logical_constraintElements pLogical_constraint
		-Relational_constraintElements pRelational_constraint
		-Instance_attributeElements pInstance_attribute
		-Attribute_valueElements pAttribute_value
		-VersionElements pVersion
		-Pre_versionElements pPre_version
		-TerminalRule tREVISION_NUMB
		-ChangeElements pChange
		-Change_timeElements pChange_time
		-Initial_levelElements pInitial_level
		-Change_operationElements pChange_operation
		-Architecture_elementElements pArchitecture_element
		-Specification_elementElements pSpecification_element
		-Configuration_elementElements pConfiguration_element
		-Assembly_elementElements pAssembly_element
		-Change_purposeElements pChange_purpose
		-Change_originElements pChange_origin
		-Grammar grammar
		-TerminalsGrammarAccess gaTerminals
		#Grammar internalFindGrammar(GrammarProvider)
		+Grammar getGrammar()
		+TerminalsGrammarAccess getTerminalsGrammarAccess()
		+DedalDiagramElements getDedalDiagramAccess()
		+ParserRule getDedalDiagramRule()
		+ArchitectureDescriptionElements getArchitectureDescriptionAccess()
		+ParserRule getArchitectureDescriptionRule()
		+ComponentElements getComponentAccess()
		+ParserRule getComponentRule()
		+CompClassElements getCompClassAccess()
		+ParserRule getCompClassRule()
		+InteractionElements getInteractionAccess()
		+ParserRule getInteractionRule()
		+PortElements getPortAccess()
		+ParserRule getPortRule()
		+EStringElements getEStringAccess()
		+ParserRule getEStringRule()
		+RepositoryElements getRepositoryAccess()
		+ParserRule getRepositoryRule()
		+InterfaceTypeElements getInterfaceTypeAccess()
		+ParserRule getInterfaceTypeRule()
		+EIntElements getEIntAccess()
		+ParserRule getEIntRule()
		+SignatureElements getSignatureAccess()
		+ParserRule getSignatureRule()
		+ParameterElements getParameterAccess()
		+ParserRule getParameterRule()
		+SpecificationElements getSpecificationAccess()
		+ParserRule getSpecificationRule()
		+Specification_nameElements getSpecification_nameAccess()
		+ParserRule getSpecification_nameRule()
		+CompRoleElements getCompRoleAccess()
		+ParserRule getCompRoleRule()
		+Component_role_nameElements getComponent_role_nameAccess()
		+ParserRule getComponent_role_nameRule()
		+InterfaceElements getInterfaceAccess()
		+ParserRule getInterfaceRule()
		+Interface_nameElements getInterface_nameAccess()
		+ParserRule getInterface_nameRule()
		+DIRECTIONElements getDIRECTIONAccess()
		+EnumRule getDIRECTIONRule()
		+RoleConnectionElements getRoleConnectionAccess()
		+ParserRule getRoleConnectionRule()
		+Connection_nameElements getConnection_nameAccess()
		+ParserRule getConnection_nameRule()
		+ConfigurationElements getConfigurationAccess()
		+ParserRule getConfigurationRule()
		+Configuration_nameElements getConfiguration_nameAccess()
		+ParserRule getConfiguration_nameRule()
		+Component_class_nameElements getComponent_class_nameAccess()
		+ParserRule getComponent_class_nameRule()
		+CompTypeElements getCompTypeAccess()
		+ParserRule getCompTypeRule()
		+Component_type_nameElements getComponent_type_nameAccess()
		+ParserRule getComponent_type_nameRule()
		+CompClass_ImplElements getCompClass_ImplAccess()
		+ParserRule getCompClass_ImplRule()
		+AttributeElements getAttributeAccess()
		+ParserRule getAttributeRule()
		+Attribute_nameElements getAttribute_nameAccess()
		+ParserRule getAttribute_nameRule()
		+ATTRIBUTE_TYPEElements getATTRIBUTE_TYPEAccess()
		+EnumRule getATTRIBUTE_TYPERule()
		+CompositeCompClassElements getCompositeCompClassAccess()
		+ParserRule getCompositeCompClassRule()
		+Delegated_interface_listElements getDelegated_interface_listAccess()
		+ParserRule getDelegated_interface_listRule()
		+Inner_interfaceElements getInner_interfaceAccess()
		+ParserRule getInner_interfaceRule()
		+Outer_interfaceElements getOuter_interfaceAccess()
		+ParserRule getOuter_interfaceRule()
		+Component_class_identifierElements getComponent_class_identifierAccess()
		+ParserRule getComponent_class_identifierRule()
		+Connector_typeElements getConnector_typeAccess()
		+ParserRule getConnector_typeRule()
		+Connector_type_nameElements getConnector_type_nameAccess()
		+ParserRule getConnector_type_nameRule()
		+Connector_classElements getConnector_classAccess()
		+ParserRule getConnector_classRule()
		+Connector_class_nameElements getConnector_class_nameAccess()
		+ParserRule getConnector_class_nameRule()
		+ClassConnectionElements getClassConnectionAccess()
		+ParserRule getClassConnectionRule()
		+Port_ImplElements getPort_ImplAccess()
		+ParserRule getPort_ImplRule()
		+CompositePortElements getCompositePortAccess()
		+ParserRule getCompositePortRule()
		+AssemblyElements getAssemblyAccess()
		+ParserRule getAssemblyRule()
		+Assembly_nameElements getAssembly_nameAccess()
		+ParserRule getAssembly_nameRule()
		+ConstraintElements getConstraintAccess()
		+ParserRule getConstraintRule()
		+CompInstanceElements getCompInstanceAccess()
		+ParserRule getCompInstanceRule()
		+Component_instance_nameElements getComponent_instance_nameAccess()
		+ParserRule getComponent_instance_nameRule()
		+InstConnectionElements getInstConnectionAccess()
		+ParserRule getInstConnectionRule()
		+Constraint_expressionElements getConstraint_expressionAccess()
		+ParserRule getConstraint_expressionRule()
		+Logical_constraintElements getLogical_constraintAccess()
		+ParserRule getLogical_constraintRule()
		+Relational_constraintElements getRelational_constraintAccess()
		+ParserRule getRelational_constraintRule()
		+Instance_attributeElements getInstance_attributeAccess()
		+ParserRule getInstance_attributeRule()
		+Attribute_valueElements getAttribute_valueAccess()
		+ParserRule getAttribute_valueRule()
		+VersionElements getVersionAccess()
		+ParserRule getVersionRule()
		+Pre_versionElements getPre_versionAccess()
		+ParserRule getPre_versionRule()
		+TerminalRule getREVISION_NUMBRule()
		+ChangeElements getChangeAccess()
		+ParserRule getChangeRule()
		+Change_timeElements getChange_timeAccess()
		+ParserRule getChange_timeRule()
		+Initial_levelElements getInitial_levelAccess()
		+ParserRule getInitial_levelRule()
		+Change_operationElements getChange_operationAccess()
		+ParserRule getChange_operationRule()
		+Architecture_elementElements getArchitecture_elementAccess()
		+ParserRule getArchitecture_elementRule()
		+Specification_elementElements getSpecification_elementAccess()
		+ParserRule getSpecification_elementRule()
		+Configuration_elementElements getConfiguration_elementAccess()
		+ParserRule getConfiguration_elementRule()
		+Assembly_elementElements getAssembly_elementAccess()
		+ParserRule getAssembly_elementRule()
		+Change_purposeElements getChange_purposeAccess()
		+ParserRule getChange_purposeRule()
		+Change_originElements getChange_originAccess()
		+ParserRule getChange_originRule()
		+TerminalRule getIDRule()
		+TerminalRule getINTRule()
		+TerminalRule getSTRINGRule()
		+TerminalRule getML_COMMENTRule()
		+TerminalRule getSL_COMMENTRule()
		+TerminalRule getWSRule()
		+TerminalRule getANY_OTHERRule()
	}
	class fr.ema.dedal.xtext.services.DedalDiagramElements {
		-ParserRule rule
		-Group cGroup
		-Keyword cDedal_diagramKeyword_0
		-Assignment cNameAssignment_1
		-RuleCall cNameEStringParserRuleCall_1_0
		-Group cGroup_2
		-Group cGroup_2_0
		-Keyword cArchitecture_descriptionsKeyword_2_0_0
		-Keyword cLeftParenthesisKeyword_2_0_1
		-Assignment cArchitectureDescriptionsAssignment_2_0_2
		-RuleCall cArchitectureDescriptionsArchitectureDescriptionParserRuleCall_2_0_2_0
		-Group cGroup_2_0_3
		-Keyword cSemicolonKeyword_2_0_3_0
		-Assignment cArchitectureDescriptionsAssignment_2_0_3_1
		-RuleCall cArchitectureDescriptionsArchitectureDescriptionParserRuleCall_2_0_3_1_0
		-Keyword cRightParenthesisKeyword_2_0_4
		-Group cGroup_2_1
		-Keyword cRepositoriesKeyword_2_1_0
		-Keyword cLeftParenthesisKeyword_2_1_1
		-Assignment cRepositoriesAssignment_2_1_2
		-RuleCall cRepositoriesRepositoryParserRuleCall_2_1_2_0
		-Group cGroup_2_1_3
		-Keyword cSemicolonKeyword_2_1_3_0
		-Assignment cRepositoriesAssignment_2_1_3_1
		-RuleCall cRepositoriesRepositoryParserRuleCall_2_1_3_1_0
		-Keyword cRightParenthesisKeyword_2_1_4
		+ParserRule getRule()
		+Group getGroup()
		+Keyword getDedal_diagramKeyword_0()
		+Assignment getNameAssignment_1()
		+RuleCall getNameEStringParserRuleCall_1_0()
		+Group getGroup_2()
		+Group getGroup_2_0()
		+Keyword getArchitecture_descriptionsKeyword_2_0_0()
		+Keyword getLeftParenthesisKeyword_2_0_1()
		+Assignment getArchitectureDescriptionsAssignment_2_0_2()
		+RuleCall getArchitectureDescriptionsArchitectureDescriptionParserRuleCall_2_0_2_0()
		+Group getGroup_2_0_3()
		+Keyword getSemicolonKeyword_2_0_3_0()
		+Assignment getArchitectureDescriptionsAssignment_2_0_3_1()
		+RuleCall getArchitectureDescriptionsArchitectureDescriptionParserRuleCall_2_0_3_1_0()
		+Keyword getRightParenthesisKeyword_2_0_4()
		+Group getGroup_2_1()
		+Keyword getRepositoriesKeyword_2_1_0()
		+Keyword getLeftParenthesisKeyword_2_1_1()
		+Assignment getRepositoriesAssignment_2_1_2()
		+RuleCall getRepositoriesRepositoryParserRuleCall_2_1_2_0()
		+Group getGroup_2_1_3()
		+Keyword getSemicolonKeyword_2_1_3_0()
		+Assignment getRepositoriesAssignment_2_1_3_1()
		+RuleCall getRepositoriesRepositoryParserRuleCall_2_1_3_1_0()
		+Keyword getRightParenthesisKeyword_2_1_4()
	}
	class fr.ema.dedal.xtext.services.ArchitectureDescriptionElements {
		-ParserRule rule
		-Alternatives cAlternatives
		-RuleCall cSpecificationParserRuleCall_0
		-RuleCall cConfigurationParserRuleCall_1
		-RuleCall cAssemblyParserRuleCall_2
		+ParserRule getRule()
		+Alternatives getAlternatives()
		+RuleCall getSpecificationParserRuleCall_0()
		+RuleCall getConfigurationParserRuleCall_1()
		+RuleCall getAssemblyParserRuleCall_2()
	}
	class fr.ema.dedal.xtext.services.ComponentElements {
		-ParserRule rule
		-Alternatives cAlternatives
		-RuleCall cCompRoleParserRuleCall_0
		-RuleCall cCompClass_ImplParserRuleCall_1
		-RuleCall cCompInstanceParserRuleCall_2
		-RuleCall cCompositeCompClassParserRuleCall_3
		-RuleCall cCompTypeParserRuleCall_4
		+ParserRule getRule()
		+Alternatives getAlternatives()
		+RuleCall getCompRoleParserRuleCall_0()
		+RuleCall getCompClass_ImplParserRuleCall_1()
		+RuleCall getCompInstanceParserRuleCall_2()
		+RuleCall getCompositeCompClassParserRuleCall_3()
		+RuleCall getCompTypeParserRuleCall_4()
	}
	class fr.ema.dedal.xtext.services.CompClassElements {
		-ParserRule rule
		-Alternatives cAlternatives
		-RuleCall cCompClass_ImplParserRuleCall_0
		-RuleCall cCompositeCompClassParserRuleCall_1
		+ParserRule getRule()
		+Alternatives getAlternatives()
		+RuleCall getCompClass_ImplParserRuleCall_0()
		+RuleCall getCompositeCompClassParserRuleCall_1()
	}
	class fr.ema.dedal.xtext.services.InteractionElements {
		-ParserRule rule
		-Alternatives cAlternatives
		-RuleCall cInterfaceParserRuleCall_0
		-RuleCall cPort_ImplParserRuleCall_1
		-RuleCall cCompositePortParserRuleCall_2
		+ParserRule getRule()
		+Alternatives getAlternatives()
		+RuleCall getInterfaceParserRuleCall_0()
		+RuleCall getPort_ImplParserRuleCall_1()
		+RuleCall getCompositePortParserRuleCall_2()
	}
	class fr.ema.dedal.xtext.services.PortElements {
		-ParserRule rule
		-Alternatives cAlternatives
		-RuleCall cPort_ImplParserRuleCall_0
		-RuleCall cCompositePortParserRuleCall_1
		+ParserRule getRule()
		+Alternatives getAlternatives()
		+RuleCall getPort_ImplParserRuleCall_0()
		+RuleCall getCompositePortParserRuleCall_1()
	}
	class fr.ema.dedal.xtext.services.EStringElements {
		-ParserRule rule
		-Alternatives cAlternatives
		-RuleCall cSTRINGTerminalRuleCall_0
		-RuleCall cIDTerminalRuleCall_1
		+ParserRule getRule()
		+Alternatives getAlternatives()
		+RuleCall getSTRINGTerminalRuleCall_0()
		+RuleCall getIDTerminalRuleCall_1()
	}
	class fr.ema.dedal.xtext.services.RepositoryElements {
		-ParserRule rule
		-Group cGroup
		-Keyword cRepositoryKeyword_0
		-Assignment cNameAssignment_1
		-RuleCall cNameEStringParserRuleCall_1_0
		-Group cGroup_2
		-Keyword cComponentsKeyword_2_0
		-Keyword cLeftParenthesisKeyword_2_1
		-Assignment cComponentsAssignment_2_2
		-RuleCall cComponentsComponentParserRuleCall_2_2_0
		-Group cGroup_2_3
		-Keyword cSemicolonKeyword_2_3_0
		-Assignment cComponentsAssignment_2_3_1
		-RuleCall cComponentsComponentParserRuleCall_2_3_1_0
		-Keyword cRightParenthesisKeyword_2_4
		-Group cGroup_3
		-Keyword cInterface_typesKeyword_3_0
		-Keyword cLeftParenthesisKeyword_3_1
		-Assignment cInterfaceTypesAssignment_3_2
		-RuleCall cInterfaceTypesInterfaceTypeParserRuleCall_3_2_0
		-Group cGroup_3_3
		-Keyword cSemicolonKeyword_3_3_0
		-Assignment cInterfaceTypesAssignment_3_3_1
		-RuleCall cInterfaceTypesInterfaceTypeParserRuleCall_3_3_1_0
		-Keyword cRightParenthesisKeyword_3_4
		+ParserRule getRule()
		+Group getGroup()
		+Keyword getRepositoryKeyword_0()
		+Assignment getNameAssignment_1()
		+RuleCall getNameEStringParserRuleCall_1_0()
		+Group getGroup_2()
		+Keyword getComponentsKeyword_2_0()
		+Keyword getLeftParenthesisKeyword_2_1()
		+Assignment getComponentsAssignment_2_2()
		+RuleCall getComponentsComponentParserRuleCall_2_2_0()
		+Group getGroup_2_3()
		+Keyword getSemicolonKeyword_2_3_0()
		+Assignment getComponentsAssignment_2_3_1()
		+RuleCall getComponentsComponentParserRuleCall_2_3_1_0()
		+Keyword getRightParenthesisKeyword_2_4()
		+Group getGroup_3()
		+Keyword getInterface_typesKeyword_3_0()
		+Keyword getLeftParenthesisKeyword_3_1()
		+Assignment getInterfaceTypesAssignment_3_2()
		+RuleCall getInterfaceTypesInterfaceTypeParserRuleCall_3_2_0()
		+Group getGroup_3_3()
		+Keyword getSemicolonKeyword_3_3_0()
		+Assignment getInterfaceTypesAssignment_3_3_1()
		+RuleCall getInterfaceTypesInterfaceTypeParserRuleCall_3_3_1_0()
		+Keyword getRightParenthesisKeyword_3_4()
	}
	class fr.ema.dedal.xtext.services.InterfaceTypeElements {
		-ParserRule rule
		-Group cGroup
		-Keyword cTypeKeyword_0
		-Assignment cNameAssignment_1
		-RuleCall cNameEStringParserRuleCall_1_0
		-Keyword cSignaturesKeyword_2
		-Keyword cLeftParenthesisKeyword_3
		-Assignment cSignaturesAssignment_4
		-RuleCall cSignaturesSignatureParserRuleCall_4_0
		-Group cGroup_5
		-Keyword cSemicolonKeyword_5_0
		-Assignment cSignaturesAssignment_5_1
		-RuleCall cSignaturesSignatureParserRuleCall_5_1_0
		-Keyword cRightParenthesisKeyword_6
		+ParserRule getRule()
		+Group getGroup()
		+Keyword getTypeKeyword_0()
		+Assignment getNameAssignment_1()
		+RuleCall getNameEStringParserRuleCall_1_0()
		+Keyword getSignaturesKeyword_2()
		+Keyword getLeftParenthesisKeyword_3()
		+Assignment getSignaturesAssignment_4()
		+RuleCall getSignaturesSignatureParserRuleCall_4_0()
		+Group getGroup_5()
		+Keyword getSemicolonKeyword_5_0()
		+Assignment getSignaturesAssignment_5_1()
		+RuleCall getSignaturesSignatureParserRuleCall_5_1_0()
		+Keyword getRightParenthesisKeyword_6()
	}
	class fr.ema.dedal.xtext.services.EIntElements {
		-ParserRule rule
		-Group cGroup
		-Keyword cHyphenMinusKeyword_0
		-RuleCall cINTTerminalRuleCall_1
		+ParserRule getRule()
		+Group getGroup()
		+Keyword getHyphenMinusKeyword_0()
		+RuleCall getINTTerminalRuleCall_1()
	}
	class fr.ema.dedal.xtext.services.SignatureElements {
		-ParserRule rule
		-Group cGroup
		-Keyword cSignatureKeyword_0
		-Assignment cIdAssignment_1
		-RuleCall cIdEStringParserRuleCall_1_0
		-Group cGroup_2
		-Keyword cNameKeyword_2_0
		-Assignment cNameAssignment_2_1
		-RuleCall cNameEStringParserRuleCall_2_1_0
		-Group cGroup_3
		-Keyword cTypeKeyword_3_0
		-Assignment cTypeAssignment_3_1
		-RuleCall cTypeEStringParserRuleCall_3_1_0
		-Group cGroup_4
		-Keyword cParametersKeyword_4_0
		-Keyword cLeftParenthesisKeyword_4_1
		-Assignment cParametersAssignment_4_2
		-RuleCall cParametersParameterParserRuleCall_4_2_0
		-Group cGroup_4_3
		-Keyword cSemicolonKeyword_4_3_0
		-Assignment cParametersAssignment_4_3_1
		-RuleCall cParametersParameterParserRuleCall_4_3_1_0
		-Keyword cRightParenthesisKeyword_4_4
		+ParserRule getRule()
		+Group getGroup()
		+Keyword getSignatureKeyword_0()
		+Assignment getIdAssignment_1()
		+RuleCall getIdEStringParserRuleCall_1_0()
		+Group getGroup_2()
		+Keyword getNameKeyword_2_0()
		+Assignment getNameAssignment_2_1()
		+RuleCall getNameEStringParserRuleCall_2_1_0()
		+Group getGroup_3()
		+Keyword getTypeKeyword_3_0()
		+Assignment getTypeAssignment_3_1()
		+RuleCall getTypeEStringParserRuleCall_3_1_0()
		+Group getGroup_4()
		+Keyword getParametersKeyword_4_0()
		+Keyword getLeftParenthesisKeyword_4_1()
		+Assignment getParametersAssignment_4_2()
		+RuleCall getParametersParameterParserRuleCall_4_2_0()
		+Group getGroup_4_3()
		+Keyword getSemicolonKeyword_4_3_0()
		+Assignment getParametersAssignment_4_3_1()
		+RuleCall getParametersParameterParserRuleCall_4_3_1_0()
		+Keyword getRightParenthesisKeyword_4_4()
	}
	class fr.ema.dedal.xtext.services.ParameterElements {
		-ParserRule rule
		-Group cGroup
		-Keyword cParameterKeyword_0
		-Assignment cIdAssignment_1
		-RuleCall cIdEStringParserRuleCall_1_0
		-Group cGroup_2
		-Keyword cNameKeyword_2_0
		-Assignment cNameAssignment_2_1
		-RuleCall cNameEStringParserRuleCall_2_1_0
		-Group cGroup_3
		-Keyword cTypeKeyword_3_0
		-Assignment cTypeAssignment_3_1
		-RuleCall cTypeEStringParserRuleCall_3_1_0
		+ParserRule getRule()
		+Group getGroup()
		+Keyword getParameterKeyword_0()
		+Assignment getIdAssignment_1()
		+RuleCall getIdEStringParserRuleCall_1_0()
		+Group getGroup_2()
		+Keyword getNameKeyword_2_0()
		+Assignment getNameAssignment_2_1()
		+RuleCall getNameEStringParserRuleCall_2_1_0()
		+Group getGroup_3()
		+Keyword getTypeKeyword_3_0()
		+Assignment getTypeAssignment_3_1()
		+RuleCall getTypeEStringParserRuleCall_3_1_0()
	}
	class fr.ema.dedal.xtext.services.SpecificationElements {
		-ParserRule rule
		-Group cGroup
		-Keyword cSpecificationKeyword_0
		-Assignment cNameAssignment_1
		-RuleCall cNameSpecification_nameParserRuleCall_1_0
		-Keyword cComponent_rolesKeyword_2
		-Assignment cSpecComponentsAssignment_3
		-RuleCall cSpecComponentsCompRoleParserRuleCall_3_0
		-Group cGroup_4
		-Keyword cSemicolonKeyword_4_0
		-Assignment cSpecComponentsAssignment_4_1
		-RuleCall cSpecComponentsCompRoleParserRuleCall_4_1_0
		-Group cGroup_5
		-Keyword cConnectionsKeyword_5_0
		-Assignment cSpecConnectionsAssignment_5_1
		-RuleCall cSpecConnectionsRoleConnectionParserRuleCall_5_1_0
		-Assignment cSpecConnectionsAssignment_5_2
		-RuleCall cSpecConnectionsRoleConnectionParserRuleCall_5_2_0
		-Group cGroup_6
		-Keyword cVersionIDKeyword_6_0
		-RuleCall cREVISION_NUMBTerminalRuleCall_6_1
		-Group cGroup_7
		-Keyword cPre_versionKeyword_7_0
		-RuleCall cPre_versionParserRuleCall_7_1
		-Group cGroup_8
		-Keyword cByKeyword_8_0
		-RuleCall cChangeParserRuleCall_8_1
		-Group cGroup_9
		-Keyword cInterface_typesKeyword_9_0
		-Assignment cInterfaceTypesAssignment_9_1
		-RuleCall cInterfaceTypesInterfaceTypeParserRuleCall_9_1_0
		-Group cGroup_9_2
		-Keyword cSemicolonKeyword_9_2_0
		-Assignment cInterfaceTypesAssignment_9_2_1
		-RuleCall cInterfaceTypesInterfaceTypeParserRuleCall_9_2_1_0
		+ParserRule getRule()
		+Group getGroup()
		+Keyword getSpecificationKeyword_0()
		+Assignment getNameAssignment_1()
		+RuleCall getNameSpecification_nameParserRuleCall_1_0()
		+Keyword getComponent_rolesKeyword_2()
		+Assignment getSpecComponentsAssignment_3()
		+RuleCall getSpecComponentsCompRoleParserRuleCall_3_0()
		+Group getGroup_4()
		+Keyword getSemicolonKeyword_4_0()
		+Assignment getSpecComponentsAssignment_4_1()
		+RuleCall getSpecComponentsCompRoleParserRuleCall_4_1_0()
		+Group getGroup_5()
		+Keyword getConnectionsKeyword_5_0()
		+Assignment getSpecConnectionsAssignment_5_1()
		+RuleCall getSpecConnectionsRoleConnectionParserRuleCall_5_1_0()
		+Assignment getSpecConnectionsAssignment_5_2()
		+RuleCall getSpecConnectionsRoleConnectionParserRuleCall_5_2_0()
		+Group getGroup_6()
		+Keyword getVersionIDKeyword_6_0()
		+RuleCall getREVISION_NUMBTerminalRuleCall_6_1()
		+Group getGroup_7()
		+Keyword getPre_versionKeyword_7_0()
		+RuleCall getPre_versionParserRuleCall_7_1()
		+Group getGroup_8()
		+Keyword getByKeyword_8_0()
		+RuleCall getChangeParserRuleCall_8_1()
		+Group getGroup_9()
		+Keyword getInterface_typesKeyword_9_0()
		+Assignment getInterfaceTypesAssignment_9_1()
		+RuleCall getInterfaceTypesInterfaceTypeParserRuleCall_9_1_0()
		+Group getGroup_9_2()
		+Keyword getSemicolonKeyword_9_2_0()
		+Assignment getInterfaceTypesAssignment_9_2_1()
		+RuleCall getInterfaceTypesInterfaceTypeParserRuleCall_9_2_1_0()
	}
	class fr.ema.dedal.xtext.services.Specification_nameElements {
		-ParserRule rule
		-RuleCall cIDTerminalRuleCall
		+ParserRule getRule()
		+RuleCall getIDTerminalRuleCall()
	}
	class fr.ema.dedal.xtext.services.CompRoleElements {
		-ParserRule rule
		-Group cGroup
		-Keyword cComponent_roleKeyword_0
		-Assignment cNameAssignment_1
		-RuleCall cNameComponent_role_nameParserRuleCall_1_0
		-Keyword cIdKeyword_2
		-Assignment cIdAssignment_3
		-RuleCall cIdEStringParserRuleCall_3_0
		-Group cGroup_4
		-Keyword cRequired_interfacesKeyword_4_0
		-Assignment cCompInterfacesAssignment_4_1
		-RuleCall cCompInterfacesInterfaceParserRuleCall_4_1_0
		-Group cGroup_4_2
		-Keyword cSemicolonKeyword_4_2_0
		-Assignment cCompInterfacesAssignment_4_2_1
		-RuleCall cCompInterfacesInterfaceParserRuleCall_4_2_1_0
		-Group cGroup_5
		-Keyword cProvided_interfacesKeyword_5_0
		-Assignment cCompInterfacesAssignment_5_1
		-RuleCall cCompInterfacesInterfaceParserRuleCall_5_1_0
		-Group cGroup_5_2
		-Keyword cSemicolonKeyword_5_2_0
		-Assignment cCompInterfacesAssignment_5_2_1
		-RuleCall cCompInterfacesInterfaceParserRuleCall_5_2_1_0
		-Group cGroup_6
		-Keyword cMinInstanceNbrKeyword_6_0
		-Assignment cMinInstanceNbrAssignment_6_1
		-RuleCall cMinInstanceNbrINTTerminalRuleCall_6_1_0
		-Group cGroup_7
		-Keyword cMaxInstanceNbrKeyword_7_0
		-Assignment cMaxInstanceNbrAssignment_7_1
		-RuleCall cMaxInstanceNbrINTTerminalRuleCall_7_1_0
		-Group cGroup_8
		-Keyword cInteractionsKeyword_8_0
		-Assignment cCompInterfacesAssignment_8_1
		-RuleCall cCompInterfacesInteractionParserRuleCall_8_1_0
		-Group cGroup_8_2
		-Keyword cSemicolonKeyword_8_2_0
		-Assignment cCompInterfacesAssignment_8_2_1
		-RuleCall cCompInterfacesInteractionParserRuleCall_8_2_1_0
		+ParserRule getRule()
		+Group getGroup()
		+Keyword getComponent_roleKeyword_0()
		+Assignment getNameAssignment_1()
		+RuleCall getNameComponent_role_nameParserRuleCall_1_0()
		+Keyword getIdKeyword_2()
		+Assignment getIdAssignment_3()
		+RuleCall getIdEStringParserRuleCall_3_0()
		+Group getGroup_4()
		+Keyword getRequired_interfacesKeyword_4_0()
		+Assignment getCompInterfacesAssignment_4_1()
		+RuleCall getCompInterfacesInterfaceParserRuleCall_4_1_0()
		+Group getGroup_4_2()
		+Keyword getSemicolonKeyword_4_2_0()
		+Assignment getCompInterfacesAssignment_4_2_1()
		+RuleCall getCompInterfacesInterfaceParserRuleCall_4_2_1_0()
		+Group getGroup_5()
		+Keyword getProvided_interfacesKeyword_5_0()
		+Assignment getCompInterfacesAssignment_5_1()
		+RuleCall getCompInterfacesInterfaceParserRuleCall_5_1_0()
		+Group getGroup_5_2()
		+Keyword getSemicolonKeyword_5_2_0()
		+Assignment getCompInterfacesAssignment_5_2_1()
		+RuleCall getCompInterfacesInterfaceParserRuleCall_5_2_1_0()
		+Group getGroup_6()
		+Keyword getMinInstanceNbrKeyword_6_0()
		+Assignment getMinInstanceNbrAssignment_6_1()
		+RuleCall getMinInstanceNbrINTTerminalRuleCall_6_1_0()
		+Group getGroup_7()
		+Keyword getMaxInstanceNbrKeyword_7_0()
		+Assignment getMaxInstanceNbrAssignment_7_1()
		+RuleCall getMaxInstanceNbrINTTerminalRuleCall_7_1_0()
		+Group getGroup_8()
		+Keyword getInteractionsKeyword_8_0()
		+Assignment getCompInterfacesAssignment_8_1()
		+RuleCall getCompInterfacesInteractionParserRuleCall_8_1_0()
		+Group getGroup_8_2()
		+Keyword getSemicolonKeyword_8_2_0()
		+Assignment getCompInterfacesAssignment_8_2_1()
		+RuleCall getCompInterfacesInteractionParserRuleCall_8_2_1_0()
	}
	class fr.ema.dedal.xtext.services.Component_role_nameElements {
		-ParserRule rule
		-RuleCall cIDTerminalRuleCall
		+ParserRule getRule()
		+RuleCall getIDTerminalRuleCall()
	}
	class fr.ema.dedal.xtext.services.InterfaceElements {
		-ParserRule rule
		-Group cGroup
		-Keyword cInterfaceKeyword_0
		-Assignment cNameAssignment_1
		-RuleCall cNameInterface_nameParserRuleCall_1_0
		-Keyword cInterface_directionKeyword_2
		-Assignment cDirectionAssignment_3
		-RuleCall cDirectionDIRECTIONEnumRuleCall_3_0
		-Keyword cImplementationKeyword_4
		-Assignment cTypeAssignment_5
		-CrossReference cTypeInterfaceTypeCrossReference_5_0
		-RuleCall cTypeInterfaceTypeEStringParserRuleCall_5_0_1
		-Group cGroup_6
		-Keyword cDelegationKeyword_6_0
		-Assignment cDelegationAssignment_6_1
		-CrossReference cDelegationInterfaceCrossReference_6_1_0
		-RuleCall cDelegationInterfaceEStringParserRuleCall_6_1_0_1
		-Group cGroup_7
		-Keyword cInstantiatesKeyword_7_0
		-Assignment cInstantiatesAssignment_7_1
		-CrossReference cInstantiatesInterfaceCrossReference_7_1_0
		-RuleCall cInstantiatesInterfaceEStringParserRuleCall_7_1_0_1
		+ParserRule getRule()
		+Group getGroup()
		+Keyword getInterfaceKeyword_0()
		+Assignment getNameAssignment_1()
		+RuleCall getNameInterface_nameParserRuleCall_1_0()
		+Keyword getInterface_directionKeyword_2()
		+Assignment getDirectionAssignment_3()
		+RuleCall getDirectionDIRECTIONEnumRuleCall_3_0()
		+Keyword getImplementationKeyword_4()
		+Assignment getTypeAssignment_5()
		+CrossReference getTypeInterfaceTypeCrossReference_5_0()
		+RuleCall getTypeInterfaceTypeEStringParserRuleCall_5_0_1()
		+Group getGroup_6()
		+Keyword getDelegationKeyword_6_0()
		+Assignment getDelegationAssignment_6_1()
		+CrossReference getDelegationInterfaceCrossReference_6_1_0()
		+RuleCall getDelegationInterfaceEStringParserRuleCall_6_1_0_1()
		+Group getGroup_7()
		+Keyword getInstantiatesKeyword_7_0()
		+Assignment getInstantiatesAssignment_7_1()
		+CrossReference getInstantiatesInterfaceCrossReference_7_1_0()
		+RuleCall getInstantiatesInterfaceEStringParserRuleCall_7_1_0_1()
	}
	class fr.ema.dedal.xtext.services.Interface_nameElements {
		-ParserRule rule
		-RuleCall cIDTerminalRuleCall
		+ParserRule getRule()
		+RuleCall getIDTerminalRuleCall()
	}
	class fr.ema.dedal.xtext.services.RoleConnectionElements {
		-ParserRule rule
		-Group cGroup
		-Keyword cConnectionKeyword_0
		-Assignment cRefIDAssignment_1
		-RuleCall cRefIDEStringParserRuleCall_1_0
		-Keyword cClientKeyword_2
		-Assignment cClientCompElemAssignment_3
		-CrossReference cClientCompElemCompRoleCrossReference_3_0
		-RuleCall cClientCompElemCompRoleEStringParserRuleCall_3_0_1
		-Keyword cFullStopKeyword_4
		-Assignment cClientIntElemAssignment_5
		-CrossReference cClientIntElemInteractionCrossReference_5_0
		-RuleCall cClientIntElemInteractionEStringParserRuleCall_5_0_1
		-Keyword cServerKeyword_6
		-Assignment cServerCompElemAssignment_7
		-CrossReference cServerCompElemCompRoleCrossReference_7_0
		-RuleCall cServerCompElemCompRoleEStringParserRuleCall_7_0_1
		-Keyword cFullStopKeyword_8
		-Assignment cServerIntElemAssignment_9
		-CrossReference cServerIntElemInteractionCrossReference_9_0
		-RuleCall cServerIntElemInteractionEStringParserRuleCall_9_0_1
		+ParserRule getRule()
		+Group getGroup()
		+Keyword getConnectionKeyword_0()
		+Assignment getRefIDAssignment_1()
		+RuleCall getRefIDEStringParserRuleCall_1_0()
		+Keyword getClientKeyword_2()
		+Assignment getClientCompElemAssignment_3()
		+CrossReference getClientCompElemCompRoleCrossReference_3_0()
		+RuleCall getClientCompElemCompRoleEStringParserRuleCall_3_0_1()
		+Keyword getFullStopKeyword_4()
		+Assignment getClientIntElemAssignment_5()
		+CrossReference getClientIntElemInteractionCrossReference_5_0()
		+RuleCall getClientIntElemInteractionEStringParserRuleCall_5_0_1()
		+Keyword getServerKeyword_6()
		+Assignment getServerCompElemAssignment_7()
		+CrossReference getServerCompElemCompRoleCrossReference_7_0()
		+RuleCall getServerCompElemCompRoleEStringParserRuleCall_7_0_1()
		+Keyword getFullStopKeyword_8()
		+Assignment getServerIntElemAssignment_9()
		+CrossReference getServerIntElemInteractionCrossReference_9_0()
		+RuleCall getServerIntElemInteractionEStringParserRuleCall_9_0_1()
	}
	class fr.ema.dedal.xtext.services.Connection_nameElements {
		-ParserRule rule
		-RuleCall cIDTerminalRuleCall
		+ParserRule getRule()
		+RuleCall getIDTerminalRuleCall()
	}
	class fr.ema.dedal.xtext.services.ConfigurationElements {
		-ParserRule rule
		-Group cGroup
		-Keyword cConfigurationKeyword_0
		-Assignment cNameAssignment_1
		-RuleCall cNameConfiguration_nameParserRuleCall_1_0
		-Group cGroup_2
		-Keyword cImplementsKeyword_2_0
		-Assignment cImplementsAssignment_2_1
		-CrossReference cImplementsSpecificationCrossReference_2_1_0
		-RuleCall cImplementsSpecificationEStringParserRuleCall_2_1_0_1
		-Group cGroup_2_2
		-Keyword cLeftParenthesisKeyword_2_2_0
		-RuleCall cREVISION_NUMBTerminalRuleCall_2_2_1
		-Keyword cRightParenthesisKeyword_2_2_2
		-Group cGroup_2_3
		-Keyword cSemicolonKeyword_2_3_0
		-Assignment cImplementsAssignment_2_3_1
		-CrossReference cImplementsSpecificationCrossReference_2_3_1_0
		-RuleCall cImplementsSpecificationEStringParserRuleCall_2_3_1_0_1
		-Keyword cLeftParenthesisKeyword_2_3_2
		-RuleCall cREVISION_NUMBTerminalRuleCall_2_3_3
		-Keyword cRightParenthesisKeyword_2_3_4
		-Group cGroup_3
		-Keyword cVersionIDKeyword_3_0
		-RuleCall cREVISION_NUMBTerminalRuleCall_3_1
		-Group cGroup_4
		-Keyword cPre_versionKeyword_4_0
		-RuleCall cPre_versionParserRuleCall_4_1
		-Group cGroup_5
		-Keyword cByKeyword_5_0
		-RuleCall cChangeParserRuleCall_5_1
		-Group cGroup_6
		-Keyword cComponent_classesKeyword_6_0
		-Assignment cConfigComponentsAssignment_6_1
		-RuleCall cConfigComponentsCompClassParserRuleCall_6_1_0
		-Group cGroup_6_2
		-Keyword cSemicolonKeyword_6_2_0
		-Assignment cConfigComponentsAssignment_6_2_1
		-RuleCall cConfigComponentsCompClassParserRuleCall_6_2_1_0
		-Group cGroup_7
		-Keyword cConnector_classesKeyword_7_0
		-RuleCall cConnector_classParserRuleCall_7_1
		-Keyword cAsKeyword_7_2
		-RuleCall cConnection_nameParserRuleCall_7_3
		-Group cGroup_7_4
		-Keyword cSemicolonKeyword_7_4_0
		-RuleCall cConnector_classParserRuleCall_7_4_1
		-Keyword cAsKeyword_7_4_2
		-RuleCall cConnection_nameParserRuleCall_7_4_3
		-Group cGroup_8
		-Keyword cInterface_typesKeyword_8_0
		-Keyword cLeftParenthesisKeyword_8_1
		-Assignment cInterfaceTypesAssignment_8_2
		-RuleCall cInterfaceTypesInterfaceTypeParserRuleCall_8_2_0
		-Group cGroup_8_3
		-Keyword cSemicolonKeyword_8_3_0
		-Assignment cInterfaceTypesAssignment_8_3_1
		-RuleCall cInterfaceTypesInterfaceTypeParserRuleCall_8_3_1_0
		-Keyword cRightParenthesisKeyword_8_4
		-Group cGroup_9
		-Keyword cComponent_typesKeyword_9_0
		-Keyword cLeftParenthesisKeyword_9_1
		-Assignment cComptypesAssignment_9_2
		-RuleCall cComptypesCompTypeParserRuleCall_9_2_0
		-Group cGroup_9_3
		-Keyword cSemicolonKeyword_9_3_0
		-Assignment cComptypesAssignment_9_3_1
		-RuleCall cComptypesCompTypeParserRuleCall_9_3_1_0
		-Keyword cRightParenthesisKeyword_9_4
		-Group cGroup_10
		-Keyword cConfigConnectionsKeyword_10_0
		-Keyword cLeftParenthesisKeyword_10_1
		-Assignment cConfigConnectionsAssignment_10_2
		-RuleCall cConfigConnectionsClassConnectionParserRuleCall_10_2_0
		-Group cGroup_10_3
		-Keyword cSemicolonKeyword_10_3_0
		-Assignment cConfigConnectionsAssignment_10_3_1
		-RuleCall cConfigConnectionsClassConnectionParserRuleCall_10_3_1_0
		-Keyword cRightParenthesisKeyword_10_4
		+ParserRule getRule()
		+Group getGroup()
		+Keyword getConfigurationKeyword_0()
		+Assignment getNameAssignment_1()
		+RuleCall getNameConfiguration_nameParserRuleCall_1_0()
		+Group getGroup_2()
		+Keyword getImplementsKeyword_2_0()
		+Assignment getImplementsAssignment_2_1()
		+CrossReference getImplementsSpecificationCrossReference_2_1_0()
		+RuleCall getImplementsSpecificationEStringParserRuleCall_2_1_0_1()
		+Group getGroup_2_2()
		+Keyword getLeftParenthesisKeyword_2_2_0()
		+RuleCall getREVISION_NUMBTerminalRuleCall_2_2_1()
		+Keyword getRightParenthesisKeyword_2_2_2()
		+Group getGroup_2_3()
		+Keyword getSemicolonKeyword_2_3_0()
		+Assignment getImplementsAssignment_2_3_1()
		+CrossReference getImplementsSpecificationCrossReference_2_3_1_0()
		+RuleCall getImplementsSpecificationEStringParserRuleCall_2_3_1_0_1()
		+Keyword getLeftParenthesisKeyword_2_3_2()
		+RuleCall getREVISION_NUMBTerminalRuleCall_2_3_3()
		+Keyword getRightParenthesisKeyword_2_3_4()
		+Group getGroup_3()
		+Keyword getVersionIDKeyword_3_0()
		+RuleCall getREVISION_NUMBTerminalRuleCall_3_1()
		+Group getGroup_4()
		+Keyword getPre_versionKeyword_4_0()
		+RuleCall getPre_versionParserRuleCall_4_1()
		+Group getGroup_5()
		+Keyword getByKeyword_5_0()
		+RuleCall getChangeParserRuleCall_5_1()
		+Group getGroup_6()
		+Keyword getComponent_classesKeyword_6_0()
		+Assignment getConfigComponentsAssignment_6_1()
		+RuleCall getConfigComponentsCompClassParserRuleCall_6_1_0()
		+Group getGroup_6_2()
		+Keyword getSemicolonKeyword_6_2_0()
		+Assignment getConfigComponentsAssignment_6_2_1()
		+RuleCall getConfigComponentsCompClassParserRuleCall_6_2_1_0()
		+Group getGroup_7()
		+Keyword getConnector_classesKeyword_7_0()
		+RuleCall getConnector_classParserRuleCall_7_1()
		+Keyword getAsKeyword_7_2()
		+RuleCall getConnection_nameParserRuleCall_7_3()
		+Group getGroup_7_4()
		+Keyword getSemicolonKeyword_7_4_0()
		+RuleCall getConnector_classParserRuleCall_7_4_1()
		+Keyword getAsKeyword_7_4_2()
		+RuleCall getConnection_nameParserRuleCall_7_4_3()
		+Group getGroup_8()
		+Keyword getInterface_typesKeyword_8_0()
		+Keyword getLeftParenthesisKeyword_8_1()
		+Assignment getInterfaceTypesAssignment_8_2()
		+RuleCall getInterfaceTypesInterfaceTypeParserRuleCall_8_2_0()
		+Group getGroup_8_3()
		+Keyword getSemicolonKeyword_8_3_0()
		+Assignment getInterfaceTypesAssignment_8_3_1()
		+RuleCall getInterfaceTypesInterfaceTypeParserRuleCall_8_3_1_0()
		+Keyword getRightParenthesisKeyword_8_4()
		+Group getGroup_9()
		+Keyword getComponent_typesKeyword_9_0()
		+Keyword getLeftParenthesisKeyword_9_1()
		+Assignment getComptypesAssignment_9_2()
		+RuleCall getComptypesCompTypeParserRuleCall_9_2_0()
		+Group getGroup_9_3()
		+Keyword getSemicolonKeyword_9_3_0()
		+Assignment getComptypesAssignment_9_3_1()
		+RuleCall getComptypesCompTypeParserRuleCall_9_3_1_0()
		+Keyword getRightParenthesisKeyword_9_4()
		+Group getGroup_10()
		+Keyword getConfigConnectionsKeyword_10_0()
		+Keyword getLeftParenthesisKeyword_10_1()
		+Assignment getConfigConnectionsAssignment_10_2()
		+RuleCall getConfigConnectionsClassConnectionParserRuleCall_10_2_0()
		+Group getGroup_10_3()
		+Keyword getSemicolonKeyword_10_3_0()
		+Assignment getConfigConnectionsAssignment_10_3_1()
		+RuleCall getConfigConnectionsClassConnectionParserRuleCall_10_3_1_0()
		+Keyword getRightParenthesisKeyword_10_4()
	}
	class fr.ema.dedal.xtext.services.Configuration_nameElements {
		-ParserRule rule
		-RuleCall cIDTerminalRuleCall
		+ParserRule getRule()
		+RuleCall getIDTerminalRuleCall()
	}
	class fr.ema.dedal.xtext.services.Component_class_nameElements {
		-ParserRule rule
		-RuleCall cIDTerminalRuleCall
		+ParserRule getRule()
		+RuleCall getIDTerminalRuleCall()
	}
	class fr.ema.dedal.xtext.services.CompTypeElements {
		-ParserRule rule
		-Group cGroup
		-Keyword cComponent_typeKeyword_0
		-Assignment cNameAssignment_1
		-RuleCall cNameComponent_type_nameParserRuleCall_1_0
		-Keyword cIdKeyword_2
		-Assignment cIdAssignment_3
		-RuleCall cIdEStringParserRuleCall_3_0
		-Group cGroup_4
		-Keyword cRequired_interfacesKeyword_4_0
		-Assignment cCompInterfacesAssignment_4_1
		-RuleCall cCompInterfacesInterfaceParserRuleCall_4_1_0
		-Group cGroup_4_2
		-Keyword cSemicolonKeyword_4_2_0
		-Assignment cCompInterfacesAssignment_4_2_1
		-RuleCall cCompInterfacesInterfaceParserRuleCall_4_2_1_0
		-Group cGroup_5
		-Keyword cProvided_interfacesKeyword_5_0
		-Assignment cCompInterfacesAssignment_5_1
		-RuleCall cCompInterfacesInterfaceParserRuleCall_5_1_0
		-Group cGroup_5_2
		-Keyword cSemicolonKeyword_5_2_0
		-Assignment cCompInterfacesAssignment_5_2_1
		-RuleCall cCompInterfacesInterfaceParserRuleCall_5_2_1_0
		-Group cGroup_6
		-Keyword cInteractionsKeyword_6_0
		-Assignment cCompInterfacesAssignment_6_1
		-RuleCall cCompInterfacesInteractionParserRuleCall_6_1_0
		-Group cGroup_6_2
		-Keyword cSemicolonKeyword_6_2_0
		-Assignment cCompInterfacesAssignment_6_2_1
		-RuleCall cCompInterfacesInteractionParserRuleCall_6_2_1_0
		+ParserRule getRule()
		+Group getGroup()
		+Keyword getComponent_typeKeyword_0()
		+Assignment getNameAssignment_1()
		+RuleCall getNameComponent_type_nameParserRuleCall_1_0()
		+Keyword getIdKeyword_2()
		+Assignment getIdAssignment_3()
		+RuleCall getIdEStringParserRuleCall_3_0()
		+Group getGroup_4()
		+Keyword getRequired_interfacesKeyword_4_0()
		+Assignment getCompInterfacesAssignment_4_1()
		+RuleCall getCompInterfacesInterfaceParserRuleCall_4_1_0()
		+Group getGroup_4_2()
		+Keyword getSemicolonKeyword_4_2_0()
		+Assignment getCompInterfacesAssignment_4_2_1()
		+RuleCall getCompInterfacesInterfaceParserRuleCall_4_2_1_0()
		+Group getGroup_5()
		+Keyword getProvided_interfacesKeyword_5_0()
		+Assignment getCompInterfacesAssignment_5_1()
		+RuleCall getCompInterfacesInterfaceParserRuleCall_5_1_0()
		+Group getGroup_5_2()
		+Keyword getSemicolonKeyword_5_2_0()
		+Assignment getCompInterfacesAssignment_5_2_1()
		+RuleCall getCompInterfacesInterfaceParserRuleCall_5_2_1_0()
		+Group getGroup_6()
		+Keyword getInteractionsKeyword_6_0()
		+Assignment getCompInterfacesAssignment_6_1()
		+RuleCall getCompInterfacesInteractionParserRuleCall_6_1_0()
		+Group getGroup_6_2()
		+Keyword getSemicolonKeyword_6_2_0()
		+Assignment getCompInterfacesAssignment_6_2_1()
		+RuleCall getCompInterfacesInteractionParserRuleCall_6_2_1_0()
	}
	class fr.ema.dedal.xtext.services.Component_type_nameElements {
		-ParserRule rule
		-RuleCall cIDTerminalRuleCall
		+ParserRule getRule()
		+RuleCall getIDTerminalRuleCall()
	}
	class fr.ema.dedal.xtext.services.CompClass_ImplElements {
		-ParserRule rule
		-Group cGroup
		-Keyword cPrimitive_component_classKeyword_0
		-Assignment cNameAssignment_1
		-RuleCall cNameComponent_class_nameParserRuleCall_1_0
		-Group cGroup_2
		-Keyword cAsKeyword_2_0
		-Assignment cRealizesAssignment_2_1
		-CrossReference cRealizesCompRoleCrossReference_2_1_0
		-RuleCall cRealizesCompRoleEStringParserRuleCall_2_1_0_1
		-Group cGroup_2_2
		-Keyword cSemicolonKeyword_2_2_0
		-Assignment cRealizesAssignment_2_2_1
		-CrossReference cRealizesCompRoleCrossReference_2_2_1_0
		-RuleCall cRealizesCompRoleEStringParserRuleCall_2_2_1_0_1
		-Keyword cIdKeyword_3
		-Assignment cIdAssignment_4
		-RuleCall cIdEStringParserRuleCall_4_0
		-Keyword cImplementsKeyword_5
		-Assignment cImplementsAssignment_6
		-CrossReference cImplementsCompTypeCrossReference_6_0
		-RuleCall cImplementsCompTypeEStringParserRuleCall_6_0_1
		-Group cGroup_7
		-Keyword cContentKeyword_7_0
		-Assignment cContentAssignment_7_1
		-CrossReference cContentCompInstanceCrossReference_7_1_0
		-RuleCall cContentCompInstanceEStringParserRuleCall_7_1_0_1
		-Group cGroup_8
		-Keyword cAttributesKeyword_8_0
		-Keyword cLeftParenthesisKeyword_8_1
		-Assignment cAttributesAssignment_8_2
		-RuleCall cAttributesAttributeParserRuleCall_8_2_0
		-Group cGroup_8_3
		-Keyword cSemicolonKeyword_8_3_0
		-Assignment cAttributesAssignment_8_3_1
		-RuleCall cAttributesAttributeParserRuleCall_8_3_1_0
		-Keyword cRightParenthesisKeyword_8_4
		-Group cGroup_9
		-Keyword cVersionIDKeyword_9_0
		-RuleCall cREVISION_NUMBTerminalRuleCall_9_1
		-Group cGroup_10
		-Keyword cPre_versionKeyword_10_0
		-RuleCall cREVISION_NUMBTerminalRuleCall_10_1
		-Group cGroup_11
		-Keyword cInterfacesKeyword_11_0
		-Assignment cCompInterfacesAssignment_11_1
		-RuleCall cCompInterfacesInteractionParserRuleCall_11_1_0
		-Group cGroup_11_2
		-Keyword cSemicolonKeyword_11_2_0
		-Assignment cCompInterfacesAssignment_11_2_1
		-RuleCall cCompInterfacesInteractionParserRuleCall_11_2_1_0
		+ParserRule getRule()
		+Group getGroup()
		+Keyword getPrimitive_component_classKeyword_0()
		+Assignment getNameAssignment_1()
		+RuleCall getNameComponent_class_nameParserRuleCall_1_0()
		+Group getGroup_2()
		+Keyword getAsKeyword_2_0()
		+Assignment getRealizesAssignment_2_1()
		+CrossReference getRealizesCompRoleCrossReference_2_1_0()
		+RuleCall getRealizesCompRoleEStringParserRuleCall_2_1_0_1()
		+Group getGroup_2_2()
		+Keyword getSemicolonKeyword_2_2_0()
		+Assignment getRealizesAssignment_2_2_1()
		+CrossReference getRealizesCompRoleCrossReference_2_2_1_0()
		+RuleCall getRealizesCompRoleEStringParserRuleCall_2_2_1_0_1()
		+Keyword getIdKeyword_3()
		+Assignment getIdAssignment_4()
		+RuleCall getIdEStringParserRuleCall_4_0()
		+Keyword getImplementsKeyword_5()
		+Assignment getImplementsAssignment_6()
		+CrossReference getImplementsCompTypeCrossReference_6_0()
		+RuleCall getImplementsCompTypeEStringParserRuleCall_6_0_1()
		+Group getGroup_7()
		+Keyword getContentKeyword_7_0()
		+Assignment getContentAssignment_7_1()
		+CrossReference getContentCompInstanceCrossReference_7_1_0()
		+RuleCall getContentCompInstanceEStringParserRuleCall_7_1_0_1()
		+Group getGroup_8()
		+Keyword getAttributesKeyword_8_0()
		+Keyword getLeftParenthesisKeyword_8_1()
		+Assignment getAttributesAssignment_8_2()
		+RuleCall getAttributesAttributeParserRuleCall_8_2_0()
		+Group getGroup_8_3()
		+Keyword getSemicolonKeyword_8_3_0()
		+Assignment getAttributesAssignment_8_3_1()
		+RuleCall getAttributesAttributeParserRuleCall_8_3_1_0()
		+Keyword getRightParenthesisKeyword_8_4()
		+Group getGroup_9()
		+Keyword getVersionIDKeyword_9_0()
		+RuleCall getREVISION_NUMBTerminalRuleCall_9_1()
		+Group getGroup_10()
		+Keyword getPre_versionKeyword_10_0()
		+RuleCall getREVISION_NUMBTerminalRuleCall_10_1()
		+Group getGroup_11()
		+Keyword getInterfacesKeyword_11_0()
		+Assignment getCompInterfacesAssignment_11_1()
		+RuleCall getCompInterfacesInteractionParserRuleCall_11_1_0()
		+Group getGroup_11_2()
		+Keyword getSemicolonKeyword_11_2_0()
		+Assignment getCompInterfacesAssignment_11_2_1()
		+RuleCall getCompInterfacesInteractionParserRuleCall_11_2_1_0()
	}
	class fr.ema.dedal.xtext.services.AttributeElements {
		-ParserRule rule
		-Group cGroup
		-Assignment cTypeAssignment_0
		-RuleCall cTypeEStringParserRuleCall_0_0
		-Assignment cNameAssignment_1
		-RuleCall cNameAttribute_nameParserRuleCall_1_0
		+ParserRule getRule()
		+Group getGroup()
		+Assignment getTypeAssignment_0()
		+RuleCall getTypeEStringParserRuleCall_0_0()
		+Assignment getNameAssignment_1()
		+RuleCall getNameAttribute_nameParserRuleCall_1_0()
	}
	class fr.ema.dedal.xtext.services.Attribute_nameElements {
		-ParserRule rule
		-RuleCall cIDTerminalRuleCall
		+ParserRule getRule()
		+RuleCall getIDTerminalRuleCall()
	}
	class fr.ema.dedal.xtext.services.CompositeCompClassElements {
		-ParserRule rule
		-Group cGroup
		-Keyword cComposite_component_classKeyword_0
		-Assignment cNameAssignment_1
		-RuleCall cNameComponent_class_nameParserRuleCall_1_0
		-Keyword cIdKeyword_2
		-Assignment cIdAssignment_3
		-RuleCall cIdEStringParserRuleCall_3_0
		-Keyword cImplementsKeyword_4
		-Assignment cImplementsAssignment_5
		-CrossReference cImplementsCompTypeCrossReference_5_0
		-RuleCall cImplementsCompTypeEStringParserRuleCall_5_0_1
		-Group cGroup_6
		-Keyword cContentKeyword_6_0
		-Assignment cUsesAssignment_6_1
		-CrossReference cUsesConfigurationCrossReference_6_1_0
		-RuleCall cUsesConfigurationEStringParserRuleCall_6_1_0_1
		-Group cGroup_6_2
		-Keyword cLeftParenthesisKeyword_6_2_0
		-RuleCall cREVISION_NUMBTerminalRuleCall_6_2_1
		-Keyword cRightParenthesisKeyword_6_2_2
		-Group cGroup_7
		-Keyword cDelegated_interfacesKeyword_7_0
		-RuleCall cDelegated_interface_listParserRuleCall_7_1
		-Group cGroup_8
		-Keyword cAttributesKeyword_8_0
		-Keyword cLeftParenthesisKeyword_8_1
		-Assignment cAttributesAssignment_8_2
		-RuleCall cAttributesAttributeParserRuleCall_8_2_0
		-Group cGroup_8_3
		-Keyword cSemicolonKeyword_8_3_0
		-Assignment cAttributesAssignment_8_3_1
		-RuleCall cAttributesAttributeParserRuleCall_8_3_1_0
		-Keyword cRightParenthesisKeyword_8_4
		-Group cGroup_9
		-Keyword cVersionIDKeyword_9_0
		-RuleCall cREVISION_NUMBTerminalRuleCall_9_1
		-Group cGroup_10
		-Keyword cPre_versionKeyword_10_0
		-RuleCall cREVISION_NUMBTerminalRuleCall_10_1
		-Group cGroup_11
		-Keyword cRealizesKeyword_11_0
		-Keyword cLeftParenthesisKeyword_11_1
		-Assignment cRealizesAssignment_11_2
		-CrossReference cRealizesCompRoleCrossReference_11_2_0
		-RuleCall cRealizesCompRoleEStringParserRuleCall_11_2_0_1
		-Group cGroup_11_3
		-Keyword cSemicolonKeyword_11_3_0
		-Assignment cRealizesAssignment_11_3_1
		-CrossReference cRealizesCompRoleCrossReference_11_3_1_0
		-RuleCall cRealizesCompRoleEStringParserRuleCall_11_3_1_0_1
		-Keyword cRightParenthesisKeyword_11_4
		-Group cGroup_12
		-Keyword cInterfacesKeyword_12_0
		-Assignment cCompInterfacesAssignment_12_1
		-RuleCall cCompInterfacesInteractionParserRuleCall_12_1_0
		-Group cGroup_12_2
		-Keyword cSemicolonKeyword_12_2_0
		-Assignment cCompInterfacesAssignment_12_2_1
		-RuleCall cCompInterfacesInteractionParserRuleCall_12_2_1_0
		-Group cGroup_13
		-Keyword cDelegated_oldKeyword_13_0
		-Assignment cDelegatedInterfacesAssignment_13_1
		-CrossReference cDelegatedInterfacesInteractionCrossReference_13_1_0
		-RuleCall cDelegatedInterfacesInteractionIDTerminalRuleCall_13_1_0_1
		-Group cGroup_13_2
		-Keyword cSemicolonKeyword_13_2_0
		-Assignment cDelegatedInterfacesAssignment_13_2_1
		-CrossReference cDelegatedInterfacesInteractionCrossReference_13_2_1_0
		-RuleCall cDelegatedInterfacesInteractionIDTerminalRuleCall_13_2_1_0_1
		+ParserRule getRule()
		+Group getGroup()
		+Keyword getComposite_component_classKeyword_0()
		+Assignment getNameAssignment_1()
		+RuleCall getNameComponent_class_nameParserRuleCall_1_0()
		+Keyword getIdKeyword_2()
		+Assignment getIdAssignment_3()
		+RuleCall getIdEStringParserRuleCall_3_0()
		+Keyword getImplementsKeyword_4()
		+Assignment getImplementsAssignment_5()
		+CrossReference getImplementsCompTypeCrossReference_5_0()
		+RuleCall getImplementsCompTypeEStringParserRuleCall_5_0_1()
		+Group getGroup_6()
		+Keyword getContentKeyword_6_0()
		+Assignment getUsesAssignment_6_1()
		+CrossReference getUsesConfigurationCrossReference_6_1_0()
		+RuleCall getUsesConfigurationEStringParserRuleCall_6_1_0_1()
		+Group getGroup_6_2()
		+Keyword getLeftParenthesisKeyword_6_2_0()
		+RuleCall getREVISION_NUMBTerminalRuleCall_6_2_1()
		+Keyword getRightParenthesisKeyword_6_2_2()
		+Group getGroup_7()
		+Keyword getDelegated_interfacesKeyword_7_0()
		+RuleCall getDelegated_interface_listParserRuleCall_7_1()
		+Group getGroup_8()
		+Keyword getAttributesKeyword_8_0()
		+Keyword getLeftParenthesisKeyword_8_1()
		+Assignment getAttributesAssignment_8_2()
		+RuleCall getAttributesAttributeParserRuleCall_8_2_0()
		+Group getGroup_8_3()
		+Keyword getSemicolonKeyword_8_3_0()
		+Assignment getAttributesAssignment_8_3_1()
		+RuleCall getAttributesAttributeParserRuleCall_8_3_1_0()
		+Keyword getRightParenthesisKeyword_8_4()
		+Group getGroup_9()
		+Keyword getVersionIDKeyword_9_0()
		+RuleCall getREVISION_NUMBTerminalRuleCall_9_1()
		+Group getGroup_10()
		+Keyword getPre_versionKeyword_10_0()
		+RuleCall getREVISION_NUMBTerminalRuleCall_10_1()
		+Group getGroup_11()
		+Keyword getRealizesKeyword_11_0()
		+Keyword getLeftParenthesisKeyword_11_1()
		+Assignment getRealizesAssignment_11_2()
		+CrossReference getRealizesCompRoleCrossReference_11_2_0()
		+RuleCall getRealizesCompRoleEStringParserRuleCall_11_2_0_1()
		+Group getGroup_11_3()
		+Keyword getSemicolonKeyword_11_3_0()
		+Assignment getRealizesAssignment_11_3_1()
		+CrossReference getRealizesCompRoleCrossReference_11_3_1_0()
		+RuleCall getRealizesCompRoleEStringParserRuleCall_11_3_1_0_1()
		+Keyword getRightParenthesisKeyword_11_4()
		+Group getGroup_12()
		+Keyword getInterfacesKeyword_12_0()
		+Assignment getCompInterfacesAssignment_12_1()
		+RuleCall getCompInterfacesInteractionParserRuleCall_12_1_0()
		+Group getGroup_12_2()
		+Keyword getSemicolonKeyword_12_2_0()
		+Assignment getCompInterfacesAssignment_12_2_1()
		+RuleCall getCompInterfacesInteractionParserRuleCall_12_2_1_0()
		+Group getGroup_13()
		+Keyword getDelegated_oldKeyword_13_0()
		+Assignment getDelegatedInterfacesAssignment_13_1()
		+CrossReference getDelegatedInterfacesInteractionCrossReference_13_1_0()
		+RuleCall getDelegatedInterfacesInteractionIDTerminalRuleCall_13_1_0_1()
		+Group getGroup_13_2()
		+Keyword getSemicolonKeyword_13_2_0()
		+Assignment getDelegatedInterfacesAssignment_13_2_1()
		+CrossReference getDelegatedInterfacesInteractionCrossReference_13_2_1_0()
		+RuleCall getDelegatedInterfacesInteractionIDTerminalRuleCall_13_2_1_0_1()
	}
	class fr.ema.dedal.xtext.services.Delegated_interface_listElements {
		-ParserRule rule
		-Alternatives cAlternatives
		-Keyword cProvidedKeyword_0
		-Group cGroup_1
		-Keyword cRequiredKeyword_1_0
		-RuleCall cInner_interfaceParserRuleCall_1_1
		-Keyword cAsKeyword_1_2
		-RuleCall cOuter_interfaceParserRuleCall_1_3
		-Alternatives cAlternatives_1_4
		-Group cGroup_1_4_0
		-Keyword cSemicolonKeyword_1_4_0_0
		-Keyword cProvidedKeyword_1_4_0_1
		-Group cGroup_1_4_1
		-Keyword cRequiredKeyword_1_4_1_0
		-RuleCall cInner_interfaceParserRuleCall_1_4_1_1
		-Keyword cAsKeyword_1_4_1_2
		-RuleCall cOuter_interfaceParserRuleCall_1_4_1_3
		+ParserRule getRule()
		+Alternatives getAlternatives()
		+Keyword getProvidedKeyword_0()
		+Group getGroup_1()
		+Keyword getRequiredKeyword_1_0()
		+RuleCall getInner_interfaceParserRuleCall_1_1()
		+Keyword getAsKeyword_1_2()
		+RuleCall getOuter_interfaceParserRuleCall_1_3()
		+Alternatives getAlternatives_1_4()
		+Group getGroup_1_4_0()
		+Keyword getSemicolonKeyword_1_4_0_0()
		+Keyword getProvidedKeyword_1_4_0_1()
		+Group getGroup_1_4_1()
		+Keyword getRequiredKeyword_1_4_1_0()
		+RuleCall getInner_interfaceParserRuleCall_1_4_1_1()
		+Keyword getAsKeyword_1_4_1_2()
		+RuleCall getOuter_interfaceParserRuleCall_1_4_1_3()
	}
	class fr.ema.dedal.xtext.services.Inner_interfaceElements {
		-ParserRule rule
		-Group cGroup
		-RuleCall cComponent_class_identifierParserRuleCall_0
		-Keyword cLeftSquareBracketKeyword_1
		-RuleCall cComponent_role_nameParserRuleCall_2
		-Keyword cRightSquareBracketKeyword_3
		-Keyword cFullStopKeyword_4
		-RuleCall cInterface_nameParserRuleCall_5
		+ParserRule getRule()
		+Group getGroup()
		+RuleCall getComponent_class_identifierParserRuleCall_0()
		+Keyword getLeftSquareBracketKeyword_1()
		+RuleCall getComponent_role_nameParserRuleCall_2()
		+Keyword getRightSquareBracketKeyword_3()
		+Keyword getFullStopKeyword_4()
		+RuleCall getInterface_nameParserRuleCall_5()
	}
	class fr.ema.dedal.xtext.services.Outer_interfaceElements {
		-ParserRule rule
		-Group cGroup
		-RuleCall cComponent_type_nameParserRuleCall_0
		-Keyword cFullStopKeyword_1
		-RuleCall cInterface_nameParserRuleCall_2
		+ParserRule getRule()
		+Group getGroup()
		+RuleCall getComponent_type_nameParserRuleCall_0()
		+Keyword getFullStopKeyword_1()
		+RuleCall getInterface_nameParserRuleCall_2()
	}
	class fr.ema.dedal.xtext.services.Component_class_identifierElements {
		-ParserRule rule
		-Group cGroup
		-RuleCall cComponent_class_nameParserRuleCall_0
		-Group cGroup_1
		-Keyword cLeftParenthesisKeyword_1_0
		-RuleCall cREVISION_NUMBTerminalRuleCall_1_1
		-Keyword cRightParenthesisKeyword_1_2
		+ParserRule getRule()
		+Group getGroup()
		+RuleCall getComponent_class_nameParserRuleCall_0()
		+Group getGroup_1()
		+Keyword getLeftParenthesisKeyword_1_0()
		+RuleCall getREVISION_NUMBTerminalRuleCall_1_1()
		+Keyword getRightParenthesisKeyword_1_2()
	}
	class fr.ema.dedal.xtext.services.Connector_typeElements {
		-ParserRule rule
		-Group cGroup
		-Keyword cConnector_typeKeyword_0
		-RuleCall cConnector_type_nameParserRuleCall_1
		-Keyword cProvided_interfacesKeyword_2
		-RuleCall cInterface_nameParserRuleCall_3
		-Group cGroup_4
		-Keyword cSemicolonKeyword_4_0
		-RuleCall cInterface_nameParserRuleCall_4_1
		-Keyword cRequired_interfacesKeyword_5
		-RuleCall cInterface_nameParserRuleCall_6
		-Group cGroup_7
		-Keyword cSemicolonKeyword_7_0
		-RuleCall cInterface_nameParserRuleCall_7_1
		+ParserRule getRule()
		+Group getGroup()
		+Keyword getConnector_typeKeyword_0()
		+RuleCall getConnector_type_nameParserRuleCall_1()
		+Keyword getProvided_interfacesKeyword_2()
		+RuleCall getInterface_nameParserRuleCall_3()
		+Group getGroup_4()
		+Keyword getSemicolonKeyword_4_0()
		+RuleCall getInterface_nameParserRuleCall_4_1()
		+Keyword getRequired_interfacesKeyword_5()
		+RuleCall getInterface_nameParserRuleCall_6()
		+Group getGroup_7()
		+Keyword getSemicolonKeyword_7_0()
		+RuleCall getInterface_nameParserRuleCall_7_1()
	}
	class fr.ema.dedal.xtext.services.Connector_type_nameElements {
		-ParserRule rule
		-RuleCall cIDTerminalRuleCall
		+ParserRule getRule()
		+RuleCall getIDTerminalRuleCall()
	}
	class fr.ema.dedal.xtext.services.Connector_classElements {
		-ParserRule rule
		-Group cGroup
		-Keyword cConnectorKeyword_0
		-RuleCall cConnector_class_nameParserRuleCall_1
		-Keyword cImplementsKeyword_2
		-RuleCall cConnector_typeParserRuleCall_3
		+ParserRule getRule()
		+Group getGroup()
		+Keyword getConnectorKeyword_0()
		+RuleCall getConnector_class_nameParserRuleCall_1()
		+Keyword getImplementsKeyword_2()
		+RuleCall getConnector_typeParserRuleCall_3()
	}
	class fr.ema.dedal.xtext.services.Connector_class_nameElements {
		-ParserRule rule
		-RuleCall cIDTerminalRuleCall
		+ParserRule getRule()
		+RuleCall getIDTerminalRuleCall()
	}
	class fr.ema.dedal.xtext.services.ClassConnectionElements {
		-ParserRule rule
		-Group cGroup
		-Keyword cClass_connectionKeyword_0
		-Assignment cRefIDAssignment_1
		-RuleCall cRefIDEStringParserRuleCall_1_0
		-Keyword cPropertyKeyword_2
		-Assignment cPropertyAssignment_3
		-RuleCall cPropertyEStringParserRuleCall_3_0
		-Keyword cClientKeyword_4
		-Assignment cClientClassElemAssignment_5
		-CrossReference cClientClassElemCompClassCrossReference_5_0
		-RuleCall cClientClassElemCompClassEStringParserRuleCall_5_0_1
		-Keyword cFullStopKeyword_6
		-Assignment cClientIntElemAssignment_7
		-CrossReference cClientIntElemInteractionCrossReference_7_0
		-RuleCall cClientIntElemInteractionEStringParserRuleCall_7_0_1
		-Keyword cServerKeyword_8
		-Assignment cServerClassElemAssignment_9
		-CrossReference cServerClassElemCompClassCrossReference_9_0
		-RuleCall cServerClassElemCompClassEStringParserRuleCall_9_0_1
		-Keyword cFullStopKeyword_10
		-Assignment cServerIntElemAssignment_11
		-CrossReference cServerIntElemInteractionCrossReference_11_0
		-RuleCall cServerIntElemInteractionEStringParserRuleCall_11_0_1
		+ParserRule getRule()
		+Group getGroup()
		+Keyword getClass_connectionKeyword_0()
		+Assignment getRefIDAssignment_1()
		+RuleCall getRefIDEStringParserRuleCall_1_0()
		+Keyword getPropertyKeyword_2()
		+Assignment getPropertyAssignment_3()
		+RuleCall getPropertyEStringParserRuleCall_3_0()
		+Keyword getClientKeyword_4()
		+Assignment getClientClassElemAssignment_5()
		+CrossReference getClientClassElemCompClassCrossReference_5_0()
		+RuleCall getClientClassElemCompClassEStringParserRuleCall_5_0_1()
		+Keyword getFullStopKeyword_6()
		+Assignment getClientIntElemAssignment_7()
		+CrossReference getClientIntElemInteractionCrossReference_7_0()
		+RuleCall getClientIntElemInteractionEStringParserRuleCall_7_0_1()
		+Keyword getServerKeyword_8()
		+Assignment getServerClassElemAssignment_9()
		+CrossReference getServerClassElemCompClassCrossReference_9_0()
		+RuleCall getServerClassElemCompClassEStringParserRuleCall_9_0_1()
		+Keyword getFullStopKeyword_10()
		+Assignment getServerIntElemAssignment_11()
		+CrossReference getServerIntElemInteractionCrossReference_11_0()
		+RuleCall getServerIntElemInteractionEStringParserRuleCall_11_0_1()
	}
	class fr.ema.dedal.xtext.services.Port_ImplElements {
		-ParserRule rule
		-Group cGroup
		-Keyword cPortKeyword_0
		-Assignment cNameAssignment_1
		-RuleCall cNameEStringParserRuleCall_1_0
		-Keyword cInterfacesKeyword_2
		-Keyword cLeftParenthesisKeyword_3
		-Assignment cInterfacesAssignment_4
		-CrossReference cInterfacesInterfaceCrossReference_4_0
		-RuleCall cInterfacesInterfaceEStringParserRuleCall_4_0_1
		-Group cGroup_5
		-Keyword cCommaKeyword_5_0
		-Assignment cInterfacesAssignment_5_1
		-CrossReference cInterfacesInterfaceCrossReference_5_1_0
		-RuleCall cInterfacesInterfaceEStringParserRuleCall_5_1_0_1
		-Keyword cRightParenthesisKeyword_6
		+ParserRule getRule()
		+Group getGroup()
		+Keyword getPortKeyword_0()
		+Assignment getNameAssignment_1()
		+RuleCall getNameEStringParserRuleCall_1_0()
		+Keyword getInterfacesKeyword_2()
		+Keyword getLeftParenthesisKeyword_3()
		+Assignment getInterfacesAssignment_4()
		+CrossReference getInterfacesInterfaceCrossReference_4_0()
		+RuleCall getInterfacesInterfaceEStringParserRuleCall_4_0_1()
		+Group getGroup_5()
		+Keyword getCommaKeyword_5_0()
		+Assignment getInterfacesAssignment_5_1()
		+CrossReference getInterfacesInterfaceCrossReference_5_1_0()
		+RuleCall getInterfacesInterfaceEStringParserRuleCall_5_1_0_1()
		+Keyword getRightParenthesisKeyword_6()
	}
	class fr.ema.dedal.xtext.services.CompositePortElements {
		-ParserRule rule
		-Group cGroup
		-Keyword cComposite_portKeyword_0
		-Assignment cNameAssignment_1
		-RuleCall cNameEStringParserRuleCall_1_0
		-Keyword cPortsKeyword_2
		-Keyword cLeftParenthesisKeyword_3
		-Assignment cPortsAssignment_4
		-CrossReference cPortsPortCrossReference_4_0
		-RuleCall cPortsPortEStringParserRuleCall_4_0_1
		-Group cGroup_5
		-Keyword cCommaKeyword_5_0
		-Assignment cPortsAssignment_5_1
		-CrossReference cPortsPortCrossReference_5_1_0
		-RuleCall cPortsPortEStringParserRuleCall_5_1_0_1
		-Keyword cRightParenthesisKeyword_6
		+ParserRule getRule()
		+Group getGroup()
		+Keyword getComposite_portKeyword_0()
		+Assignment getNameAssignment_1()
		+RuleCall getNameEStringParserRuleCall_1_0()
		+Keyword getPortsKeyword_2()
		+Keyword getLeftParenthesisKeyword_3()
		+Assignment getPortsAssignment_4()
		+CrossReference getPortsPortCrossReference_4_0()
		+RuleCall getPortsPortEStringParserRuleCall_4_0_1()
		+Group getGroup_5()
		+Keyword getCommaKeyword_5_0()
		+Assignment getPortsAssignment_5_1()
		+CrossReference getPortsPortCrossReference_5_1_0()
		+RuleCall getPortsPortEStringParserRuleCall_5_1_0_1()
		+Keyword getRightParenthesisKeyword_6()
	}
	class fr.ema.dedal.xtext.services.AssemblyElements {
		-ParserRule rule
		-Group cGroup
		-Keyword cAssemblyKeyword_0
		-Assignment cNameAssignment_1
		-RuleCall cNameAssembly_nameParserRuleCall_1_0
		-Keyword cInstance_ofKeyword_2
		-Assignment cInstantiatesAssignment_3
		-CrossReference cInstantiatesConfigurationCrossReference_3_0
		-RuleCall cInstantiatesConfigurationEStringParserRuleCall_3_0_1
		-Group cGroup_4
		-Keyword cLeftParenthesisKeyword_4_0
		-RuleCall cREVISION_NUMBTerminalRuleCall_4_1
		-Keyword cRightParenthesisKeyword_4_2
		-Group cGroup_5
		-Keyword cVersionIDKeyword_5_0
		-RuleCall cREVISION_NUMBTerminalRuleCall_5_1
		-Keyword cComponent_instancesKeyword_6
		-Keyword cLeftParenthesisKeyword_7
		-Assignment cAssmComponentsAssignment_8
		-RuleCall cAssmComponentsCompInstanceParserRuleCall_8_0
		-Group cGroup_9
		-Keyword cSemicolonKeyword_9_0
		-Assignment cAssmComponentsAssignment_9_1
		-RuleCall cAssmComponentsCompInstanceParserRuleCall_9_1_0
		-Keyword cRightParenthesisKeyword_10
		-Group cGroup_11
		-Keyword cAssembly_constraintsKeyword_11_0
		-Keyword cLeftParenthesisKeyword_11_1
		-RuleCall cConstraintParserRuleCall_11_2
		-Group cGroup_11_3
		-Keyword cSemicolonKeyword_11_3_0
		-RuleCall cConstraintParserRuleCall_11_3_1
		-Keyword cRightParenthesisKeyword_11_4
		-Group cGroup_12
		-Keyword cPre_versionKeyword_12_0
		-RuleCall cVersionParserRuleCall_12_1
		-Group cGroup_13
		-Keyword cByKeyword_13_0
		-RuleCall cChangeParserRuleCall_13_1
		-Group cGroup_14
		-Keyword cInterface_typesKeyword_14_0
		-Keyword cLeftParenthesisKeyword_14_1
		-Assignment cInterfaceTypesAssignment_14_2
		-RuleCall cInterfaceTypesInterfaceTypeParserRuleCall_14_2_0
		-Group cGroup_14_3
		-Keyword cSemicolonKeyword_14_3_0
		-Assignment cInterfaceTypesAssignment_14_3_1
		-RuleCall cInterfaceTypesInterfaceTypeParserRuleCall_14_3_1_0
		-Keyword cRightParenthesisKeyword_14_4
		-Group cGroup_15
		-Keyword cAssembly_connectionsKeyword_15_0
		-Keyword cLeftParenthesisKeyword_15_1
		-Assignment cAssemblyConnectionsAssignment_15_2
		-RuleCall cAssemblyConnectionsInstConnectionParserRuleCall_15_2_0
		-Group cGroup_15_3
		-Keyword cSemicolonKeyword_15_3_0
		-Assignment cAssemblyConnectionsAssignment_15_3_1
		-RuleCall cAssemblyConnectionsInstConnectionParserRuleCall_15_3_1_0
		-Keyword cRightParenthesisKeyword_15_4
		+ParserRule getRule()
		+Group getGroup()
		+Keyword getAssemblyKeyword_0()
		+Assignment getNameAssignment_1()
		+RuleCall getNameAssembly_nameParserRuleCall_1_0()
		+Keyword getInstance_ofKeyword_2()
		+Assignment getInstantiatesAssignment_3()
		+CrossReference getInstantiatesConfigurationCrossReference_3_0()
		+RuleCall getInstantiatesConfigurationEStringParserRuleCall_3_0_1()
		+Group getGroup_4()
		+Keyword getLeftParenthesisKeyword_4_0()
		+RuleCall getREVISION_NUMBTerminalRuleCall_4_1()
		+Keyword getRightParenthesisKeyword_4_2()
		+Group getGroup_5()
		+Keyword getVersionIDKeyword_5_0()
		+RuleCall getREVISION_NUMBTerminalRuleCall_5_1()
		+Keyword getComponent_instancesKeyword_6()
		+Keyword getLeftParenthesisKeyword_7()
		+Assignment getAssmComponentsAssignment_8()
		+RuleCall getAssmComponentsCompInstanceParserRuleCall_8_0()
		+Group getGroup_9()
		+Keyword getSemicolonKeyword_9_0()
		+Assignment getAssmComponentsAssignment_9_1()
		+RuleCall getAssmComponentsCompInstanceParserRuleCall_9_1_0()
		+Keyword getRightParenthesisKeyword_10()
		+Group getGroup_11()
		+Keyword getAssembly_constraintsKeyword_11_0()
		+Keyword getLeftParenthesisKeyword_11_1()
		+RuleCall getConstraintParserRuleCall_11_2()
		+Group getGroup_11_3()
		+Keyword getSemicolonKeyword_11_3_0()
		+RuleCall getConstraintParserRuleCall_11_3_1()
		+Keyword getRightParenthesisKeyword_11_4()
		+Group getGroup_12()
		+Keyword getPre_versionKeyword_12_0()
		+RuleCall getVersionParserRuleCall_12_1()
		+Group getGroup_13()
		+Keyword getByKeyword_13_0()
		+RuleCall getChangeParserRuleCall_13_1()
		+Group getGroup_14()
		+Keyword getInterface_typesKeyword_14_0()
		+Keyword getLeftParenthesisKeyword_14_1()
		+Assignment getInterfaceTypesAssignment_14_2()
		+RuleCall getInterfaceTypesInterfaceTypeParserRuleCall_14_2_0()
		+Group getGroup_14_3()
		+Keyword getSemicolonKeyword_14_3_0()
		+Assignment getInterfaceTypesAssignment_14_3_1()
		+RuleCall getInterfaceTypesInterfaceTypeParserRuleCall_14_3_1_0()
		+Keyword getRightParenthesisKeyword_14_4()
		+Group getGroup_15()
		+Keyword getAssembly_connectionsKeyword_15_0()
		+Keyword getLeftParenthesisKeyword_15_1()
		+Assignment getAssemblyConnectionsAssignment_15_2()
		+RuleCall getAssemblyConnectionsInstConnectionParserRuleCall_15_2_0()
		+Group getGroup_15_3()
		+Keyword getSemicolonKeyword_15_3_0()
		+Assignment getAssemblyConnectionsAssignment_15_3_1()
		+RuleCall getAssemblyConnectionsInstConnectionParserRuleCall_15_3_1_0()
		+Keyword getRightParenthesisKeyword_15_4()
	}
	class fr.ema.dedal.xtext.services.Assembly_nameElements {
		-ParserRule rule
		-RuleCall cIDTerminalRuleCall
		+ParserRule getRule()
		+RuleCall getIDTerminalRuleCall()
	}
	class fr.ema.dedal.xtext.services.ConstraintElements {
		-ParserRule rule
		-Group cGroup
		-Keyword cExpressionKeyword_0
		-RuleCall cConstraint_expressionParserRuleCall_1
		+ParserRule getRule()
		+Group getGroup()
		+Keyword getExpressionKeyword_0()
		+RuleCall getConstraint_expressionParserRuleCall_1()
	}
	class fr.ema.dedal.xtext.services.CompInstanceElements {
		-ParserRule rule
		-Group cGroup
		-Keyword cComponent_instanceKeyword_0
		-Assignment cNameAssignment_1
		-RuleCall cNameComponent_instance_nameParserRuleCall_1_0
		-Group cGroup_2
		-Keyword cAsKeyword_2_0
		-Assignment cRoleAssignment_2_1
		-CrossReference cRoleCompRoleCrossReference_2_1_0
		-RuleCall cRoleCompRoleEStringParserRuleCall_2_1_0_1
		-Keyword cIdKeyword_3
		-Assignment cIdAssignment_4
		-RuleCall cIdEStringParserRuleCall_4_0
		-Keyword cInstance_ofKeyword_5
		-Assignment cInstantiatesAssignment_6
		-CrossReference cInstantiatesCompClassCrossReference_6_0
		-RuleCall cInstantiatesCompClassEStringParserRuleCall_6_0_1
		-Group cGroup_7
		-Keyword cComponent_interfacesKeyword_7_0
		-Assignment cCompInterfacesAssignment_7_1
		-RuleCall cCompInterfacesInteractionParserRuleCall_7_1_0
		-Group cGroup_7_2
		-Keyword cSemicolonKeyword_7_2_0
		-Assignment cCompInterfacesAssignment_7_2_1
		-RuleCall cCompInterfacesInteractionParserRuleCall_7_2_1_0
		+ParserRule getRule()
		+Group getGroup()
		+Keyword getComponent_instanceKeyword_0()
		+Assignment getNameAssignment_1()
		+RuleCall getNameComponent_instance_nameParserRuleCall_1_0()
		+Group getGroup_2()
		+Keyword getAsKeyword_2_0()
		+Assignment getRoleAssignment_2_1()
		+CrossReference getRoleCompRoleCrossReference_2_1_0()
		+RuleCall getRoleCompRoleEStringParserRuleCall_2_1_0_1()
		+Keyword getIdKeyword_3()
		+Assignment getIdAssignment_4()
		+RuleCall getIdEStringParserRuleCall_4_0()
		+Keyword getInstance_ofKeyword_5()
		+Assignment getInstantiatesAssignment_6()
		+CrossReference getInstantiatesCompClassCrossReference_6_0()
		+RuleCall getInstantiatesCompClassEStringParserRuleCall_6_0_1()
		+Group getGroup_7()
		+Keyword getComponent_interfacesKeyword_7_0()
		+Assignment getCompInterfacesAssignment_7_1()
		+RuleCall getCompInterfacesInteractionParserRuleCall_7_1_0()
		+Group getGroup_7_2()
		+Keyword getSemicolonKeyword_7_2_0()
		+Assignment getCompInterfacesAssignment_7_2_1()
		+RuleCall getCompInterfacesInteractionParserRuleCall_7_2_1_0()
	}
	class fr.ema.dedal.xtext.services.Component_instance_nameElements {
		-ParserRule rule
		-RuleCall cIDTerminalRuleCall
		+ParserRule getRule()
		+RuleCall getIDTerminalRuleCall()
	}
	class fr.ema.dedal.xtext.services.InstConnectionElements {
		-ParserRule rule
		-Group cGroup
		-Keyword cInstance_connectionKeyword_0
		-Assignment cRefIDAssignment_1
		-RuleCall cRefIDEStringParserRuleCall_1_0
		-Keyword cClientKeyword_2
		-Assignment cClientInstElemAssignment_3
		-CrossReference cClientInstElemCompInstanceCrossReference_3_0
		-RuleCall cClientInstElemCompInstanceEStringParserRuleCall_3_0_1
		-Keyword cFullStopKeyword_4
		-Assignment cClientIntElemAssignment_5
		-CrossReference cClientIntElemInteractionCrossReference_5_0
		-RuleCall cClientIntElemInteractionEStringParserRuleCall_5_0_1
		-Keyword cServerKeyword_6
		-Assignment cServerInstElemAssignment_7
		-CrossReference cServerInstElemCompInstanceCrossReference_7_0
		-RuleCall cServerInstElemCompInstanceEStringParserRuleCall_7_0_1
		-Keyword cFullStopKeyword_8
		-Assignment cServerIntElemAssignment_9
		-CrossReference cServerIntElemInteractionCrossReference_9_0
		-RuleCall cServerIntElemInteractionEStringParserRuleCall_9_0_1
		+ParserRule getRule()
		+Group getGroup()
		+Keyword getInstance_connectionKeyword_0()
		+Assignment getRefIDAssignment_1()
		+RuleCall getRefIDEStringParserRuleCall_1_0()
		+Keyword getClientKeyword_2()
		+Assignment getClientInstElemAssignment_3()
		+CrossReference getClientInstElemCompInstanceCrossReference_3_0()
		+RuleCall getClientInstElemCompInstanceEStringParserRuleCall_3_0_1()
		+Keyword getFullStopKeyword_4()
		+Assignment getClientIntElemAssignment_5()
		+CrossReference getClientIntElemInteractionCrossReference_5_0()
		+RuleCall getClientIntElemInteractionEStringParserRuleCall_5_0_1()
		+Keyword getServerKeyword_6()
		+Assignment getServerInstElemAssignment_7()
		+CrossReference getServerInstElemCompInstanceCrossReference_7_0()
		+RuleCall getServerInstElemCompInstanceEStringParserRuleCall_7_0_1()
		+Keyword getFullStopKeyword_8()
		+Assignment getServerIntElemAssignment_9()
		+CrossReference getServerIntElemInteractionCrossReference_9_0()
		+RuleCall getServerIntElemInteractionEStringParserRuleCall_9_0_1()
	}
	class fr.ema.dedal.xtext.services.Constraint_expressionElements {
		-ParserRule rule
		-Alternatives cAlternatives
		-Group cGroup_0
		-Keyword cExclamationMarkKeyword_0_0
		-RuleCall cConstraint_expressionParserRuleCall_0_1
		-RuleCall cLogical_constraintParserRuleCall_0_2
		-Group cGroup_1
		-RuleCall cRelational_constraintParserRuleCall_1_0
		-RuleCall cLogical_constraintParserRuleCall_1_1
		+ParserRule getRule()
		+Alternatives getAlternatives()
		+Group getGroup_0()
		+Keyword getExclamationMarkKeyword_0_0()
		+RuleCall getConstraint_expressionParserRuleCall_0_1()
		+RuleCall getLogical_constraintParserRuleCall_0_2()
		+Group getGroup_1()
		+RuleCall getRelational_constraintParserRuleCall_1_0()
		+RuleCall getLogical_constraintParserRuleCall_1_1()
	}
	class fr.ema.dedal.xtext.services.Logical_constraintElements {
		-ParserRule rule
		-Alternatives cAlternatives
		-Group cGroup_0
		-Keyword cVerticalLineVerticalLineKeyword_0_0
		-RuleCall cConstraint_expressionParserRuleCall_0_1
		-RuleCall cLogical_constraintParserRuleCall_0_2
		-Group cGroup_1
		-Keyword cAmpersandAmpersandKeyword_1_0
		-RuleCall cConstraint_expressionParserRuleCall_1_1
		-RuleCall cLogical_constraintParserRuleCall_1_2
		+ParserRule getRule()
		+Alternatives getAlternatives()
		+Group getGroup_0()
		+Keyword getVerticalLineVerticalLineKeyword_0_0()
		+RuleCall getConstraint_expressionParserRuleCall_0_1()
		+RuleCall getLogical_constraintParserRuleCall_0_2()
		+Group getGroup_1()
		+Keyword getAmpersandAmpersandKeyword_1_0()
		+RuleCall getConstraint_expressionParserRuleCall_1_1()
		+RuleCall getLogical_constraintParserRuleCall_1_2()
	}
	class fr.ema.dedal.xtext.services.Relational_constraintElements {
		-ParserRule rule
		-Group cGroup
		-RuleCall cInstance_attributeParserRuleCall_0
		-Alternatives cAlternatives_1
		-Keyword cEqualsSignEqualsSignKeyword_1_0
		-Keyword cExclamationMarkEqualsSignKeyword_1_1
		-Keyword cGreaterThanSignKeyword_1_2
		-Keyword cLessThanSignKeyword_1_3
		-Keyword cGreaterThanSignEqualsSignKeyword_1_4
		-Keyword cLessThanSignEqualsSignKeyword_1_5
		-Alternatives cAlternatives_2
		-RuleCall cInstance_attributeParserRuleCall_2_0
		-RuleCall cAttribute_valueParserRuleCall_2_1
		+ParserRule getRule()
		+Group getGroup()
		+RuleCall getInstance_attributeParserRuleCall_0()
		+Alternatives getAlternatives_1()
		+Keyword getEqualsSignEqualsSignKeyword_1_0()
		+Keyword getExclamationMarkEqualsSignKeyword_1_1()
		+Keyword getGreaterThanSignKeyword_1_2()
		+Keyword getLessThanSignKeyword_1_3()
		+Keyword getGreaterThanSignEqualsSignKeyword_1_4()
		+Keyword getLessThanSignEqualsSignKeyword_1_5()
		+Alternatives getAlternatives_2()
		+RuleCall getInstance_attributeParserRuleCall_2_0()
		+RuleCall getAttribute_valueParserRuleCall_2_1()
	}
	class fr.ema.dedal.xtext.services.Instance_attributeElements {
		-ParserRule rule
		-Group cGroup
		-RuleCall cComponent_instance_nameParserRuleCall_0
		-Keyword cFullStopKeyword_1
		-RuleCall cAttribute_nameParserRuleCall_2
		+ParserRule getRule()
		+Group getGroup()
		+RuleCall getComponent_instance_nameParserRuleCall_0()
		+Keyword getFullStopKeyword_1()
		+RuleCall getAttribute_nameParserRuleCall_2()
	}
	class fr.ema.dedal.xtext.services.Attribute_valueElements {
		-ParserRule rule
		-Group cGroup
		-RuleCall cAttribute_nameParserRuleCall_0
		-Keyword cEqualsSignKeyword_1
		+ParserRule getRule()
		+Group getGroup()
		+RuleCall getAttribute_nameParserRuleCall_0()
		+Keyword getEqualsSignKeyword_1()
	}
	class fr.ema.dedal.xtext.services.VersionElements {
		-ParserRule rule
		-Group cGroup
		-RuleCall cIDTerminalRuleCall_0
		-Keyword cLeftParenthesisKeyword_1
		-RuleCall cREVISION_NUMBTerminalRuleCall_2
		-Keyword cRightParenthesisKeyword_3
		+ParserRule getRule()
		+Group getGroup()
		+RuleCall getIDTerminalRuleCall_0()
		+Keyword getLeftParenthesisKeyword_1()
		+RuleCall getREVISION_NUMBTerminalRuleCall_2()
		+Keyword getRightParenthesisKeyword_3()
	}
	class fr.ema.dedal.xtext.services.Pre_versionElements {
		-ParserRule rule
		-Group cGroup
		-RuleCall cIDTerminalRuleCall_0
		-Keyword cLeftParenthesisKeyword_1
		-RuleCall cREVISION_NUMBTerminalRuleCall_2
		-Keyword cRightParenthesisKeyword_3
		+ParserRule getRule()
		+Group getGroup()
		+RuleCall getIDTerminalRuleCall_0()
		+Keyword getLeftParenthesisKeyword_1()
		+RuleCall getREVISION_NUMBTerminalRuleCall_2()
		+Keyword getRightParenthesisKeyword_3()
	}
	class fr.ema.dedal.xtext.services.ChangeElements {
		-ParserRule rule
		-Group cGroup
		-Keyword cChangeKeyword_0
		-RuleCall cIDTerminalRuleCall_1
		-Keyword cTimeKeyword_2
		-RuleCall cChange_timeParserRuleCall_3
		-Keyword cLevelKeyword_4
		-RuleCall cInitial_levelParserRuleCall_5
		-Keyword cOperationKeyword_6
		-RuleCall cChange_operationParserRuleCall_7
		-Keyword cArtifactKeyword_8
		-RuleCall cArchitecture_elementParserRuleCall_9
		-Keyword cIsKeyword_10
		-RuleCall cEStringParserRuleCall_11
		-Keyword cPurposeKeyword_12
		-RuleCall cChange_purposeParserRuleCall_13
		-Keyword cOriginKeyword_14
		-RuleCall cChange_originParserRuleCall_15
		-Group cGroup_16
		-Keyword cFromKeyword_16_0
		-RuleCall cChangeParserRuleCall_16_1
		+ParserRule getRule()
		+Group getGroup()
		+Keyword getChangeKeyword_0()
		+RuleCall getIDTerminalRuleCall_1()
		+Keyword getTimeKeyword_2()
		+RuleCall getChange_timeParserRuleCall_3()
		+Keyword getLevelKeyword_4()
		+RuleCall getInitial_levelParserRuleCall_5()
		+Keyword getOperationKeyword_6()
		+RuleCall getChange_operationParserRuleCall_7()
		+Keyword getArtifactKeyword_8()
		+RuleCall getArchitecture_elementParserRuleCall_9()
		+Keyword getIsKeyword_10()
		+RuleCall getEStringParserRuleCall_11()
		+Keyword getPurposeKeyword_12()
		+RuleCall getChange_purposeParserRuleCall_13()
		+Keyword getOriginKeyword_14()
		+RuleCall getChange_originParserRuleCall_15()
		+Group getGroup_16()
		+Keyword getFromKeyword_16_0()
		+RuleCall getChangeParserRuleCall_16_1()
	}
	class fr.ema.dedal.xtext.services.Change_timeElements {
		-ParserRule rule
		-Alternatives cAlternatives
		-Keyword cStaticKeyword_0
		-Keyword cDynamicKeyword_1
		+ParserRule getRule()
		+Alternatives getAlternatives()
		+Keyword getStaticKeyword_0()
		+Keyword getDynamicKeyword_1()
	}
	class fr.ema.dedal.xtext.services.Initial_levelElements {
		-ParserRule rule
		-Alternatives cAlternatives
		-Keyword cSpecificationKeyword_0
		-Keyword cConfigurationKeyword_1
		-Keyword cAssemblyKeyword_2
		+ParserRule getRule()
		+Alternatives getAlternatives()
		+Keyword getSpecificationKeyword_0()
		+Keyword getConfigurationKeyword_1()
		+Keyword getAssemblyKeyword_2()
	}
	class fr.ema.dedal.xtext.services.Change_operationElements {
		-ParserRule rule
		-Alternatives cAlternatives
		-Keyword cAdditionKeyword_0
		-Keyword cRemovalKeyword_1
		-Keyword cSubstitutionKeyword_2
		-Keyword cModificationKeyword_3
		+ParserRule getRule()
		+Alternatives getAlternatives()
		+Keyword getAdditionKeyword_0()
		+Keyword getRemovalKeyword_1()
		+Keyword getSubstitutionKeyword_2()
		+Keyword getModificationKeyword_3()
	}
	class fr.ema.dedal.xtext.services.Architecture_elementElements {
		-ParserRule rule
		-Alternatives cAlternatives
		-RuleCall cSpecification_elementParserRuleCall_0
		-RuleCall cConfiguration_elementParserRuleCall_1
		-RuleCall cAssembly_elementParserRuleCall_2
		+ParserRule getRule()
		+Alternatives getAlternatives()
		+RuleCall getSpecification_elementParserRuleCall_0()
		+RuleCall getConfiguration_elementParserRuleCall_1()
		+RuleCall getAssembly_elementParserRuleCall_2()
	}
	class fr.ema.dedal.xtext.services.Specification_elementElements {
		-ParserRule rule
		-Alternatives cAlternatives
		-Keyword cComponent_roleKeyword_0
		-Keyword cConnectionKeyword_1
		-Keyword cArchitecture_behaviorKeyword_2
		+ParserRule getRule()
		+Alternatives getAlternatives()
		+Keyword getComponent_roleKeyword_0()
		+Keyword getConnectionKeyword_1()
		+Keyword getArchitecture_behaviorKeyword_2()
	}
	class fr.ema.dedal.xtext.services.Configuration_elementElements {
		-ParserRule rule
		-Alternatives cAlternatives
		-Keyword cComponent_classKeyword_0
		-Keyword cConnector_classKeyword_1
		+ParserRule getRule()
		+Alternatives getAlternatives()
		+Keyword getComponent_classKeyword_0()
		+Keyword getConnector_classKeyword_1()
	}
	class fr.ema.dedal.xtext.services.Assembly_elementElements {
		-ParserRule rule
		-Alternatives cAlternatives
		-Keyword cComponent_instanceKeyword_0
		-Keyword cConnector_instanceKeyword_1
		-Keyword cAssembly_constraintKeyword_2
		+ParserRule getRule()
		+Alternatives getAlternatives()
		+Keyword getComponent_instanceKeyword_0()
		+Keyword getConnector_instanceKeyword_1()
		+Keyword getAssembly_constraintKeyword_2()
	}
	class fr.ema.dedal.xtext.services.Change_purposeElements {
		-ParserRule rule
		-Alternatives cAlternatives
		-Keyword cCorrectiveKeyword_0
		-Keyword cPerfectiveKeyword_1
		-Keyword cAdaptativeKeyword_2
		+ParserRule getRule()
		+Alternatives getAlternatives()
		+Keyword getCorrectiveKeyword_0()
		+Keyword getPerfectiveKeyword_1()
		+Keyword getAdaptativeKeyword_2()
	}
	class fr.ema.dedal.xtext.services.Change_originElements {
		-ParserRule rule
		-Alternatives cAlternatives
		-Keyword cGivenKeyword_0
		-Keyword cGeneratedKeyword_1
		-Keyword cPropagatedKeyword_2
		+ParserRule getRule()
		+Alternatives getAlternatives()
		+Keyword getGivenKeyword_0()
		+Keyword getGeneratedKeyword_1()
		+Keyword getPropagatedKeyword_2()
	}
	class fr.ema.dedal.xtext.services.DIRECTIONElements {
		-EnumRule rule
		-Alternatives cAlternatives
		-EnumLiteralDeclaration cPROVIDEDEnumLiteralDeclaration_0
		-Keyword cPROVIDEDProvidedKeyword_0_0
		-EnumLiteralDeclaration cREQUIREDEnumLiteralDeclaration_1
		-Keyword cREQUIREDRequiredKeyword_1_0
		+EnumRule getRule()
		+Alternatives getAlternatives()
		+EnumLiteralDeclaration getPROVIDEDEnumLiteralDeclaration_0()
		+Keyword getPROVIDEDProvidedKeyword_0_0()
		+EnumLiteralDeclaration getREQUIREDEnumLiteralDeclaration_1()
		+Keyword getREQUIREDRequiredKeyword_1_0()
	}
	class fr.ema.dedal.xtext.services.ATTRIBUTE_TYPEElements {
		-EnumRule rule
		-Alternatives cAlternatives
		-EnumLiteralDeclaration cBOOLEANEnumLiteralDeclaration_0
		-Keyword cBOOLEANBooleanKeyword_0_0
		-EnumLiteralDeclaration cBYTEEnumLiteralDeclaration_1
		-Keyword cBYTEByteKeyword_1_0
		-EnumLiteralDeclaration cCHAREnumLiteralDeclaration_2
		-Keyword cCHARCharKeyword_2_0
		-EnumLiteralDeclaration cSHORTEnumLiteralDeclaration_3
		-Keyword cSHORTShortKeyword_3_0
		-EnumLiteralDeclaration cINTEnumLiteralDeclaration_4
		-Keyword cINTIntKeyword_4_0
		-EnumLiteralDeclaration cFLOATEnumLiteralDeclaration_5
		-Keyword cFLOATFloatKeyword_5_0
		-EnumLiteralDeclaration cLONGEnumLiteralDeclaration_6
		-Keyword cLONGLongKeyword_6_0
		-EnumLiteralDeclaration cDOUBLEEnumLiteralDeclaration_7
		-Keyword cDOUBLEDoubleKeyword_7_0
		-EnumLiteralDeclaration cSTRINGEnumLiteralDeclaration_8
		-Keyword cSTRINGStringKeyword_8_0
		-EnumLiteralDeclaration cCLASS_NAMEEnumLiteralDeclaration_9
		-Keyword cCLASS_NAMEClass_nameKeyword_9_0
		-EnumLiteralDeclaration cINTERFACE_NAMEEnumLiteralDeclaration_10
		-Keyword cINTERFACE_NAMEInterface_nameKeyword_10_0
		+EnumRule getRule()
		+Alternatives getAlternatives()
		+EnumLiteralDeclaration getBOOLEANEnumLiteralDeclaration_0()
		+Keyword getBOOLEANBooleanKeyword_0_0()
		+EnumLiteralDeclaration getBYTEEnumLiteralDeclaration_1()
		+Keyword getBYTEByteKeyword_1_0()
		+EnumLiteralDeclaration getCHAREnumLiteralDeclaration_2()
		+Keyword getCHARCharKeyword_2_0()
		+EnumLiteralDeclaration getSHORTEnumLiteralDeclaration_3()
		+Keyword getSHORTShortKeyword_3_0()
		+EnumLiteralDeclaration getINTEnumLiteralDeclaration_4()
		+Keyword getINTIntKeyword_4_0()
		+EnumLiteralDeclaration getFLOATEnumLiteralDeclaration_5()
		+Keyword getFLOATFloatKeyword_5_0()
		+EnumLiteralDeclaration getLONGEnumLiteralDeclaration_6()
		+Keyword getLONGLongKeyword_6_0()
		+EnumLiteralDeclaration getDOUBLEEnumLiteralDeclaration_7()
		+Keyword getDOUBLEDoubleKeyword_7_0()
		+EnumLiteralDeclaration getSTRINGEnumLiteralDeclaration_8()
		+Keyword getSTRINGStringKeyword_8_0()
		+EnumLiteralDeclaration getCLASS_NAMEEnumLiteralDeclaration_9()
		+Keyword getCLASS_NAMEClass_nameKeyword_9_0()
		+EnumLiteralDeclaration getINTERFACE_NAMEEnumLiteralDeclaration_10()
		+Keyword getINTERFACE_NAMEInterface_nameKeyword_10_0()
	}
}

package fr.ema.dedal.xtext.validation {
	class fr.ema.dedal.xtext.validation.AbstractDedalADLValidator {
		#List<EPackage> getEPackages()
	}
	class fr.ema.dedal.xtext.validation.DedalADLValidator {
	}
}

package fr.ema.dedal.xtext.formatting {
	class fr.ema.dedal.xtext.formatting.DedalADLFormatter {
		-DedalADLGrammarAccess _dedalADLGrammarAccess
		#void configureFormatting(FormattingConfig)
	}
}

package fr.ema.dedal.xtext.formatting2 {
	class fr.ema.dedal.xtext.formatting2.DedalADLFormatter {
		-DedalADLGrammarAccess _dedalADLGrammarAccess
		#void _format(DedalDiagram, IFormattableDocument)
		#void _format(Repository, IFormattableDocument)
		#void _format(InterfaceType, IFormattableDocument)
		#void _format(Signature, IFormattableDocument)
		#void _format(Specification, IFormattableDocument)
		#void _format(CompRole, IFormattableDocument)
		#void _format(Configuration, IFormattableDocument)
		#void _format(CompType, IFormattableDocument)
		#void _format(CompClass, IFormattableDocument)
		#void _format(CompositeCompClass, IFormattableDocument)
		#void _format(Assembly, IFormattableDocument)
		#void _format(CompInstance, IFormattableDocument)
		+void format(Object, IFormattableDocument)
	}
}

package fr.ema.dedal.xtext.generator {
	class fr.ema.dedal.xtext.generator.DedalADLGenerator {
		+void doGenerate(Resource, IFileSystemAccess)
	}
}

package fr.ema.dedal.xtext.scoping {
	class fr.ema.dedal.xtext.scoping.DedalADLScopeProvider {
	}
}

package fr.ema.dedal.xtext.ui {
	class fr.ema.dedal.xtext.ui.DedalADLUiModule {
	}
	abstract class fr.ema.dedal.xtext.ui.AbstractDedalADLUiModule {
		+com.google.inject.Provider<org.eclipse.xtext.resource.containers.IAllContainersState> provideIAllContainersState()
		+Class<? extends org.eclipse.xtext.ui.editor.contentassist.IProposalConflictHelper> bindIProposalConflictHelper()
		+void configureHighlightingLexer(com.google.inject.Binder)
		+void configureHighlightingTokenDefProvider(com.google.inject.Binder)
		+Class<? extends org.eclipse.xtext.ui.refactoring.IDependentElementsCalculator> bindIDependentElementsCalculator()
		+void configureIResourceDescriptionsBuilderScope(com.google.inject.Binder)
		+Class<? extends org.eclipse.xtext.ui.editor.IXtextEditorCallback> bindIXtextEditorCallback()
		+Class<? extends org.eclipse.xtext.generator.IContextualOutputConfigurationProvider> bindIContextualOutputConfigurationProvider()
		+void configureIResourceDescriptionsPersisted(com.google.inject.Binder)
		+Class<? extends org.eclipse.xtext.ui.editor.DocumentBasedDirtyResource> bindDocumentBasedDirtyResource()
		+Class<? extends org.eclipse.xtext.builder.IXtextBuilderParticipant> bindIXtextBuilderParticipant()
		+org.eclipse.core.resources.IWorkspaceRoot bindIWorkspaceRootToInstance()
		+void configureBuilderPreferenceStoreInitializer(com.google.inject.Binder)
		+Class<? extends org.eclipse.jface.viewers.ILabelProvider> bindILabelProvider()
		+void configureResourceUIServiceLabelProvider(com.google.inject.Binder)
		+Class<? extends org.eclipse.xtext.ui.editor.outline.IOutlineTreeProvider> bindIOutlineTreeProvider()
		+Class<? extends org.eclipse.xtext.ui.editor.outline.impl.IOutlineTreeStructureProvider> bindIOutlineTreeStructureProvider()
		+Class<? extends org.eclipse.xtext.ui.editor.quickfix.IssueResolutionProvider> bindIssueResolutionProvider()
		+Class<? extends org.eclipse.xtext.ui.editor.contentassist.IContentProposalProvider> bindIContentProposalProvider()
		+Class<? extends org.eclipse.xtext.ui.editor.contentassist.ContentAssistContext.Factory> bindContentAssistContext$Factory()
		+Class<? extends org.eclipse.xtext.ui.editor.contentassist.antlr.IContentAssistParser> bindIContentAssistParser()
		+void configureContentAssistLexerProvider(com.google.inject.Binder)
		+void configureContentAssistLexer(com.google.inject.Binder)
		+Class<? extends org.eclipse.xtext.ui.refactoring.IRenameStrategy> bindIRenameStrategy()
		+Class<? extends org.eclipse.xtext.ui.refactoring.IReferenceUpdater> bindIReferenceUpdater()
		+void configureIPreferenceStoreInitializer(com.google.inject.Binder)
		+Class<? extends org.eclipse.xtext.ui.refactoring.IRenameRefactoringProvider> bindIRenameRefactoringProvider()
		+Class<? extends org.eclipse.xtext.ui.refactoring.ui.IRenameSupport.Factory> bindIRenameSupport$Factory()
		+Class<? extends org.eclipse.xtext.ui.editor.contentassist.PrefixMatcher> bindPrefixMatcher()
		+com.google.inject.Provider<org.eclipse.xtext.ui.codetemplates.ui.preferences.TemplatesLanguageConfiguration> provideTemplatesLanguageConfiguration()
		+com.google.inject.Provider<org.eclipse.xtext.ui.codetemplates.ui.registry.LanguageRegistry> provideLanguageRegistry()
		+Class<? extends org.eclipse.xtext.ui.codetemplates.ui.registry.LanguageRegistrar> bindLanguageRegistrar()
		+Class<? extends org.eclipse.xtext.ui.editor.templates.XtextTemplatePreferencePage> bindXtextTemplatePreferencePage()
		+Class<? extends org.eclipse.xtext.ui.codetemplates.ui.partialEditing.IPartialContentAssistParser> bindIPartialContentAssistParser()
		+Class<? extends org.eclipse.compare.IViewerCreator> bindIViewerCreator()
		+void configureCompareViewerTitle(com.google.inject.Binder)
	}
	class fr.ema.dedal.xtext.ui.DedalADLExecutableExtensionFactory {
		#Bundle getBundle()
		#Injector getInjector()
	}
}

package fr.ema.dedal.xtext.ui.contentassist {
	class fr.ema.dedal.xtext.ui.contentassist.AbstractDedalADLProposalProvider {
		+void completeDedalDiagram_Name(EObject, Assignment, ContentAssistContext, ICompletionProposalAcceptor)
		+void completeDedalDiagram_ArchitectureDescriptions(EObject, Assignment, ContentAssistContext, ICompletionProposalAcceptor)
		+void completeDedalDiagram_Repositories(EObject, Assignment, ContentAssistContext, ICompletionProposalAcceptor)
		+void completeRepository_Name(EObject, Assignment, ContentAssistContext, ICompletionProposalAcceptor)
		+void completeRepository_Components(EObject, Assignment, ContentAssistContext, ICompletionProposalAcceptor)
		+void completeRepository_InterfaceTypes(EObject, Assignment, ContentAssistContext, ICompletionProposalAcceptor)
		+void completeInterfaceType_Name(EObject, Assignment, ContentAssistContext, ICompletionProposalAcceptor)
		+void completeInterfaceType_Signatures(EObject, Assignment, ContentAssistContext, ICompletionProposalAcceptor)
		+void completeSignature_Id(EObject, Assignment, ContentAssistContext, ICompletionProposalAcceptor)
		+void completeSignature_Name(EObject, Assignment, ContentAssistContext, ICompletionProposalAcceptor)
		+void completeSignature_Type(EObject, Assignment, ContentAssistContext, ICompletionProposalAcceptor)
		+void completeSignature_Parameters(EObject, Assignment, ContentAssistContext, ICompletionProposalAcceptor)
		+void completeParameter_Id(EObject, Assignment, ContentAssistContext, ICompletionProposalAcceptor)
		+void completeParameter_Name(EObject, Assignment, ContentAssistContext, ICompletionProposalAcceptor)
		+void completeParameter_Type(EObject, Assignment, ContentAssistContext, ICompletionProposalAcceptor)
		+void completeSpecification_Name(EObject, Assignment, ContentAssistContext, ICompletionProposalAcceptor)
		+void completeSpecification_SpecComponents(EObject, Assignment, ContentAssistContext, ICompletionProposalAcceptor)
		+void completeSpecification_SpecConnections(EObject, Assignment, ContentAssistContext, ICompletionProposalAcceptor)
		+void completeSpecification_InterfaceTypes(EObject, Assignment, ContentAssistContext, ICompletionProposalAcceptor)
		+void completeCompRole_Name(EObject, Assignment, ContentAssistContext, ICompletionProposalAcceptor)
		+void completeCompRole_Id(EObject, Assignment, ContentAssistContext, ICompletionProposalAcceptor)
		+void completeCompRole_CompInterfaces(EObject, Assignment, ContentAssistContext, ICompletionProposalAcceptor)
		+void completeCompRole_MinInstanceNbr(EObject, Assignment, ContentAssistContext, ICompletionProposalAcceptor)
		+void completeCompRole_MaxInstanceNbr(EObject, Assignment, ContentAssistContext, ICompletionProposalAcceptor)
		+void completeInterface_Name(EObject, Assignment, ContentAssistContext, ICompletionProposalAcceptor)
		+void completeInterface_Direction(EObject, Assignment, ContentAssistContext, ICompletionProposalAcceptor)
		+void completeInterface_Type(EObject, Assignment, ContentAssistContext, ICompletionProposalAcceptor)
		+void completeInterface_Delegation(EObject, Assignment, ContentAssistContext, ICompletionProposalAcceptor)
		+void completeInterface_Instantiates(EObject, Assignment, ContentAssistContext, ICompletionProposalAcceptor)
		+void completeRoleConnection_RefID(EObject, Assignment, ContentAssistContext, ICompletionProposalAcceptor)
		+void completeRoleConnection_ClientCompElem(EObject, Assignment, ContentAssistContext, ICompletionProposalAcceptor)
		+void completeRoleConnection_ClientIntElem(EObject, Assignment, ContentAssistContext, ICompletionProposalAcceptor)
		+void completeRoleConnection_ServerCompElem(EObject, Assignment, ContentAssistContext, ICompletionProposalAcceptor)
		+void completeRoleConnection_ServerIntElem(EObject, Assignment, ContentAssistContext, ICompletionProposalAcceptor)
		+void completeConfiguration_Name(EObject, Assignment, ContentAssistContext, ICompletionProposalAcceptor)
		+void completeConfiguration_Implements(EObject, Assignment, ContentAssistContext, ICompletionProposalAcceptor)
		+void completeConfiguration_ConfigComponents(EObject, Assignment, ContentAssistContext, ICompletionProposalAcceptor)
		+void completeConfiguration_InterfaceTypes(EObject, Assignment, ContentAssistContext, ICompletionProposalAcceptor)
		+void completeConfiguration_Comptypes(EObject, Assignment, ContentAssistContext, ICompletionProposalAcceptor)
		+void completeConfiguration_ConfigConnections(EObject, Assignment, ContentAssistContext, ICompletionProposalAcceptor)
		+void completeCompType_Name(EObject, Assignment, ContentAssistContext, ICompletionProposalAcceptor)
		+void completeCompType_Id(EObject, Assignment, ContentAssistContext, ICompletionProposalAcceptor)
		+void completeCompType_CompInterfaces(EObject, Assignment, ContentAssistContext, ICompletionProposalAcceptor)
		+void completeCompClass_Impl_Name(EObject, Assignment, ContentAssistContext, ICompletionProposalAcceptor)
		+void completeCompClass_Impl_Realizes(EObject, Assignment, ContentAssistContext, ICompletionProposalAcceptor)
		+void completeCompClass_Impl_Id(EObject, Assignment, ContentAssistContext, ICompletionProposalAcceptor)
		+void completeCompClass_Impl_Implements(EObject, Assignment, ContentAssistContext, ICompletionProposalAcceptor)
		+void completeCompClass_Impl_Content(EObject, Assignment, ContentAssistContext, ICompletionProposalAcceptor)
		+void completeCompClass_Impl_Attributes(EObject, Assignment, ContentAssistContext, ICompletionProposalAcceptor)
		+void completeCompClass_Impl_CompInterfaces(EObject, Assignment, ContentAssistContext, ICompletionProposalAcceptor)
		+void completeAttribute_Type(EObject, Assignment, ContentAssistContext, ICompletionProposalAcceptor)
		+void completeAttribute_Name(EObject, Assignment, ContentAssistContext, ICompletionProposalAcceptor)
		+void completeCompositeCompClass_Name(EObject, Assignment, ContentAssistContext, ICompletionProposalAcceptor)
		+void completeCompositeCompClass_Id(EObject, Assignment, ContentAssistContext, ICompletionProposalAcceptor)
		+void completeCompositeCompClass_Implements(EObject, Assignment, ContentAssistContext, ICompletionProposalAcceptor)
		+void completeCompositeCompClass_Uses(EObject, Assignment, ContentAssistContext, ICompletionProposalAcceptor)
		+void completeCompositeCompClass_Attributes(EObject, Assignment, ContentAssistContext, ICompletionProposalAcceptor)
		+void completeCompositeCompClass_Realizes(EObject, Assignment, ContentAssistContext, ICompletionProposalAcceptor)
		+void completeCompositeCompClass_CompInterfaces(EObject, Assignment, ContentAssistContext, ICompletionProposalAcceptor)
		+void completeCompositeCompClass_DelegatedInterfaces(EObject, Assignment, ContentAssistContext, ICompletionProposalAcceptor)
		+void completeClassConnection_RefID(EObject, Assignment, ContentAssistContext, ICompletionProposalAcceptor)
		+void completeClassConnection_Property(EObject, Assignment, ContentAssistContext, ICompletionProposalAcceptor)
		+void completeClassConnection_ClientClassElem(EObject, Assignment, ContentAssistContext, ICompletionProposalAcceptor)
		+void completeClassConnection_ClientIntElem(EObject, Assignment, ContentAssistContext, ICompletionProposalAcceptor)
		+void completeClassConnection_ServerClassElem(EObject, Assignment, ContentAssistContext, ICompletionProposalAcceptor)
		+void completeClassConnection_ServerIntElem(EObject, Assignment, ContentAssistContext, ICompletionProposalAcceptor)
		+void completePort_Impl_Name(EObject, Assignment, ContentAssistContext, ICompletionProposalAcceptor)
		+void completePort_Impl_Interfaces(EObject, Assignment, ContentAssistContext, ICompletionProposalAcceptor)
		+void completeCompositePort_Name(EObject, Assignment, ContentAssistContext, ICompletionProposalAcceptor)
		+void completeCompositePort_Ports(EObject, Assignment, ContentAssistContext, ICompletionProposalAcceptor)
		+void completeAssembly_Name(EObject, Assignment, ContentAssistContext, ICompletionProposalAcceptor)
		+void completeAssembly_Instantiates(EObject, Assignment, ContentAssistContext, ICompletionProposalAcceptor)
		+void completeAssembly_AssmComponents(EObject, Assignment, ContentAssistContext, ICompletionProposalAcceptor)
		+void completeAssembly_InterfaceTypes(EObject, Assignment, ContentAssistContext, ICompletionProposalAcceptor)
		+void completeAssembly_AssemblyConnections(EObject, Assignment, ContentAssistContext, ICompletionProposalAcceptor)
		+void completeCompInstance_Name(EObject, Assignment, ContentAssistContext, ICompletionProposalAcceptor)
		+void completeCompInstance_Role(EObject, Assignment, ContentAssistContext, ICompletionProposalAcceptor)
		+void completeCompInstance_Id(EObject, Assignment, ContentAssistContext, ICompletionProposalAcceptor)
		+void completeCompInstance_Instantiates(EObject, Assignment, ContentAssistContext, ICompletionProposalAcceptor)
		+void completeCompInstance_CompInterfaces(EObject, Assignment, ContentAssistContext, ICompletionProposalAcceptor)
		+void completeInstConnection_RefID(EObject, Assignment, ContentAssistContext, ICompletionProposalAcceptor)
		+void completeInstConnection_ClientInstElem(EObject, Assignment, ContentAssistContext, ICompletionProposalAcceptor)
		+void completeInstConnection_ClientIntElem(EObject, Assignment, ContentAssistContext, ICompletionProposalAcceptor)
		+void completeInstConnection_ServerInstElem(EObject, Assignment, ContentAssistContext, ICompletionProposalAcceptor)
		+void completeInstConnection_ServerIntElem(EObject, Assignment, ContentAssistContext, ICompletionProposalAcceptor)
		+void complete_DedalDiagram(EObject, RuleCall, ContentAssistContext, ICompletionProposalAcceptor)
		+void complete_ArchitectureDescription(EObject, RuleCall, ContentAssistContext, ICompletionProposalAcceptor)
		+void complete_Component(EObject, RuleCall, ContentAssistContext, ICompletionProposalAcceptor)
		+void complete_CompClass(EObject, RuleCall, ContentAssistContext, ICompletionProposalAcceptor)
		+void complete_Interaction(EObject, RuleCall, ContentAssistContext, ICompletionProposalAcceptor)
		+void complete_Port(EObject, RuleCall, ContentAssistContext, ICompletionProposalAcceptor)
		+void complete_EString(EObject, RuleCall, ContentAssistContext, ICompletionProposalAcceptor)
		+void complete_Repository(EObject, RuleCall, ContentAssistContext, ICompletionProposalAcceptor)
		+void complete_InterfaceType(EObject, RuleCall, ContentAssistContext, ICompletionProposalAcceptor)
		+void complete_EInt(EObject, RuleCall, ContentAssistContext, ICompletionProposalAcceptor)
		+void complete_Signature(EObject, RuleCall, ContentAssistContext, ICompletionProposalAcceptor)
		+void complete_Parameter(EObject, RuleCall, ContentAssistContext, ICompletionProposalAcceptor)
		+void complete_Specification(EObject, RuleCall, ContentAssistContext, ICompletionProposalAcceptor)
		+void complete_specification_name(EObject, RuleCall, ContentAssistContext, ICompletionProposalAcceptor)
		+void complete_CompRole(EObject, RuleCall, ContentAssistContext, ICompletionProposalAcceptor)
		+void complete_component_role_name(EObject, RuleCall, ContentAssistContext, ICompletionProposalAcceptor)
		+void complete_Interface(EObject, RuleCall, ContentAssistContext, ICompletionProposalAcceptor)
		+void complete_interface_name(EObject, RuleCall, ContentAssistContext, ICompletionProposalAcceptor)
		+void complete_DIRECTION(EObject, RuleCall, ContentAssistContext, ICompletionProposalAcceptor)
		+void complete_RoleConnection(EObject, RuleCall, ContentAssistContext, ICompletionProposalAcceptor)
		+void complete_connection_name(EObject, RuleCall, ContentAssistContext, ICompletionProposalAcceptor)
		+void complete_Configuration(EObject, RuleCall, ContentAssistContext, ICompletionProposalAcceptor)
		+void complete_configuration_name(EObject, RuleCall, ContentAssistContext, ICompletionProposalAcceptor)
		+void complete_component_class_name(EObject, RuleCall, ContentAssistContext, ICompletionProposalAcceptor)
		+void complete_CompType(EObject, RuleCall, ContentAssistContext, ICompletionProposalAcceptor)
		+void complete_component_type_name(EObject, RuleCall, ContentAssistContext, ICompletionProposalAcceptor)
		+void complete_CompClass_Impl(EObject, RuleCall, ContentAssistContext, ICompletionProposalAcceptor)
		+void complete_Attribute(EObject, RuleCall, ContentAssistContext, ICompletionProposalAcceptor)
		+void complete_attribute_name(EObject, RuleCall, ContentAssistContext, ICompletionProposalAcceptor)
		+void complete_ATTRIBUTE_TYPE(EObject, RuleCall, ContentAssistContext, ICompletionProposalAcceptor)
		+void complete_CompositeCompClass(EObject, RuleCall, ContentAssistContext, ICompletionProposalAcceptor)
		+void complete_delegated_interface_list(EObject, RuleCall, ContentAssistContext, ICompletionProposalAcceptor)
		+void complete_inner_interface(EObject, RuleCall, ContentAssistContext, ICompletionProposalAcceptor)
		+void complete_outer_interface(EObject, RuleCall, ContentAssistContext, ICompletionProposalAcceptor)
		+void complete_component_class_identifier(EObject, RuleCall, ContentAssistContext, ICompletionProposalAcceptor)
		+void complete_connector_type(EObject, RuleCall, ContentAssistContext, ICompletionProposalAcceptor)
		+void complete_connector_type_name(EObject, RuleCall, ContentAssistContext, ICompletionProposalAcceptor)
		+void complete_connector_class(EObject, RuleCall, ContentAssistContext, ICompletionProposalAcceptor)
		+void complete_connector_class_name(EObject, RuleCall, ContentAssistContext, ICompletionProposalAcceptor)
		+void complete_ClassConnection(EObject, RuleCall, ContentAssistContext, ICompletionProposalAcceptor)
		+void complete_Port_Impl(EObject, RuleCall, ContentAssistContext, ICompletionProposalAcceptor)
		+void complete_CompositePort(EObject, RuleCall, ContentAssistContext, ICompletionProposalAcceptor)
		+void complete_Assembly(EObject, RuleCall, ContentAssistContext, ICompletionProposalAcceptor)
		+void complete_assembly_name(EObject, RuleCall, ContentAssistContext, ICompletionProposalAcceptor)
		+void complete_Constraint(EObject, RuleCall, ContentAssistContext, ICompletionProposalAcceptor)
		+void complete_CompInstance(EObject, RuleCall, ContentAssistContext, ICompletionProposalAcceptor)
		+void complete_component_instance_name(EObject, RuleCall, ContentAssistContext, ICompletionProposalAcceptor)
		+void complete_InstConnection(EObject, RuleCall, ContentAssistContext, ICompletionProposalAcceptor)
		+void complete_constraint_expression(EObject, RuleCall, ContentAssistContext, ICompletionProposalAcceptor)
		+void complete_logical_constraint(EObject, RuleCall, ContentAssistContext, ICompletionProposalAcceptor)
		+void complete_relational_constraint(EObject, RuleCall, ContentAssistContext, ICompletionProposalAcceptor)
		+void complete_instance_attribute(EObject, RuleCall, ContentAssistContext, ICompletionProposalAcceptor)
		+void complete_attribute_value(EObject, RuleCall, ContentAssistContext, ICompletionProposalAcceptor)
		+void complete_version(EObject, RuleCall, ContentAssistContext, ICompletionProposalAcceptor)
		+void complete_pre_version(EObject, RuleCall, ContentAssistContext, ICompletionProposalAcceptor)
		+void complete_REVISION_NUMB(EObject, RuleCall, ContentAssistContext, ICompletionProposalAcceptor)
		+void complete_change(EObject, RuleCall, ContentAssistContext, ICompletionProposalAcceptor)
		+void complete_change_time(EObject, RuleCall, ContentAssistContext, ICompletionProposalAcceptor)
		+void complete_initial_level(EObject, RuleCall, ContentAssistContext, ICompletionProposalAcceptor)
		+void complete_change_operation(EObject, RuleCall, ContentAssistContext, ICompletionProposalAcceptor)
		+void complete_architecture_element(EObject, RuleCall, ContentAssistContext, ICompletionProposalAcceptor)
		+void complete_specification_element(EObject, RuleCall, ContentAssistContext, ICompletionProposalAcceptor)
		+void complete_configuration_element(EObject, RuleCall, ContentAssistContext, ICompletionProposalAcceptor)
		+void complete_assembly_element(EObject, RuleCall, ContentAssistContext, ICompletionProposalAcceptor)
		+void complete_change_purpose(EObject, RuleCall, ContentAssistContext, ICompletionProposalAcceptor)
		+void complete_change_origin(EObject, RuleCall, ContentAssistContext, ICompletionProposalAcceptor)
	}
	class fr.ema.dedal.xtext.ui.contentassist.DedalADLProposalProvider {
	}
}

package fr.ema.dedal.xtext.ui.contentassist.antlr {
	class fr.ema.dedal.xtext.ui.contentassist.antlr.DedalADLParser {
		-DedalADLGrammarAccess grammarAccess
		-Map<AbstractElement,String> nameMappings
		#fr.ema.dedal.xtext.ui.contentassist.antlr.internal.InternalDedalADLParser createParser()
		#String getRuleName(AbstractElement)
		#Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser)
		#String[] getInitialHiddenTokens()
		+DedalADLGrammarAccess getGrammarAccess()
		+void setGrammarAccess(DedalADLGrammarAccess)
	}
	class fr.ema.dedal.xtext.ui.contentassist.antlr.PartialDedalADLContentAssistParser {
		-AbstractRule rule
		+void initializeFor(AbstractRule)
		#Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser)
	}
}

package fr.ema.dedal.xtext.ui.contentassist.antlr.internal {
	class fr.ema.dedal.xtext.ui.contentassist.antlr.internal.InternalDedalADLLexer {
		+int T__50
		+int T__59
		+int RULE_REVISION_NUMB
		+int T__55
		+int T__56
		+int T__57
		+int T__58
		+int T__51
		+int T__52
		+int T__53
		+int T__54
		+int T__60
		+int T__61
		+int RULE_ID
		+int RULE_INT
		+int T__66
		+int RULE_ML_COMMENT
		+int T__67
		+int T__68
		+int T__69
		+int T__62
		+int T__63
		+int T__64
		+int T__65
		+int T__37
		+int T__38
		+int T__39
		+int T__33
		+int T__34
		+int T__35
		+int T__36
		+int T__30
		+int T__31
		+int T__32
		+int T__48
		+int T__49
		+int T__44
		+int T__45
		+int T__46
		+int T__47
		+int T__40
		+int T__41
		+int T__42
		+int T__43
		+int T__91
		+int T__100
		+int T__92
		+int T__93
		+int T__102
		+int T__94
		+int T__101
		+int T__90
		+int T__19
		+int T__15
		+int T__16
		+int T__17
		+int T__18
		+int T__99
		+int T__12
		+int T__13
		+int T__14
		+int T__95
		+int T__96
		+int T__97
		+int T__98
		+int T__26
		+int T__27
		+int T__28
		+int T__29
		+int T__22
		+int T__23
		+int T__24
		+int T__25
		+int T__20
		+int T__21
		+int T__70
		+int T__121
		+int T__71
		+int T__72
		+int T__120
		+int RULE_STRING
		+int RULE_SL_COMMENT
		+int T__77
		+int T__119
		+int T__78
		+int T__118
		+int T__79
		+int T__73
		+int T__115
		+int EOF
		+int T__74
		+int T__114
		+int T__75
		+int T__117
		+int T__76
		+int T__116
		+int T__80
		+int T__111
		+int T__81
		+int T__110
		+int T__82
		+int T__113
		+int T__83
		+int T__112
		+int RULE_WS
		+int RULE_ANY_OTHER
		+int T__88
		+int T__108
		+int T__89
		+int T__107
		+int T__109
		+int T__84
		+int T__104
		+int T__85
		+int T__103
		+int T__86
		+int T__106
		+int T__87
		+int T__105
		#DFA14 dfa14
		~String DFA14_eotS
		~String DFA14_eofS
		~String DFA14_minS
		~String DFA14_maxS
		~String DFA14_acceptS
		~String DFA14_specialS
		~String DFA14_transitionS
		~short DFA14_eot
		~short DFA14_eof
		~char DFA14_min
		~char DFA14_max
		~short DFA14_accept
		~short DFA14_special
		~short DFA14_transition
		+String getGrammarFileName()
		+void mT__12()
		+void mT__13()
		+void mT__14()
		+void mT__15()
		+void mT__16()
		+void mT__17()
		+void mT__18()
		+void mT__19()
		+void mT__20()
		+void mT__21()
		+void mT__22()
		+void mT__23()
		+void mT__24()
		+void mT__25()
		+void mT__26()
		+void mT__27()
		+void mT__28()
		+void mT__29()
		+void mT__30()
		+void mT__31()
		+void mT__32()
		+void mT__33()
		+void mT__34()
		+void mT__35()
		+void mT__36()
		+void mT__37()
		+void mT__38()
		+void mT__39()
		+void mT__40()
		+void mT__41()
		+void mT__42()
		+void mT__43()
		+void mT__44()
		+void mT__45()
		+void mT__46()
		+void mT__47()
		+void mT__48()
		+void mT__49()
		+void mT__50()
		+void mT__51()
		+void mT__52()
		+void mT__53()
		+void mT__54()
		+void mT__55()
		+void mT__56()
		+void mT__57()
		+void mT__58()
		+void mT__59()
		+void mT__60()
		+void mT__61()
		+void mT__62()
		+void mT__63()
		+void mT__64()
		+void mT__65()
		+void mT__66()
		+void mT__67()
		+void mT__68()
		+void mT__69()
		+void mT__70()
		+void mT__71()
		+void mT__72()
		+void mT__73()
		+void mT__74()
		+void mT__75()
		+void mT__76()
		+void mT__77()
		+void mT__78()
		+void mT__79()
		+void mT__80()
		+void mT__81()
		+void mT__82()
		+void mT__83()
		+void mT__84()
		+void mT__85()
		+void mT__86()
		+void mT__87()
		+void mT__88()
		+void mT__89()
		+void mT__90()
		+void mT__91()
		+void mT__92()
		+void mT__93()
		+void mT__94()
		+void mT__95()
		+void mT__96()
		+void mT__97()
		+void mT__98()
		+void mT__99()
		+void mT__100()
		+void mT__101()
		+void mT__102()
		+void mT__103()
		+void mT__104()
		+void mT__105()
		+void mT__106()
		+void mT__107()
		+void mT__108()
		+void mT__109()
		+void mT__110()
		+void mT__111()
		+void mT__112()
		+void mT__113()
		+void mT__114()
		+void mT__115()
		+void mT__116()
		+void mT__117()
		+void mT__118()
		+void mT__119()
		+void mT__120()
		+void mT__121()
		+void mRULE_REVISION_NUMB()
		+void mRULE_ID()
		+void mRULE_INT()
		+void mRULE_STRING()
		+void mRULE_ML_COMMENT()
		+void mRULE_SL_COMMENT()
		+void mRULE_WS()
		+void mRULE_ANY_OTHER()
		+void mTokens()
	}
	class fr.ema.dedal.xtext.ui.contentassist.antlr.internal.DFA14 {
		+String getDescription()
		+int specialStateTransition(int, IntStream)
	}
	class fr.ema.dedal.xtext.ui.contentassist.antlr.internal.InternalDedalADLParser {
		+String tokenNames
		+int T__50
		+int T__59
		+int RULE_REVISION_NUMB
		+int T__55
		+int T__56
		+int T__57
		+int T__58
		+int T__51
		+int T__52
		+int T__53
		+int T__54
		+int T__60
		+int T__61
		+int RULE_ID
		+int RULE_INT
		+int T__66
		+int RULE_ML_COMMENT
		+int T__67
		+int T__68
		+int T__69
		+int T__62
		+int T__63
		+int T__64
		+int T__65
		+int T__37
		+int T__38
		+int T__39
		+int T__33
		+int T__34
		+int T__35
		+int T__36
		+int T__30
		+int T__31
		+int T__32
		+int T__48
		+int T__49
		+int T__44
		+int T__45
		+int T__46
		+int T__47
		+int T__40
		+int T__41
		+int T__42
		+int T__43
		+int T__91
		+int T__100
		+int T__92
		+int T__93
		+int T__102
		+int T__94
		+int T__101
		+int T__90
		+int T__19
		+int T__15
		+int T__16
		+int T__17
		+int T__18
		+int T__99
		+int T__12
		+int T__13
		+int T__14
		+int T__95
		+int T__96
		+int T__97
		+int T__98
		+int T__26
		+int T__27
		+int T__28
		+int T__29
		+int T__22
		+int T__23
		+int T__24
		+int T__25
		+int T__20
		+int T__21
		+int T__70
		+int T__121
		+int T__71
		+int T__72
		+int T__120
		+int RULE_STRING
		+int RULE_SL_COMMENT
		+int T__77
		+int T__119
		+int T__78
		+int T__118
		+int T__79
		+int T__73
		+int T__115
		+int EOF
		+int T__74
		+int T__114
		+int T__75
		+int T__117
		+int T__76
		+int T__116
		+int T__80
		+int T__111
		+int T__81
		+int T__110
		+int T__82
		+int T__113
		+int T__83
		+int T__112
		+int RULE_WS
		+int RULE_ANY_OTHER
		+int T__88
		+int T__108
		+int T__89
		+int T__107
		+int T__109
		+int T__84
		+int T__104
		+int T__85
		+int T__103
		+int T__86
		+int T__106
		+int T__87
		+int T__105
		-DedalADLGrammarAccess grammarAccess
		+String[] getTokenNames()
		+String getGrammarFileName()
		+void setGrammarAccess(DedalADLGrammarAccess)
		#Grammar getGrammar()
		#String getValueForTokenName(String)
		+void entryRuleDedalDiagram()
		+void ruleDedalDiagram()
		+void entryRuleArchitectureDescription()
		+void ruleArchitectureDescription()
		+void entryRuleComponent()
		+void ruleComponent()
		+void entryRuleCompClass()
		+void ruleCompClass()
		+void entryRuleInteraction()
		+void ruleInteraction()
		+void entryRuleEString()
		+void ruleEString()
		+void entryRuleRepository()
		+void ruleRepository()
		+void entryRuleInterfaceType()
		+void ruleInterfaceType()
		+void entryRuleSignature()
		+void ruleSignature()
		+void entryRuleParameter()
		+void ruleParameter()
		+void entryRuleSpecification()
		+void ruleSpecification()
		+void entryRulespecification_name()
		+void rulespecification_name()
		+void entryRuleCompRole()
		+void ruleCompRole()
		+void entryRulecomponent_role_name()
		+void rulecomponent_role_name()
		+void entryRuleInterface()
		+void ruleInterface()
		+void entryRuleinterface_name()
		+void ruleinterface_name()
		+void entryRuleRoleConnection()
		+void ruleRoleConnection()
		+void entryRuleconnection_name()
		+void ruleconnection_name()
		+void entryRuleConfiguration()
		+void ruleConfiguration()
		+void entryRuleconfiguration_name()
		+void ruleconfiguration_name()
		+void entryRulecomponent_class_name()
		+void rulecomponent_class_name()
		+void entryRuleCompType()
		+void ruleCompType()
		+void entryRulecomponent_type_name()
		+void rulecomponent_type_name()
		+void entryRuleCompClass_Impl()
		+void ruleCompClass_Impl()
		+void entryRuleAttribute()
		+void ruleAttribute()
		+void entryRuleattribute_name()
		+void ruleattribute_name()
		+void entryRuleCompositeCompClass()
		+void ruleCompositeCompClass()
		+void entryRuledelegated_interface_list()
		+void ruledelegated_interface_list()
		+void entryRuleinner_interface()
		+void ruleinner_interface()
		+void entryRuleouter_interface()
		+void ruleouter_interface()
		+void entryRulecomponent_class_identifier()
		+void rulecomponent_class_identifier()
		+void entryRuleconnector_type()
		+void ruleconnector_type()
		+void entryRuleconnector_type_name()
		+void ruleconnector_type_name()
		+void entryRuleconnector_class()
		+void ruleconnector_class()
		+void entryRuleconnector_class_name()
		+void ruleconnector_class_name()
		+void entryRuleClassConnection()
		+void ruleClassConnection()
		+void entryRulePort_Impl()
		+void rulePort_Impl()
		+void entryRuleCompositePort()
		+void ruleCompositePort()
		+void entryRuleAssembly()
		+void ruleAssembly()
		+void entryRuleassembly_name()
		+void ruleassembly_name()
		+void entryRuleConstraint()
		+void ruleConstraint()
		+void entryRuleCompInstance()
		+void ruleCompInstance()
		+void entryRulecomponent_instance_name()
		+void rulecomponent_instance_name()
		+void entryRuleInstConnection()
		+void ruleInstConnection()
		+void entryRuleconstraint_expression()
		+void ruleconstraint_expression()
		+void entryRulelogical_constraint()
		+void rulelogical_constraint()
		+void entryRulerelational_constraint()
		+void rulerelational_constraint()
		+void entryRuleinstance_attribute()
		+void ruleinstance_attribute()
		+void entryRuleattribute_value()
		+void ruleattribute_value()
		+void entryRuleversion()
		+void ruleversion()
		+void entryRulepre_version()
		+void rulepre_version()
		+void entryRulechange()
		+void rulechange()
		+void entryRulechange_time()
		+void rulechange_time()
		+void entryRuleinitial_level()
		+void ruleinitial_level()
		+void entryRulechange_operation()
		+void rulechange_operation()
		+void entryRulearchitecture_element()
		+void rulearchitecture_element()
		+void entryRulespecification_element()
		+void rulespecification_element()
		+void entryRuleconfiguration_element()
		+void ruleconfiguration_element()
		+void entryRuleassembly_element()
		+void ruleassembly_element()
		+void entryRulechange_purpose()
		+void rulechange_purpose()
		+void entryRulechange_origin()
		+void rulechange_origin()
		+void ruleDIRECTION()
		+void rule__ArchitectureDescription__Alternatives()
		+void rule__Component__Alternatives()
		+void rule__CompClass__Alternatives()
		+void rule__Interaction__Alternatives()
		+void rule__EString__Alternatives()
		+void rule__Delegated_interface_list__Alternatives()
		+void rule__Delegated_interface_list__Alternatives_1_4()
		+void rule__Constraint_expression__Alternatives()
		+void rule__Logical_constraint__Alternatives()
		+void rule__Relational_constraint__Alternatives_1()
		+void rule__Relational_constraint__Alternatives_2()
		+void rule__Change_time__Alternatives()
		+void rule__Initial_level__Alternatives()
		+void rule__Change_operation__Alternatives()
		+void rule__Architecture_element__Alternatives()
		+void rule__Specification_element__Alternatives()
		+void rule__Configuration_element__Alternatives()
		+void rule__Assembly_element__Alternatives()
		+void rule__Change_purpose__Alternatives()
		+void rule__Change_origin__Alternatives()
		+void rule__DIRECTION__Alternatives()
		+void rule__DedalDiagram__Group__0()
		+void rule__DedalDiagram__Group__0__Impl()
		+void rule__DedalDiagram__Group__1()
		+void rule__DedalDiagram__Group__1__Impl()
		+void rule__DedalDiagram__Group__2()
		+void rule__DedalDiagram__Group__2__Impl()
		+void rule__DedalDiagram__Group_2__0()
		+void rule__DedalDiagram__Group_2__0__Impl()
		+void rule__DedalDiagram__Group_2__1()
		+void rule__DedalDiagram__Group_2__1__Impl()
		+void rule__DedalDiagram__Group_2_0__0()
		+void rule__DedalDiagram__Group_2_0__0__Impl()
		+void rule__DedalDiagram__Group_2_0__1()
		+void rule__DedalDiagram__Group_2_0__1__Impl()
		+void rule__DedalDiagram__Group_2_0__2()
		+void rule__DedalDiagram__Group_2_0__2__Impl()
		+void rule__DedalDiagram__Group_2_0__3()
		+void rule__DedalDiagram__Group_2_0__3__Impl()
		+void rule__DedalDiagram__Group_2_0__4()
		+void rule__DedalDiagram__Group_2_0__4__Impl()
		+void rule__DedalDiagram__Group_2_0_3__0()
		+void rule__DedalDiagram__Group_2_0_3__0__Impl()
		+void rule__DedalDiagram__Group_2_0_3__1()
		+void rule__DedalDiagram__Group_2_0_3__1__Impl()
		+void rule__DedalDiagram__Group_2_1__0()
		+void rule__DedalDiagram__Group_2_1__0__Impl()
		+void rule__DedalDiagram__Group_2_1__1()
		+void rule__DedalDiagram__Group_2_1__1__Impl()
		+void rule__DedalDiagram__Group_2_1__2()
		+void rule__DedalDiagram__Group_2_1__2__Impl()
		+void rule__DedalDiagram__Group_2_1__3()
		+void rule__DedalDiagram__Group_2_1__3__Impl()
		+void rule__DedalDiagram__Group_2_1__4()
		+void rule__DedalDiagram__Group_2_1__4__Impl()
		+void rule__DedalDiagram__Group_2_1_3__0()
		+void rule__DedalDiagram__Group_2_1_3__0__Impl()
		+void rule__DedalDiagram__Group_2_1_3__1()
		+void rule__DedalDiagram__Group_2_1_3__1__Impl()
		+void rule__Repository__Group__0()
		+void rule__Repository__Group__0__Impl()
		+void rule__Repository__Group__1()
		+void rule__Repository__Group__1__Impl()
		+void rule__Repository__Group__2()
		+void rule__Repository__Group__2__Impl()
		+void rule__Repository__Group__3()
		+void rule__Repository__Group__3__Impl()
		+void rule__Repository__Group_2__0()
		+void rule__Repository__Group_2__0__Impl()
		+void rule__Repository__Group_2__1()
		+void rule__Repository__Group_2__1__Impl()
		+void rule__Repository__Group_2__2()
		+void rule__Repository__Group_2__2__Impl()
		+void rule__Repository__Group_2__3()
		+void rule__Repository__Group_2__3__Impl()
		+void rule__Repository__Group_2__4()
		+void rule__Repository__Group_2__4__Impl()
		+void rule__Repository__Group_2_3__0()
		+void rule__Repository__Group_2_3__0__Impl()
		+void rule__Repository__Group_2_3__1()
		+void rule__Repository__Group_2_3__1__Impl()
		+void rule__Repository__Group_3__0()
		+void rule__Repository__Group_3__0__Impl()
		+void rule__Repository__Group_3__1()
		+void rule__Repository__Group_3__1__Impl()
		+void rule__Repository__Group_3__2()
		+void rule__Repository__Group_3__2__Impl()
		+void rule__Repository__Group_3__3()
		+void rule__Repository__Group_3__3__Impl()
		+void rule__Repository__Group_3__4()
		+void rule__Repository__Group_3__4__Impl()
		+void rule__Repository__Group_3_3__0()
		+void rule__Repository__Group_3_3__0__Impl()
		+void rule__Repository__Group_3_3__1()
		+void rule__Repository__Group_3_3__1__Impl()
		+void rule__InterfaceType__Group__0()
		+void rule__InterfaceType__Group__0__Impl()
		+void rule__InterfaceType__Group__1()
		+void rule__InterfaceType__Group__1__Impl()
		+void rule__InterfaceType__Group__2()
		+void rule__InterfaceType__Group__2__Impl()
		+void rule__InterfaceType__Group__3()
		+void rule__InterfaceType__Group__3__Impl()
		+void rule__InterfaceType__Group__4()
		+void rule__InterfaceType__Group__4__Impl()
		+void rule__InterfaceType__Group__5()
		+void rule__InterfaceType__Group__5__Impl()
		+void rule__InterfaceType__Group__6()
		+void rule__InterfaceType__Group__6__Impl()
		+void rule__InterfaceType__Group_5__0()
		+void rule__InterfaceType__Group_5__0__Impl()
		+void rule__InterfaceType__Group_5__1()
		+void rule__InterfaceType__Group_5__1__Impl()
		+void rule__Signature__Group__0()
		+void rule__Signature__Group__0__Impl()
		+void rule__Signature__Group__1()
		+void rule__Signature__Group__1__Impl()
		+void rule__Signature__Group__2()
		+void rule__Signature__Group__2__Impl()
		+void rule__Signature__Group__3()
		+void rule__Signature__Group__3__Impl()
		+void rule__Signature__Group__4()
		+void rule__Signature__Group__4__Impl()
		+void rule__Signature__Group_2__0()
		+void rule__Signature__Group_2__0__Impl()
		+void rule__Signature__Group_2__1()
		+void rule__Signature__Group_2__1__Impl()
		+void rule__Signature__Group_3__0()
		+void rule__Signature__Group_3__0__Impl()
		+void rule__Signature__Group_3__1()
		+void rule__Signature__Group_3__1__Impl()
		+void rule__Signature__Group_4__0()
		+void rule__Signature__Group_4__0__Impl()
		+void rule__Signature__Group_4__1()
		+void rule__Signature__Group_4__1__Impl()
		+void rule__Signature__Group_4__2()
		+void rule__Signature__Group_4__2__Impl()
		+void rule__Signature__Group_4__3()
		+void rule__Signature__Group_4__3__Impl()
		+void rule__Signature__Group_4__4()
		+void rule__Signature__Group_4__4__Impl()
		+void rule__Signature__Group_4_3__0()
		+void rule__Signature__Group_4_3__0__Impl()
		+void rule__Signature__Group_4_3__1()
		+void rule__Signature__Group_4_3__1__Impl()
		+void rule__Parameter__Group__0()
		+void rule__Parameter__Group__0__Impl()
		+void rule__Parameter__Group__1()
		+void rule__Parameter__Group__1__Impl()
		+void rule__Parameter__Group__2()
		+void rule__Parameter__Group__2__Impl()
		+void rule__Parameter__Group__3()
		+void rule__Parameter__Group__3__Impl()
		+void rule__Parameter__Group_2__0()
		+void rule__Parameter__Group_2__0__Impl()
		+void rule__Parameter__Group_2__1()
		+void rule__Parameter__Group_2__1__Impl()
		+void rule__Parameter__Group_3__0()
		+void rule__Parameter__Group_3__0__Impl()
		+void rule__Parameter__Group_3__1()
		+void rule__Parameter__Group_3__1__Impl()
		+void rule__Specification__Group__0()
		+void rule__Specification__Group__0__Impl()
		+void rule__Specification__Group__1()
		+void rule__Specification__Group__1__Impl()
		+void rule__Specification__Group__2()
		+void rule__Specification__Group__2__Impl()
		+void rule__Specification__Group__3()
		+void rule__Specification__Group__3__Impl()
		+void rule__Specification__Group__4()
		+void rule__Specification__Group__4__Impl()
		+void rule__Specification__Group__5()
		+void rule__Specification__Group__5__Impl()
		+void rule__Specification__Group__6()
		+void rule__Specification__Group__6__Impl()
		+void rule__Specification__Group__7()
		+void rule__Specification__Group__7__Impl()
		+void rule__Specification__Group__8()
		+void rule__Specification__Group__8__Impl()
		+void rule__Specification__Group__9()
		+void rule__Specification__Group__9__Impl()
		+void rule__Specification__Group_4__0()
		+void rule__Specification__Group_4__0__Impl()
		+void rule__Specification__Group_4__1()
		+void rule__Specification__Group_4__1__Impl()
		+void rule__Specification__Group_5__0()
		+void rule__Specification__Group_5__0__Impl()
		+void rule__Specification__Group_5__1()
		+void rule__Specification__Group_5__1__Impl()
		+void rule__Specification__Group_5__2()
		+void rule__Specification__Group_5__2__Impl()
		+void rule__Specification__Group_6__0()
		+void rule__Specification__Group_6__0__Impl()
		+void rule__Specification__Group_6__1()
		+void rule__Specification__Group_6__1__Impl()
		+void rule__Specification__Group_7__0()
		+void rule__Specification__Group_7__0__Impl()
		+void rule__Specification__Group_7__1()
		+void rule__Specification__Group_7__1__Impl()
		+void rule__Specification__Group_8__0()
		+void rule__Specification__Group_8__0__Impl()
		+void rule__Specification__Group_8__1()
		+void rule__Specification__Group_8__1__Impl()
		+void rule__Specification__Group_9__0()
		+void rule__Specification__Group_9__0__Impl()
		+void rule__Specification__Group_9__1()
		+void rule__Specification__Group_9__1__Impl()
		+void rule__Specification__Group_9__2()
		+void rule__Specification__Group_9__2__Impl()
		+void rule__Specification__Group_9_2__0()
		+void rule__Specification__Group_9_2__0__Impl()
		+void rule__Specification__Group_9_2__1()
		+void rule__Specification__Group_9_2__1__Impl()
		+void rule__CompRole__Group__0()
		+void rule__CompRole__Group__0__Impl()
		+void rule__CompRole__Group__1()
		+void rule__CompRole__Group__1__Impl()
		+void rule__CompRole__Group__2()
		+void rule__CompRole__Group__2__Impl()
		+void rule__CompRole__Group__3()
		+void rule__CompRole__Group__3__Impl()
		+void rule__CompRole__Group__4()
		+void rule__CompRole__Group__4__Impl()
		+void rule__CompRole__Group__5()
		+void rule__CompRole__Group__5__Impl()
		+void rule__CompRole__Group__6()
		+void rule__CompRole__Group__6__Impl()
		+void rule__CompRole__Group__7()
		+void rule__CompRole__Group__7__Impl()
		+void rule__CompRole__Group__8()
		+void rule__CompRole__Group__8__Impl()
		+void rule__CompRole__Group_4__0()
		+void rule__CompRole__Group_4__0__Impl()
		+void rule__CompRole__Group_4__1()
		+void rule__CompRole__Group_4__1__Impl()
		+void rule__CompRole__Group_4__2()
		+void rule__CompRole__Group_4__2__Impl()
		+void rule__CompRole__Group_4_2__0()
		+void rule__CompRole__Group_4_2__0__Impl()
		+void rule__CompRole__Group_4_2__1()
		+void rule__CompRole__Group_4_2__1__Impl()
		+void rule__CompRole__Group_5__0()
		+void rule__CompRole__Group_5__0__Impl()
		+void rule__CompRole__Group_5__1()
		+void rule__CompRole__Group_5__1__Impl()
		+void rule__CompRole__Group_5__2()
		+void rule__CompRole__Group_5__2__Impl()
		+void rule__CompRole__Group_5_2__0()
		+void rule__CompRole__Group_5_2__0__Impl()
		+void rule__CompRole__Group_5_2__1()
		+void rule__CompRole__Group_5_2__1__Impl()
		+void rule__CompRole__Group_6__0()
		+void rule__CompRole__Group_6__0__Impl()
		+void rule__CompRole__Group_6__1()
		+void rule__CompRole__Group_6__1__Impl()
		+void rule__CompRole__Group_7__0()
		+void rule__CompRole__Group_7__0__Impl()
		+void rule__CompRole__Group_7__1()
		+void rule__CompRole__Group_7__1__Impl()
		+void rule__CompRole__Group_8__0()
		+void rule__CompRole__Group_8__0__Impl()
		+void rule__CompRole__Group_8__1()
		+void rule__CompRole__Group_8__1__Impl()
		+void rule__CompRole__Group_8__2()
		+void rule__CompRole__Group_8__2__Impl()
		+void rule__CompRole__Group_8_2__0()
		+void rule__CompRole__Group_8_2__0__Impl()
		+void rule__CompRole__Group_8_2__1()
		+void rule__CompRole__Group_8_2__1__Impl()
		+void rule__Interface__Group__0()
		+void rule__Interface__Group__0__Impl()
		+void rule__Interface__Group__1()
		+void rule__Interface__Group__1__Impl()
		+void rule__Interface__Group__2()
		+void rule__Interface__Group__2__Impl()
		+void rule__Interface__Group__3()
		+void rule__Interface__Group__3__Impl()
		+void rule__Interface__Group__4()
		+void rule__Interface__Group__4__Impl()
		+void rule__Interface__Group__5()
		+void rule__Interface__Group__5__Impl()
		+void rule__Interface__Group__6()
		+void rule__Interface__Group__6__Impl()
		+void rule__Interface__Group__7()
		+void rule__Interface__Group__7__Impl()
		+void rule__Interface__Group_6__0()
		+void rule__Interface__Group_6__0__Impl()
		+void rule__Interface__Group_6__1()
		+void rule__Interface__Group_6__1__Impl()
		+void rule__Interface__Group_7__0()
		+void rule__Interface__Group_7__0__Impl()
		+void rule__Interface__Group_7__1()
		+void rule__Interface__Group_7__1__Impl()
		+void rule__RoleConnection__Group__0()
		+void rule__RoleConnection__Group__0__Impl()
		+void rule__RoleConnection__Group__1()
		+void rule__RoleConnection__Group__1__Impl()
		+void rule__RoleConnection__Group__2()
		+void rule__RoleConnection__Group__2__Impl()
		+void rule__RoleConnection__Group__3()
		+void rule__RoleConnection__Group__3__Impl()
		+void rule__RoleConnection__Group__4()
		+void rule__RoleConnection__Group__4__Impl()
		+void rule__RoleConnection__Group__5()
		+void rule__RoleConnection__Group__5__Impl()
		+void rule__RoleConnection__Group__6()
		+void rule__RoleConnection__Group__6__Impl()
		+void rule__RoleConnection__Group__7()
		+void rule__RoleConnection__Group__7__Impl()
		+void rule__RoleConnection__Group__8()
		+void rule__RoleConnection__Group__8__Impl()
		+void rule__RoleConnection__Group__9()
		+void rule__RoleConnection__Group__9__Impl()
		+void rule__Configuration__Group__0()
		+void rule__Configuration__Group__0__Impl()
		+void rule__Configuration__Group__1()
		+void rule__Configuration__Group__1__Impl()
		+void rule__Configuration__Group__2()
		+void rule__Configuration__Group__2__Impl()
		+void rule__Configuration__Group__3()
		+void rule__Configuration__Group__3__Impl()
		+void rule__Configuration__Group__4()
		+void rule__Configuration__Group__4__Impl()
		+void rule__Configuration__Group__5()
		+void rule__Configuration__Group__5__Impl()
		+void rule__Configuration__Group__6()
		+void rule__Configuration__Group__6__Impl()
		+void rule__Configuration__Group__7()
		+void rule__Configuration__Group__7__Impl()
		+void rule__Configuration__Group__8()
		+void rule__Configuration__Group__8__Impl()
		+void rule__Configuration__Group__9()
		+void rule__Configuration__Group__9__Impl()
		+void rule__Configuration__Group__10()
		+void rule__Configuration__Group__10__Impl()
		+void rule__Configuration__Group_2__0()
		+void rule__Configuration__Group_2__0__Impl()
		+void rule__Configuration__Group_2__1()
		+void rule__Configuration__Group_2__1__Impl()
		+void rule__Configuration__Group_2__2()
		+void rule__Configuration__Group_2__2__Impl()
		+void rule__Configuration__Group_2__3()
		+void rule__Configuration__Group_2__3__Impl()
		+void rule__Configuration__Group_2_2__0()
		+void rule__Configuration__Group_2_2__0__Impl()
		+void rule__Configuration__Group_2_2__1()
		+void rule__Configuration__Group_2_2__1__Impl()
		+void rule__Configuration__Group_2_2__2()
		+void rule__Configuration__Group_2_2__2__Impl()
		+void rule__Configuration__Group_2_3__0()
		+void rule__Configuration__Group_2_3__0__Impl()
		+void rule__Configuration__Group_2_3__1()
		+void rule__Configuration__Group_2_3__1__Impl()
		+void rule__Configuration__Group_2_3__2()
		+void rule__Configuration__Group_2_3__2__Impl()
		+void rule__Configuration__Group_2_3__3()
		+void rule__Configuration__Group_2_3__3__Impl()
		+void rule__Configuration__Group_2_3__4()
		+void rule__Configuration__Group_2_3__4__Impl()
		+void rule__Configuration__Group_3__0()
		+void rule__Configuration__Group_3__0__Impl()
		+void rule__Configuration__Group_3__1()
		+void rule__Configuration__Group_3__1__Impl()
		+void rule__Configuration__Group_4__0()
		+void rule__Configuration__Group_4__0__Impl()
		+void rule__Configuration__Group_4__1()
		+void rule__Configuration__Group_4__1__Impl()
		+void rule__Configuration__Group_5__0()
		+void rule__Configuration__Group_5__0__Impl()
		+void rule__Configuration__Group_5__1()
		+void rule__Configuration__Group_5__1__Impl()
		+void rule__Configuration__Group_6__0()
		+void rule__Configuration__Group_6__0__Impl()
		+void rule__Configuration__Group_6__1()
		+void rule__Configuration__Group_6__1__Impl()
		+void rule__Configuration__Group_6__2()
		+void rule__Configuration__Group_6__2__Impl()
		+void rule__Configuration__Group_6_2__0()
		+void rule__Configuration__Group_6_2__0__Impl()
		+void rule__Configuration__Group_6_2__1()
		+void rule__Configuration__Group_6_2__1__Impl()
		+void rule__Configuration__Group_7__0()
		+void rule__Configuration__Group_7__0__Impl()
		+void rule__Configuration__Group_7__1()
		+void rule__Configuration__Group_7__1__Impl()
		+void rule__Configuration__Group_7__2()
		+void rule__Configuration__Group_7__2__Impl()
		+void rule__Configuration__Group_7__3()
		+void rule__Configuration__Group_7__3__Impl()
		+void rule__Configuration__Group_7__4()
		+void rule__Configuration__Group_7__4__Impl()
		+void rule__Configuration__Group_7_4__0()
		+void rule__Configuration__Group_7_4__0__Impl()
		+void rule__Configuration__Group_7_4__1()
		+void rule__Configuration__Group_7_4__1__Impl()
		+void rule__Configuration__Group_7_4__2()
		+void rule__Configuration__Group_7_4__2__Impl()
		+void rule__Configuration__Group_7_4__3()
		+void rule__Configuration__Group_7_4__3__Impl()
		+void rule__Configuration__Group_8__0()
		+void rule__Configuration__Group_8__0__Impl()
		+void rule__Configuration__Group_8__1()
		+void rule__Configuration__Group_8__1__Impl()
		+void rule__Configuration__Group_8__2()
		+void rule__Configuration__Group_8__2__Impl()
		+void rule__Configuration__Group_8__3()
		+void rule__Configuration__Group_8__3__Impl()
		+void rule__Configuration__Group_8__4()
		+void rule__Configuration__Group_8__4__Impl()
		+void rule__Configuration__Group_8_3__0()
		+void rule__Configuration__Group_8_3__0__Impl()
		+void rule__Configuration__Group_8_3__1()
		+void rule__Configuration__Group_8_3__1__Impl()
		+void rule__Configuration__Group_9__0()
		+void rule__Configuration__Group_9__0__Impl()
		+void rule__Configuration__Group_9__1()
		+void rule__Configuration__Group_9__1__Impl()
		+void rule__Configuration__Group_9__2()
		+void rule__Configuration__Group_9__2__Impl()
		+void rule__Configuration__Group_9__3()
		+void rule__Configuration__Group_9__3__Impl()
		+void rule__Configuration__Group_9__4()
		+void rule__Configuration__Group_9__4__Impl()
		+void rule__Configuration__Group_9_3__0()
		+void rule__Configuration__Group_9_3__0__Impl()
		+void rule__Configuration__Group_9_3__1()
		+void rule__Configuration__Group_9_3__1__Impl()
		+void rule__Configuration__Group_10__0()
		+void rule__Configuration__Group_10__0__Impl()
		+void rule__Configuration__Group_10__1()
		+void rule__Configuration__Group_10__1__Impl()
		+void rule__Configuration__Group_10__2()
		+void rule__Configuration__Group_10__2__Impl()
		+void rule__Configuration__Group_10__3()
		+void rule__Configuration__Group_10__3__Impl()
		+void rule__Configuration__Group_10__4()
		+void rule__Configuration__Group_10__4__Impl()
		+void rule__Configuration__Group_10_3__0()
		+void rule__Configuration__Group_10_3__0__Impl()
		+void rule__Configuration__Group_10_3__1()
		+void rule__Configuration__Group_10_3__1__Impl()
		+void rule__CompType__Group__0()
		+void rule__CompType__Group__0__Impl()
		+void rule__CompType__Group__1()
		+void rule__CompType__Group__1__Impl()
		+void rule__CompType__Group__2()
		+void rule__CompType__Group__2__Impl()
		+void rule__CompType__Group__3()
		+void rule__CompType__Group__3__Impl()
		+void rule__CompType__Group__4()
		+void rule__CompType__Group__4__Impl()
		+void rule__CompType__Group__5()
		+void rule__CompType__Group__5__Impl()
		+void rule__CompType__Group__6()
		+void rule__CompType__Group__6__Impl()
		+void rule__CompType__Group_4__0()
		+void rule__CompType__Group_4__0__Impl()
		+void rule__CompType__Group_4__1()
		+void rule__CompType__Group_4__1__Impl()
		+void rule__CompType__Group_4__2()
		+void rule__CompType__Group_4__2__Impl()
		+void rule__CompType__Group_4_2__0()
		+void rule__CompType__Group_4_2__0__Impl()
		+void rule__CompType__Group_4_2__1()
		+void rule__CompType__Group_4_2__1__Impl()
		+void rule__CompType__Group_5__0()
		+void rule__CompType__Group_5__0__Impl()
		+void rule__CompType__Group_5__1()
		+void rule__CompType__Group_5__1__Impl()
		+void rule__CompType__Group_5__2()
		+void rule__CompType__Group_5__2__Impl()
		+void rule__CompType__Group_5_2__0()
		+void rule__CompType__Group_5_2__0__Impl()
		+void rule__CompType__Group_5_2__1()
		+void rule__CompType__Group_5_2__1__Impl()
		+void rule__CompType__Group_6__0()
		+void rule__CompType__Group_6__0__Impl()
		+void rule__CompType__Group_6__1()
		+void rule__CompType__Group_6__1__Impl()
		+void rule__CompType__Group_6__2()
		+void rule__CompType__Group_6__2__Impl()
		+void rule__CompType__Group_6_2__0()
		+void rule__CompType__Group_6_2__0__Impl()
		+void rule__CompType__Group_6_2__1()
		+void rule__CompType__Group_6_2__1__Impl()
		+void rule__CompClass_Impl__Group__0()
		+void rule__CompClass_Impl__Group__0__Impl()
		+void rule__CompClass_Impl__Group__1()
		+void rule__CompClass_Impl__Group__1__Impl()
		+void rule__CompClass_Impl__Group__2()
		+void rule__CompClass_Impl__Group__2__Impl()
		+void rule__CompClass_Impl__Group__3()
		+void rule__CompClass_Impl__Group__3__Impl()
		+void rule__CompClass_Impl__Group__4()
		+void rule__CompClass_Impl__Group__4__Impl()
		+void rule__CompClass_Impl__Group__5()
		+void rule__CompClass_Impl__Group__5__Impl()
		+void rule__CompClass_Impl__Group__6()
		+void rule__CompClass_Impl__Group__6__Impl()
		+void rule__CompClass_Impl__Group__7()
		+void rule__CompClass_Impl__Group__7__Impl()
		+void rule__CompClass_Impl__Group__8()
		+void rule__CompClass_Impl__Group__8__Impl()
		+void rule__CompClass_Impl__Group__9()
		+void rule__CompClass_Impl__Group__9__Impl()
		+void rule__CompClass_Impl__Group__10()
		+void rule__CompClass_Impl__Group__10__Impl()
		+void rule__CompClass_Impl__Group__11()
		+void rule__CompClass_Impl__Group__11__Impl()
		+void rule__CompClass_Impl__Group_2__0()
		+void rule__CompClass_Impl__Group_2__0__Impl()
		+void rule__CompClass_Impl__Group_2__1()
		+void rule__CompClass_Impl__Group_2__1__Impl()
		+void rule__CompClass_Impl__Group_2__2()
		+void rule__CompClass_Impl__Group_2__2__Impl()
		+void rule__CompClass_Impl__Group_2_2__0()
		+void rule__CompClass_Impl__Group_2_2__0__Impl()
		+void rule__CompClass_Impl__Group_2_2__1()
		+void rule__CompClass_Impl__Group_2_2__1__Impl()
		+void rule__CompClass_Impl__Group_7__0()
		+void rule__CompClass_Impl__Group_7__0__Impl()
		+void rule__CompClass_Impl__Group_7__1()
		+void rule__CompClass_Impl__Group_7__1__Impl()
		+void rule__CompClass_Impl__Group_8__0()
		+void rule__CompClass_Impl__Group_8__0__Impl()
		+void rule__CompClass_Impl__Group_8__1()
		+void rule__CompClass_Impl__Group_8__1__Impl()
		+void rule__CompClass_Impl__Group_8__2()
		+void rule__CompClass_Impl__Group_8__2__Impl()
		+void rule__CompClass_Impl__Group_8__3()
		+void rule__CompClass_Impl__Group_8__3__Impl()
		+void rule__CompClass_Impl__Group_8__4()
		+void rule__CompClass_Impl__Group_8__4__Impl()
		+void rule__CompClass_Impl__Group_8_3__0()
		+void rule__CompClass_Impl__Group_8_3__0__Impl()
		+void rule__CompClass_Impl__Group_8_3__1()
		+void rule__CompClass_Impl__Group_8_3__1__Impl()
		+void rule__CompClass_Impl__Group_9__0()
		+void rule__CompClass_Impl__Group_9__0__Impl()
		+void rule__CompClass_Impl__Group_9__1()
		+void rule__CompClass_Impl__Group_9__1__Impl()
		+void rule__CompClass_Impl__Group_10__0()
		+void rule__CompClass_Impl__Group_10__0__Impl()
		+void rule__CompClass_Impl__Group_10__1()
		+void rule__CompClass_Impl__Group_10__1__Impl()
		+void rule__CompClass_Impl__Group_11__0()
		+void rule__CompClass_Impl__Group_11__0__Impl()
		+void rule__CompClass_Impl__Group_11__1()
		+void rule__CompClass_Impl__Group_11__1__Impl()
		+void rule__CompClass_Impl__Group_11__2()
		+void rule__CompClass_Impl__Group_11__2__Impl()
		+void rule__CompClass_Impl__Group_11_2__0()
		+void rule__CompClass_Impl__Group_11_2__0__Impl()
		+void rule__CompClass_Impl__Group_11_2__1()
		+void rule__CompClass_Impl__Group_11_2__1__Impl()
		+void rule__Attribute__Group__0()
		+void rule__Attribute__Group__0__Impl()
		+void rule__Attribute__Group__1()
		+void rule__Attribute__Group__1__Impl()
		+void rule__CompositeCompClass__Group__0()
		+void rule__CompositeCompClass__Group__0__Impl()
		+void rule__CompositeCompClass__Group__1()
		+void rule__CompositeCompClass__Group__1__Impl()
		+void rule__CompositeCompClass__Group__2()
		+void rule__CompositeCompClass__Group__2__Impl()
		+void rule__CompositeCompClass__Group__3()
		+void rule__CompositeCompClass__Group__3__Impl()
		+void rule__CompositeCompClass__Group__4()
		+void rule__CompositeCompClass__Group__4__Impl()
		+void rule__CompositeCompClass__Group__5()
		+void rule__CompositeCompClass__Group__5__Impl()
		+void rule__CompositeCompClass__Group__6()
		+void rule__CompositeCompClass__Group__6__Impl()
		+void rule__CompositeCompClass__Group__7()
		+void rule__CompositeCompClass__Group__7__Impl()
		+void rule__CompositeCompClass__Group__8()
		+void rule__CompositeCompClass__Group__8__Impl()
		+void rule__CompositeCompClass__Group__9()
		+void rule__CompositeCompClass__Group__9__Impl()
		+void rule__CompositeCompClass__Group__10()
		+void rule__CompositeCompClass__Group__10__Impl()
		+void rule__CompositeCompClass__Group__11()
		+void rule__CompositeCompClass__Group__11__Impl()
		+void rule__CompositeCompClass__Group__12()
		+void rule__CompositeCompClass__Group__12__Impl()
		+void rule__CompositeCompClass__Group__13()
		+void rule__CompositeCompClass__Group__13__Impl()
		+void rule__CompositeCompClass__Group_6__0()
		+void rule__CompositeCompClass__Group_6__0__Impl()
		+void rule__CompositeCompClass__Group_6__1()
		+void rule__CompositeCompClass__Group_6__1__Impl()
		+void rule__CompositeCompClass__Group_6__2()
		+void rule__CompositeCompClass__Group_6__2__Impl()
		+void rule__CompositeCompClass__Group_6_2__0()
		+void rule__CompositeCompClass__Group_6_2__0__Impl()
		+void rule__CompositeCompClass__Group_6_2__1()
		+void rule__CompositeCompClass__Group_6_2__1__Impl()
		+void rule__CompositeCompClass__Group_6_2__2()
		+void rule__CompositeCompClass__Group_6_2__2__Impl()
		+void rule__CompositeCompClass__Group_7__0()
		+void rule__CompositeCompClass__Group_7__0__Impl()
		+void rule__CompositeCompClass__Group_7__1()
		+void rule__CompositeCompClass__Group_7__1__Impl()
		+void rule__CompositeCompClass__Group_8__0()
		+void rule__CompositeCompClass__Group_8__0__Impl()
		+void rule__CompositeCompClass__Group_8__1()
		+void rule__CompositeCompClass__Group_8__1__Impl()
		+void rule__CompositeCompClass__Group_8__2()
		+void rule__CompositeCompClass__Group_8__2__Impl()
		+void rule__CompositeCompClass__Group_8__3()
		+void rule__CompositeCompClass__Group_8__3__Impl()
		+void rule__CompositeCompClass__Group_8__4()
		+void rule__CompositeCompClass__Group_8__4__Impl()
		+void rule__CompositeCompClass__Group_8_3__0()
		+void rule__CompositeCompClass__Group_8_3__0__Impl()
		+void rule__CompositeCompClass__Group_8_3__1()
		+void rule__CompositeCompClass__Group_8_3__1__Impl()
		+void rule__CompositeCompClass__Group_9__0()
		+void rule__CompositeCompClass__Group_9__0__Impl()
		+void rule__CompositeCompClass__Group_9__1()
		+void rule__CompositeCompClass__Group_9__1__Impl()
		+void rule__CompositeCompClass__Group_10__0()
		+void rule__CompositeCompClass__Group_10__0__Impl()
		+void rule__CompositeCompClass__Group_10__1()
		+void rule__CompositeCompClass__Group_10__1__Impl()
		+void rule__CompositeCompClass__Group_11__0()
		+void rule__CompositeCompClass__Group_11__0__Impl()
		+void rule__CompositeCompClass__Group_11__1()
		+void rule__CompositeCompClass__Group_11__1__Impl()
		+void rule__CompositeCompClass__Group_11__2()
		+void rule__CompositeCompClass__Group_11__2__Impl()
		+void rule__CompositeCompClass__Group_11__3()
		+void rule__CompositeCompClass__Group_11__3__Impl()
		+void rule__CompositeCompClass__Group_11__4()
		+void rule__CompositeCompClass__Group_11__4__Impl()
		+void rule__CompositeCompClass__Group_11_3__0()
		+void rule__CompositeCompClass__Group_11_3__0__Impl()
		+void rule__CompositeCompClass__Group_11_3__1()
		+void rule__CompositeCompClass__Group_11_3__1__Impl()
		+void rule__CompositeCompClass__Group_12__0()
		+void rule__CompositeCompClass__Group_12__0__Impl()
		+void rule__CompositeCompClass__Group_12__1()
		+void rule__CompositeCompClass__Group_12__1__Impl()
		+void rule__CompositeCompClass__Group_12__2()
		+void rule__CompositeCompClass__Group_12__2__Impl()
		+void rule__CompositeCompClass__Group_12_2__0()
		+void rule__CompositeCompClass__Group_12_2__0__Impl()
		+void rule__CompositeCompClass__Group_12_2__1()
		+void rule__CompositeCompClass__Group_12_2__1__Impl()
		+void rule__CompositeCompClass__Group_13__0()
		+void rule__CompositeCompClass__Group_13__0__Impl()
		+void rule__CompositeCompClass__Group_13__1()
		+void rule__CompositeCompClass__Group_13__1__Impl()
		+void rule__CompositeCompClass__Group_13__2()
		+void rule__CompositeCompClass__Group_13__2__Impl()
		+void rule__CompositeCompClass__Group_13_2__0()
		+void rule__CompositeCompClass__Group_13_2__0__Impl()
		+void rule__CompositeCompClass__Group_13_2__1()
		+void rule__CompositeCompClass__Group_13_2__1__Impl()
		+void rule__Delegated_interface_list__Group_1__0()
		+void rule__Delegated_interface_list__Group_1__0__Impl()
		+void rule__Delegated_interface_list__Group_1__1()
		+void rule__Delegated_interface_list__Group_1__1__Impl()
		+void rule__Delegated_interface_list__Group_1__2()
		+void rule__Delegated_interface_list__Group_1__2__Impl()
		+void rule__Delegated_interface_list__Group_1__3()
		+void rule__Delegated_interface_list__Group_1__3__Impl()
		+void rule__Delegated_interface_list__Group_1__4()
		+void rule__Delegated_interface_list__Group_1__4__Impl()
		+void rule__Delegated_interface_list__Group_1_4_0__0()
		+void rule__Delegated_interface_list__Group_1_4_0__0__Impl()
		+void rule__Delegated_interface_list__Group_1_4_0__1()
		+void rule__Delegated_interface_list__Group_1_4_0__1__Impl()
		+void rule__Delegated_interface_list__Group_1_4_1__0()
		+void rule__Delegated_interface_list__Group_1_4_1__0__Impl()
		+void rule__Delegated_interface_list__Group_1_4_1__1()
		+void rule__Delegated_interface_list__Group_1_4_1__1__Impl()
		+void rule__Delegated_interface_list__Group_1_4_1__2()
		+void rule__Delegated_interface_list__Group_1_4_1__2__Impl()
		+void rule__Delegated_interface_list__Group_1_4_1__3()
		+void rule__Delegated_interface_list__Group_1_4_1__3__Impl()
		+void rule__Inner_interface__Group__0()
		+void rule__Inner_interface__Group__0__Impl()
		+void rule__Inner_interface__Group__1()
		+void rule__Inner_interface__Group__1__Impl()
		+void rule__Inner_interface__Group__2()
		+void rule__Inner_interface__Group__2__Impl()
		+void rule__Inner_interface__Group__3()
		+void rule__Inner_interface__Group__3__Impl()
		+void rule__Inner_interface__Group__4()
		+void rule__Inner_interface__Group__4__Impl()
		+void rule__Inner_interface__Group__5()
		+void rule__Inner_interface__Group__5__Impl()
		+void rule__Outer_interface__Group__0()
		+void rule__Outer_interface__Group__0__Impl()
		+void rule__Outer_interface__Group__1()
		+void rule__Outer_interface__Group__1__Impl()
		+void rule__Outer_interface__Group__2()
		+void rule__Outer_interface__Group__2__Impl()
		+void rule__Component_class_identifier__Group__0()
		+void rule__Component_class_identifier__Group__0__Impl()
		+void rule__Component_class_identifier__Group__1()
		+void rule__Component_class_identifier__Group__1__Impl()
		+void rule__Component_class_identifier__Group_1__0()
		+void rule__Component_class_identifier__Group_1__0__Impl()
		+void rule__Component_class_identifier__Group_1__1()
		+void rule__Component_class_identifier__Group_1__1__Impl()
		+void rule__Component_class_identifier__Group_1__2()
		+void rule__Component_class_identifier__Group_1__2__Impl()
		+void rule__Connector_type__Group__0()
		+void rule__Connector_type__Group__0__Impl()
		+void rule__Connector_type__Group__1()
		+void rule__Connector_type__Group__1__Impl()
		+void rule__Connector_type__Group__2()
		+void rule__Connector_type__Group__2__Impl()
		+void rule__Connector_type__Group__3()
		+void rule__Connector_type__Group__3__Impl()
		+void rule__Connector_type__Group__4()
		+void rule__Connector_type__Group__4__Impl()
		+void rule__Connector_type__Group__5()
		+void rule__Connector_type__Group__5__Impl()
		+void rule__Connector_type__Group__6()
		+void rule__Connector_type__Group__6__Impl()
		+void rule__Connector_type__Group__7()
		+void rule__Connector_type__Group__7__Impl()
		+void rule__Connector_type__Group_4__0()
		+void rule__Connector_type__Group_4__0__Impl()
		+void rule__Connector_type__Group_4__1()
		+void rule__Connector_type__Group_4__1__Impl()
		+void rule__Connector_type__Group_7__0()
		+void rule__Connector_type__Group_7__0__Impl()
		+void rule__Connector_type__Group_7__1()
		+void rule__Connector_type__Group_7__1__Impl()
		+void rule__Connector_class__Group__0()
		+void rule__Connector_class__Group__0__Impl()
		+void rule__Connector_class__Group__1()
		+void rule__Connector_class__Group__1__Impl()
		+void rule__Connector_class__Group__2()
		+void rule__Connector_class__Group__2__Impl()
		+void rule__Connector_class__Group__3()
		+void rule__Connector_class__Group__3__Impl()
		+void rule__ClassConnection__Group__0()
		+void rule__ClassConnection__Group__0__Impl()
		+void rule__ClassConnection__Group__1()
		+void rule__ClassConnection__Group__1__Impl()
		+void rule__ClassConnection__Group__2()
		+void rule__ClassConnection__Group__2__Impl()
		+void rule__ClassConnection__Group__3()
		+void rule__ClassConnection__Group__3__Impl()
		+void rule__ClassConnection__Group__4()
		+void rule__ClassConnection__Group__4__Impl()
		+void rule__ClassConnection__Group__5()
		+void rule__ClassConnection__Group__5__Impl()
		+void rule__ClassConnection__Group__6()
		+void rule__ClassConnection__Group__6__Impl()
		+void rule__ClassConnection__Group__7()
		+void rule__ClassConnection__Group__7__Impl()
		+void rule__ClassConnection__Group__8()
		+void rule__ClassConnection__Group__8__Impl()
		+void rule__ClassConnection__Group__9()
		+void rule__ClassConnection__Group__9__Impl()
		+void rule__ClassConnection__Group__10()
		+void rule__ClassConnection__Group__10__Impl()
		+void rule__ClassConnection__Group__11()
		+void rule__ClassConnection__Group__11__Impl()
		+void rule__Port_Impl__Group__0()
		+void rule__Port_Impl__Group__0__Impl()
		+void rule__Port_Impl__Group__1()
		+void rule__Port_Impl__Group__1__Impl()
		+void rule__Port_Impl__Group__2()
		+void rule__Port_Impl__Group__2__Impl()
		+void rule__Port_Impl__Group__3()
		+void rule__Port_Impl__Group__3__Impl()
		+void rule__Port_Impl__Group__4()
		+void rule__Port_Impl__Group__4__Impl()
		+void rule__Port_Impl__Group__5()
		+void rule__Port_Impl__Group__5__Impl()
		+void rule__Port_Impl__Group__6()
		+void rule__Port_Impl__Group__6__Impl()
		+void rule__Port_Impl__Group_5__0()
		+void rule__Port_Impl__Group_5__0__Impl()
		+void rule__Port_Impl__Group_5__1()
		+void rule__Port_Impl__Group_5__1__Impl()
		+void rule__CompositePort__Group__0()
		+void rule__CompositePort__Group__0__Impl()
		+void rule__CompositePort__Group__1()
		+void rule__CompositePort__Group__1__Impl()
		+void rule__CompositePort__Group__2()
		+void rule__CompositePort__Group__2__Impl()
		+void rule__CompositePort__Group__3()
		+void rule__CompositePort__Group__3__Impl()
		+void rule__CompositePort__Group__4()
		+void rule__CompositePort__Group__4__Impl()
		+void rule__CompositePort__Group__5()
		+void rule__CompositePort__Group__5__Impl()
		+void rule__CompositePort__Group__6()
		+void rule__CompositePort__Group__6__Impl()
		+void rule__CompositePort__Group_5__0()
		+void rule__CompositePort__Group_5__0__Impl()
		+void rule__CompositePort__Group_5__1()
		+void rule__CompositePort__Group_5__1__Impl()
		+void rule__Assembly__Group__0()
		+void rule__Assembly__Group__0__Impl()
		+void rule__Assembly__Group__1()
		+void rule__Assembly__Group__1__Impl()
		+void rule__Assembly__Group__2()
		+void rule__Assembly__Group__2__Impl()
		+void rule__Assembly__Group__3()
		+void rule__Assembly__Group__3__Impl()
		+void rule__Assembly__Group__4()
		+void rule__Assembly__Group__4__Impl()
		+void rule__Assembly__Group__5()
		+void rule__Assembly__Group__5__Impl()
		+void rule__Assembly__Group__6()
		+void rule__Assembly__Group__6__Impl()
		+void rule__Assembly__Group__7()
		+void rule__Assembly__Group__7__Impl()
		+void rule__Assembly__Group__8()
		+void rule__Assembly__Group__8__Impl()
		+void rule__Assembly__Group__9()
		+void rule__Assembly__Group__9__Impl()
		+void rule__Assembly__Group__10()
		+void rule__Assembly__Group__10__Impl()
		+void rule__Assembly__Group__11()
		+void rule__Assembly__Group__11__Impl()
		+void rule__Assembly__Group__12()
		+void rule__Assembly__Group__12__Impl()
		+void rule__Assembly__Group__13()
		+void rule__Assembly__Group__13__Impl()
		+void rule__Assembly__Group__14()
		+void rule__Assembly__Group__14__Impl()
		+void rule__Assembly__Group__15()
		+void rule__Assembly__Group__15__Impl()
		+void rule__Assembly__Group_4__0()
		+void rule__Assembly__Group_4__0__Impl()
		+void rule__Assembly__Group_4__1()
		+void rule__Assembly__Group_4__1__Impl()
		+void rule__Assembly__Group_4__2()
		+void rule__Assembly__Group_4__2__Impl()
		+void rule__Assembly__Group_5__0()
		+void rule__Assembly__Group_5__0__Impl()
		+void rule__Assembly__Group_5__1()
		+void rule__Assembly__Group_5__1__Impl()
		+void rule__Assembly__Group_9__0()
		+void rule__Assembly__Group_9__0__Impl()
		+void rule__Assembly__Group_9__1()
		+void rule__Assembly__Group_9__1__Impl()
		+void rule__Assembly__Group_11__0()
		+void rule__Assembly__Group_11__0__Impl()
		+void rule__Assembly__Group_11__1()
		+void rule__Assembly__Group_11__1__Impl()
		+void rule__Assembly__Group_11__2()
		+void rule__Assembly__Group_11__2__Impl()
		+void rule__Assembly__Group_11__3()
		+void rule__Assembly__Group_11__3__Impl()
		+void rule__Assembly__Group_11__4()
		+void rule__Assembly__Group_11__4__Impl()
		+void rule__Assembly__Group_11_3__0()
		+void rule__Assembly__Group_11_3__0__Impl()
		+void rule__Assembly__Group_11_3__1()
		+void rule__Assembly__Group_11_3__1__Impl()
		+void rule__Assembly__Group_12__0()
		+void rule__Assembly__Group_12__0__Impl()
		+void rule__Assembly__Group_12__1()
		+void rule__Assembly__Group_12__1__Impl()
		+void rule__Assembly__Group_13__0()
		+void rule__Assembly__Group_13__0__Impl()
		+void rule__Assembly__Group_13__1()
		+void rule__Assembly__Group_13__1__Impl()
		+void rule__Assembly__Group_14__0()
		+void rule__Assembly__Group_14__0__Impl()
		+void rule__Assembly__Group_14__1()
		+void rule__Assembly__Group_14__1__Impl()
		+void rule__Assembly__Group_14__2()
		+void rule__Assembly__Group_14__2__Impl()
		+void rule__Assembly__Group_14__3()
		+void rule__Assembly__Group_14__3__Impl()
		+void rule__Assembly__Group_14__4()
		+void rule__Assembly__Group_14__4__Impl()
		+void rule__Assembly__Group_14_3__0()
		+void rule__Assembly__Group_14_3__0__Impl()
		+void rule__Assembly__Group_14_3__1()
		+void rule__Assembly__Group_14_3__1__Impl()
		+void rule__Assembly__Group_15__0()
		+void rule__Assembly__Group_15__0__Impl()
		+void rule__Assembly__Group_15__1()
		+void rule__Assembly__Group_15__1__Impl()
		+void rule__Assembly__Group_15__2()
		+void rule__Assembly__Group_15__2__Impl()
		+void rule__Assembly__Group_15__3()
		+void rule__Assembly__Group_15__3__Impl()
		+void rule__Assembly__Group_15__4()
		+void rule__Assembly__Group_15__4__Impl()
		+void rule__Assembly__Group_15_3__0()
		+void rule__Assembly__Group_15_3__0__Impl()
		+void rule__Assembly__Group_15_3__1()
		+void rule__Assembly__Group_15_3__1__Impl()
		+void rule__Constraint__Group__0()
		+void rule__Constraint__Group__0__Impl()
		+void rule__Constraint__Group__1()
		+void rule__Constraint__Group__1__Impl()
		+void rule__CompInstance__Group__0()
		+void rule__CompInstance__Group__0__Impl()
		+void rule__CompInstance__Group__1()
		+void rule__CompInstance__Group__1__Impl()
		+void rule__CompInstance__Group__2()
		+void rule__CompInstance__Group__2__Impl()
		+void rule__CompInstance__Group__3()
		+void rule__CompInstance__Group__3__Impl()
		+void rule__CompInstance__Group__4()
		+void rule__CompInstance__Group__4__Impl()
		+void rule__CompInstance__Group__5()
		+void rule__CompInstance__Group__5__Impl()
		+void rule__CompInstance__Group__6()
		+void rule__CompInstance__Group__6__Impl()
		+void rule__CompInstance__Group__7()
		+void rule__CompInstance__Group__7__Impl()
		+void rule__CompInstance__Group_2__0()
		+void rule__CompInstance__Group_2__0__Impl()
		+void rule__CompInstance__Group_2__1()
		+void rule__CompInstance__Group_2__1__Impl()
		+void rule__CompInstance__Group_7__0()
		+void rule__CompInstance__Group_7__0__Impl()
		+void rule__CompInstance__Group_7__1()
		+void rule__CompInstance__Group_7__1__Impl()
		+void rule__CompInstance__Group_7__2()
		+void rule__CompInstance__Group_7__2__Impl()
		+void rule__CompInstance__Group_7_2__0()
		+void rule__CompInstance__Group_7_2__0__Impl()
		+void rule__CompInstance__Group_7_2__1()
		+void rule__CompInstance__Group_7_2__1__Impl()
		+void rule__InstConnection__Group__0()
		+void rule__InstConnection__Group__0__Impl()
		+void rule__InstConnection__Group__1()
		+void rule__InstConnection__Group__1__Impl()
		+void rule__InstConnection__Group__2()
		+void rule__InstConnection__Group__2__Impl()
		+void rule__InstConnection__Group__3()
		+void rule__InstConnection__Group__3__Impl()
		+void rule__InstConnection__Group__4()
		+void rule__InstConnection__Group__4__Impl()
		+void rule__InstConnection__Group__5()
		+void rule__InstConnection__Group__5__Impl()
		+void rule__InstConnection__Group__6()
		+void rule__InstConnection__Group__6__Impl()
		+void rule__InstConnection__Group__7()
		+void rule__InstConnection__Group__7__Impl()
		+void rule__InstConnection__Group__8()
		+void rule__InstConnection__Group__8__Impl()
		+void rule__InstConnection__Group__9()
		+void rule__InstConnection__Group__9__Impl()
		+void rule__Constraint_expression__Group_0__0()
		+void rule__Constraint_expression__Group_0__0__Impl()
		+void rule__Constraint_expression__Group_0__1()
		+void rule__Constraint_expression__Group_0__1__Impl()
		+void rule__Constraint_expression__Group_0__2()
		+void rule__Constraint_expression__Group_0__2__Impl()
		+void rule__Constraint_expression__Group_1__0()
		+void rule__Constraint_expression__Group_1__0__Impl()
		+void rule__Constraint_expression__Group_1__1()
		+void rule__Constraint_expression__Group_1__1__Impl()
		+void rule__Logical_constraint__Group_0__0()
		+void rule__Logical_constraint__Group_0__0__Impl()
		+void rule__Logical_constraint__Group_0__1()
		+void rule__Logical_constraint__Group_0__1__Impl()
		+void rule__Logical_constraint__Group_0__2()
		+void rule__Logical_constraint__Group_0__2__Impl()
		+void rule__Logical_constraint__Group_1__0()
		+void rule__Logical_constraint__Group_1__0__Impl()
		+void rule__Logical_constraint__Group_1__1()
		+void rule__Logical_constraint__Group_1__1__Impl()
		+void rule__Logical_constraint__Group_1__2()
		+void rule__Logical_constraint__Group_1__2__Impl()
		+void rule__Relational_constraint__Group__0()
		+void rule__Relational_constraint__Group__0__Impl()
		+void rule__Relational_constraint__Group__1()
		+void rule__Relational_constraint__Group__1__Impl()
		+void rule__Relational_constraint__Group__2()
		+void rule__Relational_constraint__Group__2__Impl()
		+void rule__Instance_attribute__Group__0()
		+void rule__Instance_attribute__Group__0__Impl()
		+void rule__Instance_attribute__Group__1()
		+void rule__Instance_attribute__Group__1__Impl()
		+void rule__Instance_attribute__Group__2()
		+void rule__Instance_attribute__Group__2__Impl()
		+void rule__Attribute_value__Group__0()
		+void rule__Attribute_value__Group__0__Impl()
		+void rule__Attribute_value__Group__1()
		+void rule__Attribute_value__Group__1__Impl()
		+void rule__Version__Group__0()
		+void rule__Version__Group__0__Impl()
		+void rule__Version__Group__1()
		+void rule__Version__Group__1__Impl()
		+void rule__Version__Group__2()
		+void rule__Version__Group__2__Impl()
		+void rule__Version__Group__3()
		+void rule__Version__Group__3__Impl()
		+void rule__Pre_version__Group__0()
		+void rule__Pre_version__Group__0__Impl()
		+void rule__Pre_version__Group__1()
		+void rule__Pre_version__Group__1__Impl()
		+void rule__Pre_version__Group__2()
		+void rule__Pre_version__Group__2__Impl()
		+void rule__Pre_version__Group__3()
		+void rule__Pre_version__Group__3__Impl()
		+void rule__Change__Group__0()
		+void rule__Change__Group__0__Impl()
		+void rule__Change__Group__1()
		+void rule__Change__Group__1__Impl()
		+void rule__Change__Group__2()
		+void rule__Change__Group__2__Impl()
		+void rule__Change__Group__3()
		+void rule__Change__Group__3__Impl()
		+void rule__Change__Group__4()
		+void rule__Change__Group__4__Impl()
		+void rule__Change__Group__5()
		+void rule__Change__Group__5__Impl()
		+void rule__Change__Group__6()
		+void rule__Change__Group__6__Impl()
		+void rule__Change__Group__7()
		+void rule__Change__Group__7__Impl()
		+void rule__Change__Group__8()
		+void rule__Change__Group__8__Impl()
		+void rule__Change__Group__9()
		+void rule__Change__Group__9__Impl()
		+void rule__Change__Group__10()
		+void rule__Change__Group__10__Impl()
		+void rule__Change__Group__11()
		+void rule__Change__Group__11__Impl()
		+void rule__Change__Group__12()
		+void rule__Change__Group__12__Impl()
		+void rule__Change__Group__13()
		+void rule__Change__Group__13__Impl()
		+void rule__Change__Group__14()
		+void rule__Change__Group__14__Impl()
		+void rule__Change__Group__15()
		+void rule__Change__Group__15__Impl()
		+void rule__Change__Group__16()
		+void rule__Change__Group__16__Impl()
		+void rule__Change__Group_16__0()
		+void rule__Change__Group_16__0__Impl()
		+void rule__Change__Group_16__1()
		+void rule__Change__Group_16__1__Impl()
		+void rule__DedalDiagram__NameAssignment_1()
		+void rule__DedalDiagram__ArchitectureDescriptionsAssignment_2_0_2()
		+void rule__DedalDiagram__ArchitectureDescriptionsAssignment_2_0_3_1()
		+void rule__DedalDiagram__RepositoriesAssignment_2_1_2()
		+void rule__DedalDiagram__RepositoriesAssignment_2_1_3_1()
		+void rule__Repository__NameAssignment_1()
		+void rule__Repository__ComponentsAssignment_2_2()
		+void rule__Repository__ComponentsAssignment_2_3_1()
		+void rule__Repository__InterfaceTypesAssignment_3_2()
		+void rule__Repository__InterfaceTypesAssignment_3_3_1()
		+void rule__InterfaceType__NameAssignment_1()
		+void rule__InterfaceType__SignaturesAssignment_4()
		+void rule__InterfaceType__SignaturesAssignment_5_1()
		+void rule__Signature__IdAssignment_1()
		+void rule__Signature__NameAssignment_2_1()
		+void rule__Signature__TypeAssignment_3_1()
		+void rule__Signature__ParametersAssignment_4_2()
		+void rule__Signature__ParametersAssignment_4_3_1()
		+void rule__Parameter__IdAssignment_1()
		+void rule__Parameter__NameAssignment_2_1()
		+void rule__Parameter__TypeAssignment_3_1()
		+void rule__Specification__NameAssignment_1()
		+void rule__Specification__SpecComponentsAssignment_3()
		+void rule__Specification__SpecComponentsAssignment_4_1()
		+void rule__Specification__SpecConnectionsAssignment_5_1()
		+void rule__Specification__SpecConnectionsAssignment_5_2()
		+void rule__Specification__InterfaceTypesAssignment_9_1()
		+void rule__Specification__InterfaceTypesAssignment_9_2_1()
		+void rule__CompRole__NameAssignment_1()
		+void rule__CompRole__IdAssignment_3()
		+void rule__CompRole__CompInterfacesAssignment_4_1()
		+void rule__CompRole__CompInterfacesAssignment_4_2_1()
		+void rule__CompRole__CompInterfacesAssignment_5_1()
		+void rule__CompRole__CompInterfacesAssignment_5_2_1()
		+void rule__CompRole__MinInstanceNbrAssignment_6_1()
		+void rule__CompRole__MaxInstanceNbrAssignment_7_1()
		+void rule__CompRole__CompInterfacesAssignment_8_1()
		+void rule__CompRole__CompInterfacesAssignment_8_2_1()
		+void rule__Interface__NameAssignment_1()
		+void rule__Interface__DirectionAssignment_3()
		+void rule__Interface__TypeAssignment_5()
		+void rule__Interface__DelegationAssignment_6_1()
		+void rule__Interface__InstantiatesAssignment_7_1()
		+void rule__RoleConnection__RefIDAssignment_1()
		+void rule__RoleConnection__ClientCompElemAssignment_3()
		+void rule__RoleConnection__ClientIntElemAssignment_5()
		+void rule__RoleConnection__ServerCompElemAssignment_7()
		+void rule__RoleConnection__ServerIntElemAssignment_9()
		+void rule__Configuration__NameAssignment_1()
		+void rule__Configuration__ImplementsAssignment_2_1()
		+void rule__Configuration__ImplementsAssignment_2_3_1()
		+void rule__Configuration__ConfigComponentsAssignment_6_1()
		+void rule__Configuration__ConfigComponentsAssignment_6_2_1()
		+void rule__Configuration__InterfaceTypesAssignment_8_2()
		+void rule__Configuration__InterfaceTypesAssignment_8_3_1()
		+void rule__Configuration__ComptypesAssignment_9_2()
		+void rule__Configuration__ComptypesAssignment_9_3_1()
		+void rule__Configuration__ConfigConnectionsAssignment_10_2()
		+void rule__Configuration__ConfigConnectionsAssignment_10_3_1()
		+void rule__CompType__NameAssignment_1()
		+void rule__CompType__IdAssignment_3()
		+void rule__CompType__CompInterfacesAssignment_4_1()
		+void rule__CompType__CompInterfacesAssignment_4_2_1()
		+void rule__CompType__CompInterfacesAssignment_5_1()
		+void rule__CompType__CompInterfacesAssignment_5_2_1()
		+void rule__CompType__CompInterfacesAssignment_6_1()
		+void rule__CompType__CompInterfacesAssignment_6_2_1()
		+void rule__CompClass_Impl__NameAssignment_1()
		+void rule__CompClass_Impl__RealizesAssignment_2_1()
		+void rule__CompClass_Impl__RealizesAssignment_2_2_1()
		+void rule__CompClass_Impl__IdAssignment_4()
		+void rule__CompClass_Impl__ImplementsAssignment_6()
		+void rule__CompClass_Impl__ContentAssignment_7_1()
		+void rule__CompClass_Impl__AttributesAssignment_8_2()
		+void rule__CompClass_Impl__AttributesAssignment_8_3_1()
		+void rule__CompClass_Impl__CompInterfacesAssignment_11_1()
		+void rule__CompClass_Impl__CompInterfacesAssignment_11_2_1()
		+void rule__Attribute__TypeAssignment_0()
		+void rule__Attribute__NameAssignment_1()
		+void rule__CompositeCompClass__NameAssignment_1()
		+void rule__CompositeCompClass__IdAssignment_3()
		+void rule__CompositeCompClass__ImplementsAssignment_5()
		+void rule__CompositeCompClass__UsesAssignment_6_1()
		+void rule__CompositeCompClass__AttributesAssignment_8_2()
		+void rule__CompositeCompClass__AttributesAssignment_8_3_1()
		+void rule__CompositeCompClass__RealizesAssignment_11_2()
		+void rule__CompositeCompClass__RealizesAssignment_11_3_1()
		+void rule__CompositeCompClass__CompInterfacesAssignment_12_1()
		+void rule__CompositeCompClass__CompInterfacesAssignment_12_2_1()
		+void rule__CompositeCompClass__DelegatedInterfacesAssignment_13_1()
		+void rule__CompositeCompClass__DelegatedInterfacesAssignment_13_2_1()
		+void rule__ClassConnection__RefIDAssignment_1()
		+void rule__ClassConnection__PropertyAssignment_3()
		+void rule__ClassConnection__ClientClassElemAssignment_5()
		+void rule__ClassConnection__ClientIntElemAssignment_7()
		+void rule__ClassConnection__ServerClassElemAssignment_9()
		+void rule__ClassConnection__ServerIntElemAssignment_11()
		+void rule__Port_Impl__NameAssignment_1()
		+void rule__Port_Impl__InterfacesAssignment_4()
		+void rule__Port_Impl__InterfacesAssignment_5_1()
		+void rule__CompositePort__NameAssignment_1()
		+void rule__CompositePort__PortsAssignment_4()
		+void rule__CompositePort__PortsAssignment_5_1()
		+void rule__Assembly__NameAssignment_1()
		+void rule__Assembly__InstantiatesAssignment_3()
		+void rule__Assembly__AssmComponentsAssignment_8()
		+void rule__Assembly__AssmComponentsAssignment_9_1()
		+void rule__Assembly__InterfaceTypesAssignment_14_2()
		+void rule__Assembly__InterfaceTypesAssignment_14_3_1()
		+void rule__Assembly__AssemblyConnectionsAssignment_15_2()
		+void rule__Assembly__AssemblyConnectionsAssignment_15_3_1()
		+void rule__CompInstance__NameAssignment_1()
		+void rule__CompInstance__RoleAssignment_2_1()
		+void rule__CompInstance__IdAssignment_4()
		+void rule__CompInstance__InstantiatesAssignment_6()
		+void rule__CompInstance__CompInterfacesAssignment_7_1()
		+void rule__CompInstance__CompInterfacesAssignment_7_2_1()
		+void rule__InstConnection__RefIDAssignment_1()
		+void rule__InstConnection__ClientInstElemAssignment_3()
		+void rule__InstConnection__ClientIntElemAssignment_5()
		+void rule__InstConnection__ServerInstElemAssignment_7()
		+void rule__InstConnection__ServerIntElemAssignment_9()
	}
	class fr.ema.dedal.xtext.ui.contentassist.antlr.internal.FollowSets000 {
		+BitSet FOLLOW_1
		+BitSet FOLLOW_2
		+BitSet FOLLOW_3
		+BitSet FOLLOW_4
		+BitSet FOLLOW_5
		+BitSet FOLLOW_6
		+BitSet FOLLOW_7
		+BitSet FOLLOW_8
		+BitSet FOLLOW_9
		+BitSet FOLLOW_10
		+BitSet FOLLOW_11
		+BitSet FOLLOW_12
		+BitSet FOLLOW_13
		+BitSet FOLLOW_14
		+BitSet FOLLOW_15
		+BitSet FOLLOW_16
		+BitSet FOLLOW_17
		+BitSet FOLLOW_18
		+BitSet FOLLOW_19
		+BitSet FOLLOW_20
		+BitSet FOLLOW_21
		+BitSet FOLLOW_22
		+BitSet FOLLOW_23
		+BitSet FOLLOW_24
		+BitSet FOLLOW_25
		+BitSet FOLLOW_26
		+BitSet FOLLOW_27
		+BitSet FOLLOW_28
		+BitSet FOLLOW_29
		+BitSet FOLLOW_30
		+BitSet FOLLOW_31
		+BitSet FOLLOW_32
		+BitSet FOLLOW_33
		+BitSet FOLLOW_34
		+BitSet FOLLOW_35
		+BitSet FOLLOW_36
		+BitSet FOLLOW_37
		+BitSet FOLLOW_38
		+BitSet FOLLOW_39
		+BitSet FOLLOW_40
		+BitSet FOLLOW_41
		+BitSet FOLLOW_42
		+BitSet FOLLOW_43
		+BitSet FOLLOW_44
		+BitSet FOLLOW_45
		+BitSet FOLLOW_46
		+BitSet FOLLOW_47
		+BitSet FOLLOW_48
		+BitSet FOLLOW_49
		+BitSet FOLLOW_50
		+BitSet FOLLOW_51
		+BitSet FOLLOW_52
		+BitSet FOLLOW_53
		+BitSet FOLLOW_54
		+BitSet FOLLOW_55
		+BitSet FOLLOW_56
		+BitSet FOLLOW_57
		+BitSet FOLLOW_58
		+BitSet FOLLOW_59
		+BitSet FOLLOW_60
		+BitSet FOLLOW_61
		+BitSet FOLLOW_62
		+BitSet FOLLOW_63
		+BitSet FOLLOW_64
		+BitSet FOLLOW_65
		+BitSet FOLLOW_66
		+BitSet FOLLOW_67
		+BitSet FOLLOW_68
		+BitSet FOLLOW_69
		+BitSet FOLLOW_70
		+BitSet FOLLOW_71
		+BitSet FOLLOW_72
		+BitSet FOLLOW_73
		+BitSet FOLLOW_74
		+BitSet FOLLOW_75
		+BitSet FOLLOW_76
		+BitSet FOLLOW_77
		+BitSet FOLLOW_78
		+BitSet FOLLOW_79
		+BitSet FOLLOW_80
		+BitSet FOLLOW_81
		+BitSet FOLLOW_82
		+BitSet FOLLOW_83
		+BitSet FOLLOW_84
		+BitSet FOLLOW_85
		+BitSet FOLLOW_86
		+BitSet FOLLOW_87
		+BitSet FOLLOW_88
	}
}

package fr.ema.dedal.xtext.ui.internal {
	class fr.ema.dedal.xtext.ui.internal.DedalADLActivator {
		+String FR_EMA_DEDAL_XTEXT_DEDALADL
		-Logger logger
		-DedalADLActivator INSTANCE
		-Map<String,Injector> injectors
		+void start(BundleContext)
		+void stop(BundleContext)
		+DedalADLActivator getInstance()
		+Injector getInjector(String)
		#Injector createInjector(String)
		#Module getRuntimeModule(String)
		#Module getUiModule(String)
		#Module getSharedStateModule()
	}
}

package fr.ema.dedal.xtext.ui.labeling {
	class fr.ema.dedal.xtext.ui.labeling.DedalADLDescriptionLabelProvider {
	}
	class fr.ema.dedal.xtext.ui.labeling.DedalADLLabelProvider {
	}
}

package fr.ema.dedal.xtext.ui.outline {
	class fr.ema.dedal.xtext.ui.outline.DedalADLOutlineTreeProvider {
	}
}

package fr.ema.dedal.xtext.ui.quickfix {
	class fr.ema.dedal.xtext.ui.quickfix.DedalADLQuickfixProvider {
	}
}

package fr.ema.dedalstudio {
	class fr.ema.dedalstudio.Application {
		+Object start(IApplicationContext)
		+void stop()
	}
	class fr.ema.dedalstudio.ApplicationWorkbenchAdvisor {
		-String PERSPECTIVE_ID
		+WorkbenchWindowAdvisor createWorkbenchWindowAdvisor(IWorkbenchWindowConfigurer)
		+String getInitialWindowPerspectiveId()
		+void initialize(IWorkbenchConfigurer)
		-void declareWorkbenchImage(IWorkbenchConfigurer, Bundle, String, String, boolean)
		+IAdaptable getDefaultPageInput()
	}
	class fr.ema.dedalstudio.ApplicationWorkbenchWindowAdvisor {
		+ActionBarAdvisor createActionBarAdvisor(IActionBarConfigurer)
		+void preWindowOpen()
	}
	class fr.ema.dedalstudio.Perspective {
		+void createInitialLayout(IPageLayout)
	}
}

package fr.ema.dedalstudio.handlers {
	class fr.ema.dedalstudio.handlers.AboutHandler {
		+void execute(Shell)
	}
	class fr.ema.dedalstudio.handlers.InspektHandler {
		~String defaultPath
		+void execute(Shell)
	}
	class fr.ema.dedalstudio.handlers.NewHandler {
		+void execute(Shell)
	}
	class fr.ema.dedalstudio.handlers.OpenHandler {
		+void execute(Shell)
	}
	class fr.ema.dedalstudio.handlers.QuitHandler {
		+void execute(IWorkbench, Shell)
	}
	class fr.ema.dedalstudio.handlers.SaveHandler {
		+boolean canExecute(EPartService)
		+void execute(EPartService)
	}
}

package fr.ema.dedalstudio.parts {
	class fr.ema.dedalstudio.parts.SamplePart {
		-Text txtInput
		-TableViewer tableViewer
		-MDirtyable dirty
		+void createComposite(Composite)
		+void setFocus()
		+void save()
		-List<String> createInitialDataModel()
	}
}

package java.lang {
	class java.lang.String {
		~java.util.ComparatorCASE_INSENSITIVE_ORDER
		+boolean equals(java.lang.Object arg0)
		+int length()
		+java.lang.String toString()
		+int hashCode()
		+void getChars(int arg0, int arg1, char[] arg2, int arg3)
		+int compareTo(java.lang.String arg0)
		~int compareTo(java.lang.Object arg0)
		+int indexOf(java.lang.String arg0, int arg1)
		+int indexOf(int arg0)
		+int indexOf(int arg0, int arg1)
		+int indexOf(java.lang.String arg0)
		~java.lang.String valueOf(int arg0)
		~java.lang.String valueOf(float arg0)
		~java.lang.String valueOf(boolean arg0)
		~java.lang.String valueOf(long arg0)
		~java.lang.String valueOf(double arg0)
		~java.lang.String valueOf(java.lang.Object arg0)
		~java.lang.String valueOf(char arg0)
		~java.lang.String valueOf(char[] arg0)
		~java.lang.String valueOf(char[] arg0, int arg1, int arg2)
		+java.util.stream.IntStream codePoints()
		+boolean isEmpty()
		+char charAt(int arg0)
		+int codePointAt(int arg0)
		+int codePointBefore(int arg0)
		+int codePointCount(int arg0, int arg1)
		+int offsetByCodePoints(int arg0, int arg1)
		+[B getBytes(java.nio.charset.Charset arg0)
		+void getBytes(int arg0, int arg1, byte[] arg2, int arg3)
		+[B getBytes(java.lang.String arg0)
		+[B getBytes()
		+boolean contentEquals(java.lang.StringBuffer arg0)
		+boolean contentEquals(java.lang.CharSequence arg0)
		+boolean equalsIgnoreCase(java.lang.String arg0)
		+int compareToIgnoreCase(java.lang.String arg0)
		+boolean regionMatches(boolean arg0, int arg1, java.lang.String arg2, int arg3, int arg4)
		+boolean regionMatches(int arg0, java.lang.String arg1, int arg2, int arg3)
		+boolean startsWith(java.lang.String arg0)
		+boolean startsWith(java.lang.String arg0, int arg1)
		+boolean endsWith(java.lang.String arg0)
		+int lastIndexOf(int arg0)
		+int lastIndexOf(java.lang.String arg0, int arg1)
		+int lastIndexOf(java.lang.String arg0)
		+int lastIndexOf(int arg0, int arg1)
		+java.lang.String substring(int arg0, int arg1)
		+java.lang.String substring(int arg0)
		+java.lang.CharSequence subSequence(int arg0, int arg1)
		+java.lang.String concat(java.lang.String arg0)
		+java.lang.String replace(java.lang.CharSequence arg0, java.lang.CharSequence arg1)
		+java.lang.String replace(char arg0, char arg1)
		+boolean matches(java.lang.String arg0)
		+boolean contains(java.lang.CharSequence arg0)
		+java.lang.String replaceFirst(java.lang.String arg0, java.lang.String arg1)
		+java.lang.String replaceAll(java.lang.String arg0, java.lang.String arg1)
		+[Ljava.lang.String; split(java.lang.String arg0)
		+[Ljava.lang.String; split(java.lang.String arg0, int arg1)
		~java.lang.String join(java.lang.CharSequence arg0, java.lang.CharSequence... arg1)
		~java.lang.String join(java.lang.CharSequence arg0, java.lang.Iterable<? extends java.lang.CharSequence> arg1)
		+java.lang.String toLowerCase()
		+java.lang.String toLowerCase(java.util.Locale arg0)
		+java.lang.String toUpperCase(java.util.Locale arg0)
		+java.lang.String toUpperCase()
		+java.lang.String trim()
		+java.lang.String strip()
		+java.lang.String stripLeading()
		+java.lang.String stripTrailing()
		+boolean isBlank()
		+java.util.stream.Stream lines()
		+java.util.stream.IntStream chars()
		+[C toCharArray()
		~java.lang.String format(java.lang.String arg0, java.lang.Object... arg1)
		~java.lang.String format(java.util.Locale arg0, java.lang.String arg1, java.lang.Object... arg2)
		~java.lang.String copyValueOf(char[] arg0, int arg1, int arg2)
		~java.lang.String copyValueOf(char[] arg0)
		~java.lang.String intern()
		+java.lang.String repeat(int arg0)
		~void wait(long arg0)
		~void wait(long arg0, int arg1)
		~void wait()
		~java.lang.Class getClass()
		~void notify()
		~void notifyAll()
	}
	class java.lang.Object {
		~void wait(long arg0)
		~void wait(long arg0, int arg1)
		~void wait()
		+boolean equals(java.lang.Object arg0)
		+java.lang.String toString()
		~int hashCode()
		~java.lang.Class getClass()
		~void notify()
		~void notifyAll()
	}
}

package java.util {
	class java.util.Properties {
		~boolean remove(java.lang.Object arg0, java.lang.Object arg1)
		~java.lang.Object remove(java.lang.Object arg0)
		+java.lang.Object get(java.lang.Object arg0)
		~java.lang.Object put(java.lang.Object arg0, java.lang.Object arg1)
		+java.lang.String getProperty(java.lang.String arg0)
		+java.lang.String getProperty(java.lang.String arg0, java.lang.String arg1)
		~boolean equals(java.lang.Object arg0)
		~java.lang.String toString()
		+java.util.Collection values()
		~int hashCode()
		~java.lang.Object clone()
		~void clear()
		+boolean isEmpty()
		~boolean replace(java.lang.Object arg0, java.lang.Object arg1, java.lang.Object arg2)
		~java.lang.Object replace(java.lang.Object arg0, java.lang.Object arg1)
		+boolean contains(java.lang.Object arg0)
		~void replaceAll(java.util.function.BiFunction<? super java.lang.Object, ? super java.lang.Object, ?> arg0)
		+void list(java.io.PrintStream arg0)
		+void list(java.io.PrintWriter arg0)
		+java.util.Enumeration elements()
		+int size()
		~java.lang.Object merge(java.lang.Object arg0, java.lang.Object arg1, java.util.function.BiFunction<? super java.lang.Object, ? super java.lang.Object, ?> arg2)
		+java.util.Set entrySet()
		~void putAll(java.util.Map<?, ?> arg0)
		~java.lang.Object putIfAbsent(java.lang.Object arg0, java.lang.Object arg1)
		~java.lang.Object compute(java.lang.Object arg0, java.util.function.BiFunction<? super java.lang.Object, ? super java.lang.Object, ?> arg1)
		~java.lang.Object setProperty(java.lang.String arg0, java.lang.String arg1)
		~void load(java.io.Reader arg0)
		~void load(java.io.InputStream arg0)
		~void forEach(java.util.function.BiConsumer<? super java.lang.Object, ? super java.lang.Object> arg0)
		+boolean containsKey(java.lang.Object arg0)
		~java.lang.Object computeIfAbsent(java.lang.Object arg0, java.util.function.Function<? super java.lang.Object, ?> arg1)
		+void save(java.io.OutputStream arg0, java.lang.String arg1)
		+void store(java.io.OutputStream arg0, java.lang.String arg1)
		+void store(java.io.Writer arg0, java.lang.String arg1)
		~void loadFromXML(java.io.InputStream arg0)
		+void storeToXML(java.io.OutputStream arg0, java.lang.String arg1)
		+void storeToXML(java.io.OutputStream arg0, java.lang.String arg1, java.nio.charset.Charset arg2)
		+void storeToXML(java.io.OutputStream arg0, java.lang.String arg1, java.lang.String arg2)
		+java.util.Enumeration propertyNames()
		+java.util.Set stringPropertyNames()
		+java.util.Enumeration keys()
		+boolean containsValue(java.lang.Object arg0)
		+java.util.Set keySet()
		+java.lang.Object getOrDefault(java.lang.Object arg0, java.lang.Object arg1)
		~java.lang.Object computeIfPresent(java.lang.Object arg0, java.util.function.BiFunction<? super java.lang.Object, ? super java.lang.Object, ?> arg1)
		~void wait(long arg0)
		~void wait(long arg0, int arg1)
		~void wait()
		~java.lang.Class getClass()
		~void notify()
		~void notifyAll()
	}
}

fr.ema.dedal.dedalToB.Activator --> java.lang.String : PLUGIN_ID
fr.ema.dedal.dedalToB.Activator --> fr.ema.dedal.dedalToB.Activator : plugin
fr.ema.dedal.dedalToB.main.GenerateAll --> java.lang.String : MODULE_FILE_NAME
fr.ema.dedal.dedalToB.main.GenerateAll --> java.lang.String : TEMPLATE_NAMES
fr.ema.dedal.dedalToB.main.GenerateAll --> java.lang.String : propertiesFiles
fr.ema.dedal.dedalToB.main.GenerateArchConcepts --> java.lang.String : MODULE_FILE_NAME
fr.ema.dedal.dedalToB.main.GenerateArchConcepts --> java.lang.String : TEMPLATE_NAMES
fr.ema.dedal.dedalToB.main.GenerateArchConcepts --> java.lang.String : propertiesFiles
fr.ema.dedal.dedalToB.main.GenerateArchSpec --> java.lang.String : MODULE_FILE_NAME
fr.ema.dedal.dedalToB.main.GenerateArchSpec --> java.lang.String : TEMPLATE_NAMES
fr.ema.dedal.dedalToB.main.GenerateArchSpec --> java.lang.String : propertiesFiles
fr.ema.dedal.dedalToB.main.MGenerateArchAssm --> java.lang.String : MODULE_FILE_NAME
fr.ema.dedal.dedalToB.main.MGenerateArchAssm --> java.lang.String : TEMPLATE_NAMES
fr.ema.dedal.dedalToB.main.MGenerateArchAssm --> java.lang.String : propertiesFiles
fr.ema.dedal.dedalToB.main.MGenerateArchConfig --> java.lang.String : MODULE_FILE_NAME
fr.ema.dedal.dedalToB.main.MGenerateArchConfig --> java.lang.String : TEMPLATE_NAMES
fr.ema.dedal.dedalToB.main.MGenerateArchConfig --> java.lang.String : propertiesFiles
defaultpackage.Activator --> java.lang.String : PLUGIN_ID
defaultpackage.Activator --> defaultpackage.Activator : plugin
defaultpackage.ChangeParser --> java.lang.String : repo
defaultpackage.DedalManager --> java.lang.String : changeArtifact
defaultpackage.DedalManager --> java.lang.String : initialChangeLevel
defaultpackage.DedalManager --> java.lang.String : EVOLUTION_MANAGER_FILE
defaultpackage.EMFModelLoad --> java.lang.String : path
fr.ema.dedal.design.templates.DedalServices --> defaultpackage.DedalManager : animationHandler
fr.ema.dedal.design.templates.DedalServices --> java.lang.String : evolutionPlan
fr.ema.dedal.design.templates.DedalServices --> dedal.DedalDiagram : dedalInstance
fr.ema.dedal.design.templates.DedalServices --> dedal.Specification : archSpec
fr.ema.dedal.design.templates.DedalServices --> dedal.Configuration : archConfig
fr.ema.dedal.design.templates.DedalServices --> dedal.Assembly : archAssm
dedal.ArchitectureDescription <|-- dedal.Assembly
dedal.Connection <|-- dedal.ClassConnection
dedal.Component <|-- dedal.CompClass
dedal.Component <|-- dedal.CompInstance
dedal.CompClass <|-- dedal.CompositeCompClass
dedal.Port <|-- dedal.CompositePort
dedal.Component <|-- dedal.CompRole
dedal.Component <|-- dedal.CompType
dedal.ArchitectureDescription <|-- dedal.Configuration
dedal.Connection <|-- dedal.InstConnection
dedal.Interaction <|-- dedal.Interface
dedal.Interaction <|-- dedal.Port
dedal.Connection <|-- dedal.RoleConnection
dedal.ArchitectureDescription <|-- dedal.Specification
dedal.ATTRIBUTE_TYPE --> dedal.ATTRIBUTE_TYPE : VALUES_ARRAY
dedal.ATTRIBUTE_TYPE --> dedal.ATTRIBUTE_TYPE : VALUES
dedal.ATTRIBUTE_TYPE --> java.lang.String : name
dedal.ATTRIBUTE_TYPE --> java.lang.String : literal
dedal.DedalFactory --> dedal.DedalFactory : eINSTANCE
dedal.DedalPackage --> java.lang.String : eNAME
dedal.DedalPackage --> java.lang.String : eNS_URI
dedal.DedalPackage --> java.lang.String : eNS_PREFIX
dedal.DedalPackage --> dedal.DedalPackage : eINSTANCE
dedal.DIRECTION --> dedal.DIRECTION : VALUES_ARRAY
dedal.DIRECTION --> dedal.DIRECTION : VALUES
dedal.DIRECTION --> java.lang.String : name
dedal.DIRECTION --> java.lang.String : literal
dedal.ArchitectureDescription <|.. dedal.impl.ArchitectureDescriptionImpl
dedal.impl.ArchitectureDescriptionImpl <|-- dedal.impl.AssemblyImpl
dedal.Assembly <|.. dedal.impl.AssemblyImpl
dedal.Attribute <|.. dedal.impl.AttributeImpl
dedal.impl.ConnectionImpl <|-- dedal.impl.ClassConnectionImpl
dedal.ClassConnection <|.. dedal.impl.ClassConnectionImpl
dedal.impl.ComponentImpl <|-- dedal.impl.CompClassImpl
dedal.CompClass <|.. dedal.impl.CompClassImpl
dedal.impl.ComponentImpl <|-- dedal.impl.CompInstanceImpl
dedal.CompInstance <|.. dedal.impl.CompInstanceImpl
dedal.Component <|.. dedal.impl.ComponentImpl
dedal.impl.CompClassImpl <|-- dedal.impl.CompositeCompClassImpl
dedal.CompositeCompClass <|.. dedal.impl.CompositeCompClassImpl
dedal.impl.PortImpl <|-- dedal.impl.CompositePortImpl
dedal.CompositePort <|.. dedal.impl.CompositePortImpl
dedal.impl.ComponentImpl <|-- dedal.impl.CompRoleImpl
dedal.CompRole <|.. dedal.impl.CompRoleImpl
dedal.impl.ComponentImpl <|-- dedal.impl.CompTypeImpl
dedal.CompType <|.. dedal.impl.CompTypeImpl
dedal.impl.ArchitectureDescriptionImpl <|-- dedal.impl.ConfigurationImpl
dedal.Configuration <|.. dedal.impl.ConfigurationImpl
dedal.Connection <|.. dedal.impl.ConnectionImpl
dedal.DedalDiagram <|.. dedal.impl.DedalDiagramImpl
dedal.DedalFactory <|.. dedal.impl.DedalFactoryImpl
dedal.DedalPackage <|.. dedal.impl.DedalPackageImpl
dedal.impl.ConnectionImpl <|-- dedal.impl.InstConnectionImpl
dedal.InstConnection <|.. dedal.impl.InstConnectionImpl
dedal.Interaction <|.. dedal.impl.InteractionImpl
dedal.impl.InteractionImpl <|-- dedal.impl.InterfaceImpl
dedal.Interface <|.. dedal.impl.InterfaceImpl
dedal.InterfaceType <|.. dedal.impl.InterfaceTypeImpl
dedal.Parameter <|.. dedal.impl.ParameterImpl
dedal.impl.InteractionImpl <|-- dedal.impl.PortImpl
dedal.Port <|.. dedal.impl.PortImpl
dedal.Repository <|.. dedal.impl.RepositoryImpl
dedal.impl.ConnectionImpl <|-- dedal.impl.RoleConnectionImpl
dedal.RoleConnection <|.. dedal.impl.RoleConnectionImpl
dedal.Signature <|.. dedal.impl.SignatureImpl
dedal.impl.ArchitectureDescriptionImpl <|-- dedal.impl.SpecificationImpl
dedal.Specification <|.. dedal.impl.SpecificationImpl
dedal.impl.ArchitectureDescriptionImpl --> java.lang.String : NAME_EDEFAULT
dedal.impl.ArchitectureDescriptionImpl --> java.lang.String : name
dedal.impl.ArchitectureDescriptionImpl --> dedal.InterfaceType : interfaceTypes
dedal.impl.AssemblyImpl --> dedal.CompInstance : assmComponents
dedal.impl.AssemblyImpl --> dedal.Configuration : instantiates
dedal.impl.AssemblyImpl --> dedal.InstConnection : assemblyConnections
dedal.impl.AttributeImpl --> java.lang.String : NAME_EDEFAULT
dedal.impl.AttributeImpl --> java.lang.String : name
dedal.impl.AttributeImpl --> java.lang.String : TYPE_EDEFAULT
dedal.impl.AttributeImpl --> java.lang.String : type
dedal.impl.ClassConnectionImpl --> dedal.CompClass : clientClassElem
dedal.impl.ClassConnectionImpl --> dedal.CompClass : serverClassElem
dedal.impl.CompClassImpl --> dedal.CompRole : realizes
dedal.impl.CompClassImpl --> dedal.CompType : implements_
dedal.impl.CompClassImpl --> dedal.Attribute : attributes
dedal.impl.CompClassImpl --> dedal.CompInstance : content
dedal.impl.CompInstanceImpl --> dedal.CompClass : instantiates
dedal.impl.CompInstanceImpl --> dedal.CompRole : role
dedal.impl.ComponentImpl --> java.lang.String : NAME_EDEFAULT
dedal.impl.ComponentImpl --> java.lang.String : name
dedal.impl.ComponentImpl --> dedal.Interaction : compInterfaces
dedal.impl.ComponentImpl --> java.lang.String : ID_EDEFAULT
dedal.impl.ComponentImpl --> java.lang.String : id
dedal.impl.CompositeCompClassImpl --> dedal.Configuration : uses
dedal.impl.CompositeCompClassImpl --> dedal.Interaction : delegatedInterfaces
dedal.impl.CompositePortImpl --> dedal.Port : ports
dedal.impl.ConfigurationImpl --> dedal.CompClass : configComponents
dedal.impl.ConfigurationImpl --> dedal.Specification : implements_
dedal.impl.ConfigurationImpl --> dedal.ClassConnection : configConnections
dedal.impl.ConfigurationImpl --> dedal.CompType : comptypes
dedal.impl.ConnectionImpl --> dedal.Interaction : serverIntElem
dedal.impl.ConnectionImpl --> dedal.Interaction : clientIntElem
dedal.impl.ConnectionImpl --> java.lang.String : REF_ID_EDEFAULT
dedal.impl.ConnectionImpl --> java.lang.String : refID
dedal.impl.ConnectionImpl --> java.lang.String : PROPERTY_EDEFAULT
dedal.impl.ConnectionImpl --> java.lang.String : property
dedal.impl.DedalDiagramImpl --> dedal.ArchitectureDescription : architectureDescriptions
dedal.impl.DedalDiagramImpl --> java.lang.String : NAME_EDEFAULT
dedal.impl.DedalDiagramImpl --> java.lang.String : name
dedal.impl.DedalDiagramImpl --> dedal.Repository : repositories
dedal.impl.InstConnectionImpl --> dedal.CompInstance : clientInstElem
dedal.impl.InstConnectionImpl --> dedal.CompInstance : serverInstElem
dedal.impl.InteractionImpl --> java.lang.String : NAME_EDEFAULT
dedal.impl.InteractionImpl --> java.lang.String : name
dedal.impl.InterfaceImpl --> dedal.DIRECTION : DIRECTION_EDEFAULT
dedal.impl.InterfaceImpl --> dedal.DIRECTION : direction
dedal.impl.InterfaceImpl --> dedal.InterfaceType : type
dedal.impl.InterfaceImpl --> dedal.Interface : delegation
dedal.impl.InterfaceImpl --> dedal.Interface : instantiates
dedal.impl.InterfaceTypeImpl --> java.lang.String : NAME_EDEFAULT
dedal.impl.InterfaceTypeImpl --> java.lang.String : name
dedal.impl.InterfaceTypeImpl --> dedal.Signature : signatures
dedal.impl.ParameterImpl --> java.lang.String : NAME_EDEFAULT
dedal.impl.ParameterImpl --> java.lang.String : name
dedal.impl.ParameterImpl --> java.lang.String : TYPE_EDEFAULT
dedal.impl.ParameterImpl --> java.lang.String : type
dedal.impl.ParameterImpl --> java.lang.String : ID_EDEFAULT
dedal.impl.ParameterImpl --> java.lang.String : id
dedal.impl.PortImpl --> dedal.Interface : interfaces
dedal.impl.RepositoryImpl --> java.lang.String : NAME_EDEFAULT
dedal.impl.RepositoryImpl --> java.lang.String : name
dedal.impl.RepositoryImpl --> dedal.Component : components
dedal.impl.RepositoryImpl --> dedal.InterfaceType : interfaceTypes
dedal.impl.RoleConnectionImpl --> dedal.CompRole : clientCompElem
dedal.impl.RoleConnectionImpl --> dedal.CompRole : serverCompElem
dedal.impl.SignatureImpl --> java.lang.String : NAME_EDEFAULT
dedal.impl.SignatureImpl --> java.lang.String : name
dedal.impl.SignatureImpl --> java.lang.String : TYPE_EDEFAULT
dedal.impl.SignatureImpl --> java.lang.String : type
dedal.impl.SignatureImpl --> dedal.Parameter : parameters
dedal.impl.SignatureImpl --> java.lang.String : ID_EDEFAULT
dedal.impl.SignatureImpl --> java.lang.String : id
dedal.impl.SpecificationImpl --> dedal.CompRole : specComponents
dedal.impl.SpecificationImpl --> dedal.RoleConnection : specConnections
dedal.util.DedalAdapterFactory --> dedal.DedalPackage : modelPackage
dedal.util.DedalAdapterFactory --> dedal.util.DedalSwitch : modelSwitch
dedal.util.DedalSwitch --> dedal.DedalPackage : modelPackage
dedal.provider.ArchitectureDescriptionItemProvider <|-- dedal.provider.AssemblyItemProvider
dedal.provider.ConnectionItemProvider <|-- dedal.provider.ClassConnectionItemProvider
dedal.provider.ComponentItemProvider <|-- dedal.provider.CompClassItemProvider
dedal.provider.ComponentItemProvider <|-- dedal.provider.CompInstanceItemProvider
dedal.provider.CompClassItemProvider <|-- dedal.provider.CompositeCompClassItemProvider
dedal.provider.PortItemProvider <|-- dedal.provider.CompositePortItemProvider
dedal.provider.ComponentItemProvider <|-- dedal.provider.CompRoleItemProvider
dedal.provider.ComponentItemProvider <|-- dedal.provider.CompTypeItemProvider
dedal.provider.ArchitectureDescriptionItemProvider <|-- dedal.provider.ConfigurationItemProvider
dedal.util.DedalAdapterFactory <|-- dedal.provider.DedalItemProviderAdapterFactory
dedal.provider.ConnectionItemProvider <|-- dedal.provider.InstConnectionItemProvider
dedal.provider.InteractionItemProvider <|-- dedal.provider.InterfaceItemProvider
dedal.provider.InteractionItemProvider <|-- dedal.provider.PortItemProvider
dedal.provider.ConnectionItemProvider <|-- dedal.provider.RoleConnectionItemProvider
dedal.provider.ArchitectureDescriptionItemProvider <|-- dedal.provider.SpecificationItemProvider
dedal.provider.DedalEditPlugin --> dedal.provider.DedalEditPlugin : INSTANCE
dedal.provider.DedalEditPlugin --> dedal.provider.Implementation : plugin
dedal.provider.DedalItemProviderAdapterFactory --> java.lang.Object : supportedTypes
dedal.provider.DedalItemProviderAdapterFactory --> dedal.provider.InterfaceItemProvider : interfaceItemProvider
dedal.provider.DedalItemProviderAdapterFactory --> dedal.provider.PortItemProvider : portItemProvider
dedal.provider.DedalItemProviderAdapterFactory --> dedal.provider.CompositePortItemProvider : compositePortItemProvider
dedal.provider.DedalItemProviderAdapterFactory --> dedal.provider.InterfaceTypeItemProvider : interfaceTypeItemProvider
dedal.provider.DedalItemProviderAdapterFactory --> dedal.provider.SignatureItemProvider : signatureItemProvider
dedal.provider.DedalItemProviderAdapterFactory --> dedal.provider.ParameterItemProvider : parameterItemProvider
dedal.provider.DedalItemProviderAdapterFactory --> dedal.provider.SpecificationItemProvider : specificationItemProvider
dedal.provider.DedalItemProviderAdapterFactory --> dedal.provider.ConfigurationItemProvider : configurationItemProvider
dedal.provider.DedalItemProviderAdapterFactory --> dedal.provider.AssemblyItemProvider : assemblyItemProvider
dedal.provider.DedalItemProviderAdapterFactory --> dedal.provider.CompRoleItemProvider : compRoleItemProvider
dedal.provider.DedalItemProviderAdapterFactory --> dedal.provider.CompClassItemProvider : compClassItemProvider
dedal.provider.DedalItemProviderAdapterFactory --> dedal.provider.CompInstanceItemProvider : compInstanceItemProvider
dedal.provider.DedalItemProviderAdapterFactory --> dedal.provider.RoleConnectionItemProvider : roleConnectionItemProvider
dedal.provider.DedalItemProviderAdapterFactory --> dedal.provider.ClassConnectionItemProvider : classConnectionItemProvider
dedal.provider.DedalItemProviderAdapterFactory --> dedal.provider.InstConnectionItemProvider : instConnectionItemProvider
dedal.provider.DedalItemProviderAdapterFactory --> dedal.provider.DedalDiagramItemProvider : dedalDiagramItemProvider
dedal.provider.DedalItemProviderAdapterFactory --> dedal.provider.CompositeCompClassItemProvider : compositeCompClassItemProvider
dedal.provider.DedalItemProviderAdapterFactory --> dedal.provider.CompTypeItemProvider : compTypeItemProvider
dedal.provider.DedalItemProviderAdapterFactory --> dedal.provider.RepositoryItemProvider : repositoryItemProvider
dedal.provider.DedalItemProviderAdapterFactory --> dedal.provider.AttributeItemProvider : attributeItemProvider
dedal.presentation.DedalEditor --> java.lang.String : FILE_EXTENSIONS
dedal.presentation.DedalEditor --> java.lang.String : FILE_EXTENSION_FILTERS
dedal.presentation.DedalEditorAdvisor --> java.lang.String : FILE_EXTENSION_FILTERS
dedal.presentation.DedalEditorPlugin --> dedal.presentation.DedalEditorPlugin : INSTANCE
dedal.presentation.DedalEditorPlugin --> dedal.presentation.Implementation : plugin
dedal.presentation.DedalModelWizard --> java.lang.String : FILE_EXTENSIONS
dedal.presentation.DedalModelWizard --> java.lang.String : FORMATTED_FILE_EXTENSIONS
dedal.presentation.DedalModelWizard --> dedal.DedalPackage : dedalPackage
dedal.presentation.DedalModelWizard --> dedal.DedalFactory : dedalFactory
dedal.presentation.DedalModelWizard --> dedal.presentation.DedalModelWizardNewFileCreationPage : newFileCreationPage
dedal.presentation.DedalModelWizard --> dedal.presentation.DedalModelWizardInitialObjectCreationPage : initialObjectCreationPage
dedal.presentation.DedalModelWizard --> java.lang.String : initialObjectNames
dedal.presentation.DedalModelWizardInitialObjectCreationPage --> java.lang.String : encodings
dedal.presentation.DedalWizard --> dedal.DedalPackage : dedalPackage
dedal.presentation.DedalWizard --> dedal.DedalFactory : dedalFactory
dedal.presentation.DedalWizard --> dedal.presentation.DedalWizardPage : initialPage
dedal.presentation.Perspective --> java.lang.String : ID_PERSPECTIVE
dedal.tests.ArchitectureDescriptionTest <|-- dedal.tests.AssemblyTest
dedal.tests.ConnectionTest <|-- dedal.tests.ClassConnectionTest
dedal.tests.ComponentTest <|-- dedal.tests.CompClassTest
dedal.tests.ComponentTest <|-- dedal.tests.CompInstanceTest
dedal.tests.CompClassTest <|-- dedal.tests.CompositeCompClassTest
dedal.tests.PortTest <|-- dedal.tests.CompositePortTest
dedal.tests.ComponentTest <|-- dedal.tests.CompRoleTest
dedal.tests.ComponentTest <|-- dedal.tests.CompTypeTest
dedal.tests.ArchitectureDescriptionTest <|-- dedal.tests.ConfigurationTest
dedal.tests.ConnectionTest <|-- dedal.tests.InstConnectionTest
dedal.tests.InteractionTest <|-- dedal.tests.InterfaceTest
dedal.tests.InteractionTest <|-- dedal.tests.PortTest
dedal.tests.ConnectionTest <|-- dedal.tests.RoleConnectionTest
dedal.tests.ArchitectureDescriptionTest <|-- dedal.tests.SpecificationTest
dedal.tests.ArchitectureDescriptionTest --> dedal.ArchitectureDescription : fixture
dedal.tests.AttributeTest --> dedal.Attribute : fixture
dedal.tests.ComponentTest --> dedal.Component : fixture
dedal.tests.ConnectionTest --> dedal.Connection : fixture
dedal.tests.DedalDiagramTest --> dedal.DedalDiagram : fixture
dedal.tests.InteractionTest --> dedal.Interaction : fixture
dedal.tests.InterfaceTypeTest --> dedal.InterfaceType : fixture
dedal.tests.ParameterTest --> dedal.Parameter : fixture
dedal.tests.RepositoryTest --> dedal.Repository : fixture
dedal.tests.SignatureTest --> dedal.Signature : fixture
fr.ema.dedal.xtext.AbstractDedalADLRuntimeModule <|-- fr.ema.dedal.xtext.DedalADLRuntimeModule
fr.ema.dedal.xtext.DedalADLStandaloneSetupGenerated <|-- fr.ema.dedal.xtext.DedalADLStandaloneSetup
fr.ema.dedal.xtext.AbstractDedalADLRuntimeModule --> java.util.Properties : properties
fr.ema.dedal.xtext.parser.antlr.DedalADLParser --> fr.ema.dedal.xtext.services.DedalADLGrammarAccess : grammarAccess
fr.ema.dedal.xtext.parser.antlr.internal.InternalDedalADLLexer --> fr.ema.dedal.xtext.parser.antlr.internal.DFA14 : dfa14
fr.ema.dedal.xtext.parser.antlr.internal.InternalDedalADLLexer --> java.lang.String : DFA14_eotS
fr.ema.dedal.xtext.parser.antlr.internal.InternalDedalADLLexer --> java.lang.String : DFA14_eofS
fr.ema.dedal.xtext.parser.antlr.internal.InternalDedalADLLexer --> java.lang.String : DFA14_minS
fr.ema.dedal.xtext.parser.antlr.internal.InternalDedalADLLexer --> java.lang.String : DFA14_maxS
fr.ema.dedal.xtext.parser.antlr.internal.InternalDedalADLLexer --> java.lang.String : DFA14_acceptS
fr.ema.dedal.xtext.parser.antlr.internal.InternalDedalADLLexer --> java.lang.String : DFA14_specialS
fr.ema.dedal.xtext.parser.antlr.internal.InternalDedalADLLexer --> java.lang.String : DFA14_transitionS
fr.ema.dedal.xtext.parser.antlr.internal.InternalDedalADLParser --> java.lang.String : tokenNames
fr.ema.dedal.xtext.parser.antlr.internal.InternalDedalADLParser --> fr.ema.dedal.xtext.services.DedalADLGrammarAccess : grammarAccess
fr.ema.dedal.xtext.serializer.AbstractDedalADLSemanticSequencer <|-- fr.ema.dedal.xtext.serializer.DedalADLSemanticSequencer
fr.ema.dedal.xtext.serializer.AbstractDedalADLSyntacticSequencer <|-- fr.ema.dedal.xtext.serializer.DedalADLSyntacticSequencer
fr.ema.dedal.xtext.serializer.AbstractDedalADLSemanticSequencer --> fr.ema.dedal.xtext.services.DedalADLGrammarAccess : grammarAccess
fr.ema.dedal.xtext.serializer.AbstractDedalADLSyntacticSequencer --> fr.ema.dedal.xtext.services.DedalADLGrammarAccess : grammarAccess
fr.ema.dedal.xtext.services.DedalADLGrammarAccess --> fr.ema.dedal.xtext.services.DedalDiagramElements : pDedalDiagram
fr.ema.dedal.xtext.services.DedalADLGrammarAccess --> fr.ema.dedal.xtext.services.ArchitectureDescriptionElements : pArchitectureDescription
fr.ema.dedal.xtext.services.DedalADLGrammarAccess --> fr.ema.dedal.xtext.services.ComponentElements : pComponent
fr.ema.dedal.xtext.services.DedalADLGrammarAccess --> fr.ema.dedal.xtext.services.CompClassElements : pCompClass
fr.ema.dedal.xtext.services.DedalADLGrammarAccess --> fr.ema.dedal.xtext.services.InteractionElements : pInteraction
fr.ema.dedal.xtext.services.DedalADLGrammarAccess --> fr.ema.dedal.xtext.services.PortElements : pPort
fr.ema.dedal.xtext.services.DedalADLGrammarAccess --> fr.ema.dedal.xtext.services.EStringElements : pEString
fr.ema.dedal.xtext.services.DedalADLGrammarAccess --> fr.ema.dedal.xtext.services.RepositoryElements : pRepository
fr.ema.dedal.xtext.services.DedalADLGrammarAccess --> fr.ema.dedal.xtext.services.InterfaceTypeElements : pInterfaceType
fr.ema.dedal.xtext.services.DedalADLGrammarAccess --> fr.ema.dedal.xtext.services.EIntElements : pEInt
fr.ema.dedal.xtext.services.DedalADLGrammarAccess --> fr.ema.dedal.xtext.services.SignatureElements : pSignature
fr.ema.dedal.xtext.services.DedalADLGrammarAccess --> fr.ema.dedal.xtext.services.ParameterElements : pParameter
fr.ema.dedal.xtext.services.DedalADLGrammarAccess --> fr.ema.dedal.xtext.services.SpecificationElements : pSpecification
fr.ema.dedal.xtext.services.DedalADLGrammarAccess --> fr.ema.dedal.xtext.services.Specification_nameElements : pSpecification_name
fr.ema.dedal.xtext.services.DedalADLGrammarAccess --> fr.ema.dedal.xtext.services.CompRoleElements : pCompRole
fr.ema.dedal.xtext.services.DedalADLGrammarAccess --> fr.ema.dedal.xtext.services.Component_role_nameElements : pComponent_role_name
fr.ema.dedal.xtext.services.DedalADLGrammarAccess --> fr.ema.dedal.xtext.services.InterfaceElements : pInterface
fr.ema.dedal.xtext.services.DedalADLGrammarAccess --> fr.ema.dedal.xtext.services.Interface_nameElements : pInterface_name
fr.ema.dedal.xtext.services.DedalADLGrammarAccess --> fr.ema.dedal.xtext.services.DIRECTIONElements : eDIRECTION
fr.ema.dedal.xtext.services.DedalADLGrammarAccess --> fr.ema.dedal.xtext.services.RoleConnectionElements : pRoleConnection
fr.ema.dedal.xtext.services.DedalADLGrammarAccess --> fr.ema.dedal.xtext.services.Connection_nameElements : pConnection_name
fr.ema.dedal.xtext.services.DedalADLGrammarAccess --> fr.ema.dedal.xtext.services.ConfigurationElements : pConfiguration
fr.ema.dedal.xtext.services.DedalADLGrammarAccess --> fr.ema.dedal.xtext.services.Configuration_nameElements : pConfiguration_name
fr.ema.dedal.xtext.services.DedalADLGrammarAccess --> fr.ema.dedal.xtext.services.Component_class_nameElements : pComponent_class_name
fr.ema.dedal.xtext.services.DedalADLGrammarAccess --> fr.ema.dedal.xtext.services.CompTypeElements : pCompType
fr.ema.dedal.xtext.services.DedalADLGrammarAccess --> fr.ema.dedal.xtext.services.Component_type_nameElements : pComponent_type_name
fr.ema.dedal.xtext.services.DedalADLGrammarAccess --> fr.ema.dedal.xtext.services.CompClass_ImplElements : pCompClass_Impl
fr.ema.dedal.xtext.services.DedalADLGrammarAccess --> fr.ema.dedal.xtext.services.AttributeElements : pAttribute
fr.ema.dedal.xtext.services.DedalADLGrammarAccess --> fr.ema.dedal.xtext.services.Attribute_nameElements : pAttribute_name
fr.ema.dedal.xtext.services.DedalADLGrammarAccess --> fr.ema.dedal.xtext.services.ATTRIBUTE_TYPEElements : eATTRIBUTE_TYPE
fr.ema.dedal.xtext.services.DedalADLGrammarAccess --> fr.ema.dedal.xtext.services.CompositeCompClassElements : pCompositeCompClass
fr.ema.dedal.xtext.services.DedalADLGrammarAccess --> fr.ema.dedal.xtext.services.Delegated_interface_listElements : pDelegated_interface_list
fr.ema.dedal.xtext.services.DedalADLGrammarAccess --> fr.ema.dedal.xtext.services.Inner_interfaceElements : pInner_interface
fr.ema.dedal.xtext.services.DedalADLGrammarAccess --> fr.ema.dedal.xtext.services.Outer_interfaceElements : pOuter_interface
fr.ema.dedal.xtext.services.DedalADLGrammarAccess --> fr.ema.dedal.xtext.services.Component_class_identifierElements : pComponent_class_identifier
fr.ema.dedal.xtext.services.DedalADLGrammarAccess --> fr.ema.dedal.xtext.services.Connector_typeElements : pConnector_type
fr.ema.dedal.xtext.services.DedalADLGrammarAccess --> fr.ema.dedal.xtext.services.Connector_type_nameElements : pConnector_type_name
fr.ema.dedal.xtext.services.DedalADLGrammarAccess --> fr.ema.dedal.xtext.services.Connector_classElements : pConnector_class
fr.ema.dedal.xtext.services.DedalADLGrammarAccess --> fr.ema.dedal.xtext.services.Connector_class_nameElements : pConnector_class_name
fr.ema.dedal.xtext.services.DedalADLGrammarAccess --> fr.ema.dedal.xtext.services.ClassConnectionElements : pClassConnection
fr.ema.dedal.xtext.services.DedalADLGrammarAccess --> fr.ema.dedal.xtext.services.Port_ImplElements : pPort_Impl
fr.ema.dedal.xtext.services.DedalADLGrammarAccess --> fr.ema.dedal.xtext.services.CompositePortElements : pCompositePort
fr.ema.dedal.xtext.services.DedalADLGrammarAccess --> fr.ema.dedal.xtext.services.AssemblyElements : pAssembly
fr.ema.dedal.xtext.services.DedalADLGrammarAccess --> fr.ema.dedal.xtext.services.Assembly_nameElements : pAssembly_name
fr.ema.dedal.xtext.services.DedalADLGrammarAccess --> fr.ema.dedal.xtext.services.ConstraintElements : pConstraint
fr.ema.dedal.xtext.services.DedalADLGrammarAccess --> fr.ema.dedal.xtext.services.CompInstanceElements : pCompInstance
fr.ema.dedal.xtext.services.DedalADLGrammarAccess --> fr.ema.dedal.xtext.services.Component_instance_nameElements : pComponent_instance_name
fr.ema.dedal.xtext.services.DedalADLGrammarAccess --> fr.ema.dedal.xtext.services.InstConnectionElements : pInstConnection
fr.ema.dedal.xtext.services.DedalADLGrammarAccess --> fr.ema.dedal.xtext.services.Constraint_expressionElements : pConstraint_expression
fr.ema.dedal.xtext.services.DedalADLGrammarAccess --> fr.ema.dedal.xtext.services.Logical_constraintElements : pLogical_constraint
fr.ema.dedal.xtext.services.DedalADLGrammarAccess --> fr.ema.dedal.xtext.services.Relational_constraintElements : pRelational_constraint
fr.ema.dedal.xtext.services.DedalADLGrammarAccess --> fr.ema.dedal.xtext.services.Instance_attributeElements : pInstance_attribute
fr.ema.dedal.xtext.services.DedalADLGrammarAccess --> fr.ema.dedal.xtext.services.Attribute_valueElements : pAttribute_value
fr.ema.dedal.xtext.services.DedalADLGrammarAccess --> fr.ema.dedal.xtext.services.VersionElements : pVersion
fr.ema.dedal.xtext.services.DedalADLGrammarAccess --> fr.ema.dedal.xtext.services.Pre_versionElements : pPre_version
fr.ema.dedal.xtext.services.DedalADLGrammarAccess --> fr.ema.dedal.xtext.services.ChangeElements : pChange
fr.ema.dedal.xtext.services.DedalADLGrammarAccess --> fr.ema.dedal.xtext.services.Change_timeElements : pChange_time
fr.ema.dedal.xtext.services.DedalADLGrammarAccess --> fr.ema.dedal.xtext.services.Initial_levelElements : pInitial_level
fr.ema.dedal.xtext.services.DedalADLGrammarAccess --> fr.ema.dedal.xtext.services.Change_operationElements : pChange_operation
fr.ema.dedal.xtext.services.DedalADLGrammarAccess --> fr.ema.dedal.xtext.services.Architecture_elementElements : pArchitecture_element
fr.ema.dedal.xtext.services.DedalADLGrammarAccess --> fr.ema.dedal.xtext.services.Specification_elementElements : pSpecification_element
fr.ema.dedal.xtext.services.DedalADLGrammarAccess --> fr.ema.dedal.xtext.services.Configuration_elementElements : pConfiguration_element
fr.ema.dedal.xtext.services.DedalADLGrammarAccess --> fr.ema.dedal.xtext.services.Assembly_elementElements : pAssembly_element
fr.ema.dedal.xtext.services.DedalADLGrammarAccess --> fr.ema.dedal.xtext.services.Change_purposeElements : pChange_purpose
fr.ema.dedal.xtext.services.DedalADLGrammarAccess --> fr.ema.dedal.xtext.services.Change_originElements : pChange_origin
fr.ema.dedal.xtext.validation.AbstractDedalADLValidator <|-- fr.ema.dedal.xtext.validation.DedalADLValidator
fr.ema.dedal.xtext.formatting.DedalADLFormatter --> fr.ema.dedal.xtext.services.DedalADLGrammarAccess : _dedalADLGrammarAccess
fr.ema.dedal.xtext.formatting2.DedalADLFormatter --> fr.ema.dedal.xtext.services.DedalADLGrammarAccess : _dedalADLGrammarAccess
fr.ema.dedal.xtext.ui.AbstractDedalADLUiModule <|-- fr.ema.dedal.xtext.ui.DedalADLUiModule
fr.ema.dedal.xtext.ui.contentassist.AbstractDedalADLProposalProvider <|-- fr.ema.dedal.xtext.ui.contentassist.DedalADLProposalProvider
fr.ema.dedal.xtext.ui.contentassist.antlr.DedalADLParser <|-- fr.ema.dedal.xtext.ui.contentassist.antlr.PartialDedalADLContentAssistParser
fr.ema.dedal.xtext.ui.contentassist.antlr.DedalADLParser --> fr.ema.dedal.xtext.services.DedalADLGrammarAccess : grammarAccess
fr.ema.dedal.xtext.ui.contentassist.antlr.DedalADLParser --> java.lang.String : nameMappings
fr.ema.dedal.xtext.ui.contentassist.antlr.internal.InternalDedalADLLexer --> fr.ema.dedal.xtext.ui.contentassist.antlr.internal.DFA14 : dfa14
fr.ema.dedal.xtext.ui.contentassist.antlr.internal.InternalDedalADLLexer --> java.lang.String : DFA14_eotS
fr.ema.dedal.xtext.ui.contentassist.antlr.internal.InternalDedalADLLexer --> java.lang.String : DFA14_eofS
fr.ema.dedal.xtext.ui.contentassist.antlr.internal.InternalDedalADLLexer --> java.lang.String : DFA14_minS
fr.ema.dedal.xtext.ui.contentassist.antlr.internal.InternalDedalADLLexer --> java.lang.String : DFA14_maxS
fr.ema.dedal.xtext.ui.contentassist.antlr.internal.InternalDedalADLLexer --> java.lang.String : DFA14_acceptS
fr.ema.dedal.xtext.ui.contentassist.antlr.internal.InternalDedalADLLexer --> java.lang.String : DFA14_specialS
fr.ema.dedal.xtext.ui.contentassist.antlr.internal.InternalDedalADLLexer --> java.lang.String : DFA14_transitionS
fr.ema.dedal.xtext.ui.contentassist.antlr.internal.InternalDedalADLParser --> java.lang.String : tokenNames
fr.ema.dedal.xtext.ui.contentassist.antlr.internal.InternalDedalADLParser --> fr.ema.dedal.xtext.services.DedalADLGrammarAccess : grammarAccess
fr.ema.dedal.xtext.ui.internal.DedalADLActivator --> java.lang.String : FR_EMA_DEDAL_XTEXT_DEDALADL
fr.ema.dedal.xtext.ui.internal.DedalADLActivator --> fr.ema.dedal.xtext.ui.internal.DedalADLActivator : INSTANCE
fr.ema.dedal.xtext.ui.internal.DedalADLActivator --> java.lang.String : injectors
fr.ema.dedalstudio.ApplicationWorkbenchAdvisor --> java.lang.String : PERSPECTIVE_ID
fr.ema.dedalstudio.handlers.InspektHandler --> java.lang.String : defaultPath
@enduml
